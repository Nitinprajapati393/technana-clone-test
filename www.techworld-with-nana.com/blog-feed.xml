<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[TechWorld with Nana]]></title><description><![CDATA[TechWorld with Nana]]></description><link>https://www.techworld-with-nana.com/blog</link><generator>RSS for Node</generator><lastBuildDate>Wed, 31 Jul 2024 12:30:39 GMT</lastBuildDate><atom:link href="https://www.techworld-with-nana.com/blog-feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[DevOps vs DevSecOps]]></title><description><![CDATA[Understand why DevSecOps emerged and how it compares to DevOps]]></description><link>https://www.techworld-with-nana.com/post/devsecops-vs-devops</link><guid isPermaLink="false">669296af3119d179bea14af2</guid><category><![CDATA[DevSecOps]]></category><category><![CDATA[DevOps Concepts]]></category><pubDate>Thu, 25 Jul 2024 11:42:28 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_a1c7768d7f1441559bf1c058d98bfe58~mv2.png/v1/fit/w_1000,h_720,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p>#devsecops #devops</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a1c7768d7f1441559bf1c058d98bfe58~mv2.png/v1/fit/w_1000,h_720,al_c,q_80/file.png"title="DevOps vs DevSecOps - Understand why DevSecOps emerged"alt="DevOps vs DevSecOps - TechWorld with Nana resource"></figure>
<p><br /></p>
<h2><strong>Overview of Topics covered</strong></h2>
<ul>
  <li><p><u><a href="#e64gb" rel="noopener noreferrer">What is DevOps - The Simplified Definition</a></u></p></li>
  <li><p><u><a href="#xqyd119503" rel="noopener noreferrer">Security as Afterthought in DevOps</a></u></p></li>
  <li><p><u><a href="#i1v2w26352" rel="noopener noreferrer">Why is DevSecOps so important?</a></u></p></li>
  <li><p><u><a href="#7xs2728598" rel="noopener noreferrer">DevSecOps as part of DevOps | not DevSecOps vs DevOps</a></u>
</p></li>
</ul>
<hr>
<p><br /></p>
<h3>What is DevOps SIMPLY explained</h3>
<p><br /></p>
<a href="https://www.youtube.com/watch?v=0yWAtQ6wYNM"><img src="https://i.ytimg.com/vi/0yWAtQ6wYNM/maxresdefault.jpg" width="1280" height="720"></a>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;">Here is my <strong>simplified definition</strong> of what is DevOps:</p>
<p><br /></p>
<p style="text-align: justify;">What it really comes down to eventually is:</p>
<p><br /></p>
<p style="text-align: justify;">This applies whether it’s application or infrastructure changes ☝️</p>
<figure><img src="https://static.wixstatic.com/media/a11f24_0142f548e9cd44b8b103a0aa942e2bb8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Security as a bottleneck in DevOps - TechWorld with Nana resource"></figure>
<p><br /></p>
<p>So naturally if security is a bottleneck, that should become part of DevOps issue that we have to eliminate this show stopper.</p>
<p><br /></p>
<p><br /></p>
<p>So DevOps naturally should include security, but as I often say:</p>
<p><br /></p>
<p><br /></p>
<p>So in practice, it so happened that <strong>DevOps left out security</strong>. It focused on development and fast release cycle, but security teams and external pen tests stayed outside the DevOps cycle.</p>
<p><br /></p>
<p><br /></p>
<h3>Security as Afterthought in DevOps</h3>
<p><br /></p>
<p>Now, when we implement DevOps processes in our organization, we end up with streamlined and efficient process of the application development and release, which is happening at a fast pace. </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_b133559c176c40ad8ba9b95c044c54fd~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Security as afterthought in DevOps - TechWorld with Nana resource"></figure>
<p>So we are releasing fast, or trying to release fast, but <strong>all those attempts get blocked by having a manual, slow security checks right before the release</strong>. </p>
<p><br /></p>
<p>These security checks are usually done by security engineers or compliance team or even external pen testers. </p>
<p><br /></p>
<p><br /></p>
<p>And this may take weeks or months ⏳ </p>
<p><br /></p>
<figure><img src="https://media4.giphy.com/media/QBd2kLB5qDmysEXre9/giphy.gif?cid=4672ce52xkan5f95xc1n3ajo5zaldcbv1mddufxzhxgkprza&ep=v1_gifs_search&rid=giphy.gif&ct=g"></figure>
<p><br /></p>
<p><br /></p>
<p>So we are just aggravating the security bottleneck with DevOps.</p>
<p><br /></p>
<p><br /></p>
<h3>This is Why DevSecOps is so important</h3>
<p><br /></p>
<p>So as a reminder, to <strong>highlight the importance of security</strong> in DevOps, DevSecOps emerged.</p>
<p><br /></p>
<p>Also as we saw, security is overarching the entire software development lifecycle (SDLC), all parts and layers. And as you also know, DevOps affects entire software development lifecycle too. </p>
<p><br /></p>
<p>So DevSecOps is taking that overarching security and integrating it in all DevOps steps from start to finish, from automated tests to building and deploying steps:</p>
<figure><img src="https://static.wixstatic.com/media/a11f24_9ba0be3947ef44c4b9c341cd6c92e019~mv2.png/v1/fit/w_1000,h_765,al_c,q_80/file.png"alt="DevSecOps in practice - DevSecOps pipeline - TechWorld with Nana resource"></figure>
<p><br /></p>
<p>So DevSecOps is really: <strong>DevOps that doesn’t forget about security.</strong> </p>
<p><br /></p>
<p>So the responsibility of fixing security issues and secure implementation still lies with individual teams, who have the expertise in those specific areas, but DevSecOps creates an over-stretching CI/CD process and automated processes that measure what’s called the &quot;<strong>security posture</strong>&quot;. </p>
<p><br /></p>
<p>Basically giving us a visibility of how secure your systems are. </p>
<p><br /></p>
<p>That&apos;s what is meant by &quot;DevSecOps&quot; </p>
<p><br /></p>
<p>Now how does DevSecOps do this? How does it integrate security into the DevOps workflows, like a complete CI/CD pipeline? </p>
<p><br /></p>
<p>One core part is integrating automated security checks into the CI/CD like this:</p>
<figure><img src="https://static.wixstatic.com/media/a11f24_c86e6bd6154841dd8f3f1d9ba8284ba3~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="DevSecOps pipeline - TechWorld with Nana DevSecOps bootcamp"></figure>
<p style="text-align: center;"><span style="color: #1d1e21;">Snippet from the </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/46kmwdE" target="_blank">DevSecOps bootcamp</a></span></u><span style="color: #1d1e21;">.</span></p>
<p><br /></p>
<p><br /></p>
<h3>DevSecOps as part of DevOps </h3>
<p><br /></p>
<p>So instead of DevSecOps vs DevOps, we now learned that DevSecOps is really the same as DevOps in theory.   It just emphasizes and re-introduces the integration of security in the whole DevOps workflow in practice.</p>
<p><br /></p>
<p>So overall, <strong>this makes the process fast again </strong>by </p>
<p>✅ reducing the feedback cycle on any security issues, by </p>
<p>✅ infusing the security checks throughout the pipeline,</p>
<p>instead of having it as a big task right before the release.</p>
<p><br /></p>
<p><br /></p>
<h4><span style="color: #1d1e21;"> </span>Learn DevOps before DevSecOps</h4>
<p style="text-align: justify;"><span style="color: #1d1e21;">And that&apos;s why if you want to learn DevSecOps, </span><strong><span style="color: #1d1e21;">you need to first learn the DevOps principles and technologies</span></strong><span style="color: #1d1e21;">:</span></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_bf634c22bd4f4050a07cbdb6fa2ab6f6~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<ul>
  <li><p style="text-align: left;"><span style="color: #1d1e21;">You need to learn the core of DevOps, which is building fully automated CI/CD pipelines</span></p></li>
  <li><p style="text-align: left;"><span style="color: #1d1e21;">You need to learn technologies, like Dock</span></p><p style="text-align: left;"><span style="color: #1d1e21;">er, K8s, Jenkins etc.</span></p></li>
  <li><p style="text-align: left;"><span style="color: #1d1e21;">You need to be able to configure infrastructure on cloud platforms etc.</span></p><p><br /></p><p><br /></p></li>
</ul>
<p style="text-align: justify;"><span style="color: #1d1e21;">And as the most important skillset of a DevOps engineer, you need to </span><strong><span style="color: #1d1e21;">be able to automate all DevOps tasks</span></strong><span style="color: #1d1e21;">, using tools, like:</span></p>
<ul>
  <li><p style="text-align: left;"><span style="color: #1d1e21;">Terraform for automated infrastructure provisioning or</span></p></li>
  <li><p style="text-align: left;"><span style="color: #1d1e21;">Ansible for automated server configuration</span></p></li>
  <li><p style="text-align: left;"><span style="color: #1d1e21;">Python for various DevOps automation tasks.</span></p></li>
</ul>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ac664795ee254e499337bd11ddbd023a~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="DevOps Learning Guide - TechWorld with Nana"></figure>
<p><br /></p>
<p style="text-align: justify;"><span style="color: #1d1e21;">These DevOps skills are becoming more and more demanded in the IT world, but are also one of the most complex to learn. </span><strong><span style="color: #1d1e21;">You need a proper structure and guidance</span></strong><span style="color: #1d1e21;"> to learn these technologies in combination to build end to end DevOps processes, with real-life DevOps projects to learn how to use them in practice. </span></p>
<p><br /></p>
<p style="text-align: justify;"><span style="color: #1d1e21;">And not only learn the tools but really </span><strong><span style="color: #1d1e21;">understand all the concepts behind every configuration</span></strong><span style="color: #1d1e21;">. Plus you want to learn this in simple words and visuals, instead of heavy technical terminology that makes understanding concepts even more difficult ‍♂️</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7e2e21f9d9db46199b5eac995d7ae7ee~mv2.png/v1/fit/w_600,h_600,al_c,q_80/file.png"alt="DevOps Certification by TechWorld with Nana"></figure>
<p style="text-align: justify;"><span style="color: #1d1e21;">That&apos;s why we have 1,000s of engineers ‍‍ every year, learning these skills in our </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/3SmBMkp" target="_blank">DevOps bootcamp</a></span></u><span style="color: #1d1e21;"> to learn the actual real, hands-on DevOps skills. They become Certified DevOps Engineers, who can directly apply the skills in any DevOps project. And learn all the complex topics in-depth, but with the simplest explanations and visuals.</span></p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;">  Our Proven <strong>DevOps Bootcamp Learning Schedule / Roadmap</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7442aa5322e145b5ad28b3b066215f26~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<figure><img src="https://static.wixstatic.com/media/e7182f_f995523a3e0942d3a02f3313f413425b~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p><br /></p>
<p><br /></p>
<h4><span style="color: #1d1e21;"> </span>Add advanced DevSecOps skillset</h4>
<figure><img src="https://static.wixstatic.com/media/e7182f_557a1213845c4be3b5de5e70478a8ae8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Career Levels - TechWorld with Nana Resource"></figure>
<p><br /></p>
<p><span style="color: #1d1e21;">Now only </span><strong><span style="color: #1d1e21;">after</span></strong><span style="color: #1d1e21;"> you have built a strong knowledge of DevOps, you can add the advanced DevSecOps skillset on top of that. </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">Because just like DevOps, DevSecOps is a concept affecting the entire software development lifecycle.  That&apos;s why you need to learn the basic level of DevOps and then move on to the </span><strong><span style="color: #1d1e21;">next level of adding and infusing security in that complete lifecycle</span></strong><span style="color: #1d1e21;">. </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">And that&apos;s why we also recommend all our engineering students completing our </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/3SmBMkp" target="_blank">DevOps bootcamp</a></span></u><span style="color: #1d1e21;"> first and then doing </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/46kmwdE" target="_blank">DevSecOps bootcamp</a></span></u><span style="color: #1d1e21;"><a href="https://bit.ly/46kmwdE" target="_blank">.</a></span><span style="color: #1d1e21;"> There is no shortcut to success, but with the right resources and guidance you can definitely speed up the journey significantly and reduce the pain in the process </span></p>
<p><br /></p>
<p style="text-align: justify;">  Our Proven <strong>DevSecOps Bootcamp Learning Schedule / Roadmap</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_851bfbdb95f3426481b5f5fd8c2984ed~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<figure><img src="https://static.wixstatic.com/media/e7182f_5bd38df7528b4f94a28c46afa99695f8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<figure><img src="https://static.wixstatic.com/media/e7182f_e1ea914f72034956a85bf37177cb3523~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;"><span style="color: #1d1e21;">If you are completely new to DevSecOps, you can also start by first understanding what DevSecOps is and what it encompasses using a completely free resource to give you clarity on the topic in less than 20 minutes: </span><u><strong><span style="color: #1d1e21;"><a href="https://www.techworld-with-nana.com/post/devsecops-course-free" target="_blank">FREE DevSecOps Course</a></span></strong></u><span style="color: #1d1e21;">  ✅</span></p>
<p><br /></p>
<p><strong>Official Resources:</strong></p>
<ul>
  <li><p>[Official DevSecOps manifesto: <u><a href="https://www.devsecops.org/" target="_blank">https://www.devsecops.org/</a></u>]</p></li>
  <li><p>[AWS Cloud Security: <u><a href="https://aws.amazon.com/security/" target="_blank">https://aws.amazon.com/security/</a></u>]</p></li>
</ul>
<p><br /></p>
<p><br /></p>
<hr>
<p style="text-align: center;">
<strong>Share the article on LinkedIn with your engineering network</strong>  </p>]]></content:encoded></item><item><title><![CDATA[DevSecOps Course FREE]]></title><description><![CDATA[Free DevSecOps Course for Beginners. Learn how DevSecOps works, and its core concepts: SAST, Secret Scanning, SCA, DAST, Image Scanning]]></description><link>https://www.techworld-with-nana.com/post/devsecops-course-free</link><guid isPermaLink="false">6691172913c4e0c35ec460ed</guid><category><![CDATA[DevSecOps]]></category><category><![CDATA[DevOps as a Career]]></category><category><![CDATA[DevOps Concepts]]></category><pubDate>Tue, 23 Jul 2024 11:10:26 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_53809e9b5d924c01a21cf191f7414fa1~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p>#devsecops #devsecopscourse #devops</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_53809e9b5d924c01a21cf191f7414fa1~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="What is DevSecOps | DevSecOps explained"alt="What is DevSecOps - TechWorld with Nana"></figure>
<h2><strong>Overview of Topics covered</strong></h2>
<ul>
  <li><p><u><a href="#5qcix37660" rel="noopener noreferrer">Importance of Security</a></u></p></li>
  <li><p><u><a href="#p0728177706" rel="noopener noreferrer">Examples of Security Vulnerabilities</a></u></p></li>
  <li><p><u><a href="#pjm6k82841" rel="noopener noreferrer">3 important things to consider when thinking about Security</a></u></p></li>
  <li><p><u><a href="#uwgyc123375" rel="noopener noreferrer">Security Bottleneck in DevOps</a></u></p></li>
  <li><p><u><a href="#jm5up136520" rel="noopener noreferrer">DevSecOps vs DevOps</a></u></p></li>
  <li><p><u><a href="#wvy7n136430" rel="noopener noreferrer">What is DevSecOps? Why is DevSecOps so important?</a></u></p></li>
  <li><p><u><a href="#az0g4353578" rel="noopener noreferrer">5 Main DevSecOps Concepts</a></u></p><ul>
  <li><p>SAST</p></li>
  <li><p>Secret Scanning</p></li>
  <li><p>SCA</p></li>
  <li><p>DAST</p></li>
  <li><p>Image Scanning</p></li>
</ul></li>
  <li><p><u><a href="#8kjtn872664" rel="noopener noreferrer">Next Steps -  Advanced, Real-World DevSecOps Implementations</a></u></p></li>
</ul>
<p><br /></p>
<hr>
<p><br /></p>
<p style="text-align: justify;">DevSecOps Crash Course FREE | From Zero to DevSecOps engineer in 1 hour! </p>
<p><br /></p>
<a href="https://www.youtube.com/watch?v=gLJdrXPn0ns">https://www.youtube.com/watch?v=gLJdrXPn0ns</a>
<p><br /></p>
<hr>
<p><br /></p>
<h3>Importance of Security in Software Development</h3>
<p><br /></p>
<p>Security is important at all levels of software development life cycle:</p>
<ul>
  <li><p>in the application itself</p></li>
  <li><p>in the application&apos;s runtime environment</p></li>
  <li><p>and the underlying infrastructure or cloud platform etc</p></li>
</ul>
<p><br /></p>
<p>It’s important to the level, that when companies fail to properly secure things, and get hacked, where their user data or company data gets compromised, or their systems get attacked and aren’t accessible any more, the price they pay for that is very expensive.</p>
<p><br /></p>
<p>Both financially, but also reputation-wise </p>
<p><br /></p>
<ul>
  <li><p><u>[</u>Cyber Security: <u><a href="https://www.cisa.gov/topics/cybersecurity-best-practices" target="_blank">https://www.cisa.gov/topics/cybersecurity-best-practices</a></u><u>]</u></p></li>
</ul>
<p><br /></p>
<p><br /></p>
<h3>2 challenges companies have in terms of security </h3>
<p><br /></p>
<p>There are 2 biggest challenges companies have in terms of security and why they fail to properly implement security:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_b901acbce5264b82991047e88f088c5c~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="implementing security is challenging for many companies"></figure>
<ol>
  <li><p><strong>Incentive</strong></p></li>
</ol>
<p>Often feature development and providing business value is more incentivized, because that’s what brings in customers, that’s what provides the direct value for users and that’s what brings in the money ‍♀️  </p>
<p><br /></p>
<p>So <strong>security is more like a necessary evil </strong> </p>
<p><br /></p>
<p>You don’t get so much reward and pat on the back, for implementing great security. But if an incident happens, you get real punishment.</p>
<p><br /></p>
<p>And for that, you need to assess the risk, of how likely it is to happen. So security stays an afterthought in application development or infrastructure configuration process.</p>
<p><br /></p>
<p><strong>   2. Difficulty</strong></p>
<p>Second issue is, even if you and your team are dedicated to implementing great security, it becomes more and more difficult as systems and technologies get more complex.</p>
<p><br /></p>
<p>That means, with every new technology or cloud platform you introduce, your team needs to learn how to secure THAT technology or platform. Plus how to secure every integration of those tools and platforms. So it is a continuous learning curve </p>
<p><br /></p>
<p>To give you an example, <strong>think about the modern tech stack </strong>in our application systems: </p>
<ul>
  <li><p>  We have a large containerized micro services<strong> </strong>application, 
that is running in Kubernetes cluster on AWS cloud platform</p></li>
  <li><p>  It persists data in 10 different types of databases and talks to 10s of external service APIs</p></li>
  <li><p>  Plus all that infrastructure is geo-distributed to deliver high performance for users around the globe</p></li>
  <li><p>  And we have a streamlined CI/CD pipeline that deploys to the cluster</p></li>
</ul>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_cbb384e6d0d741efa19c2b4cd44cff20~mv2.png/v1/fit/w_1000,h_509,al_c,q_80/file.png"title="Production-Grade CI/CD Pipeline built in TWN DevOps Bootcamp"alt="Production-Grade CI/CD Pipeline built in DevOps Bootcamp"></figure>
<p><br /></p>
<p>With such complex setup, where technologies are inter-connected, you need to tell your team, to not only set this whole thing up, so everything is working properly (which is a challenge on its own), but to also <strong>make sure everything is set up securely</strong>, without any security vulnerabilities.</p>
<p><br /></p>
<p>Imagine how many entry points and how large of an attack surface such a complex system has, that may allow different types of attacks ⚡️</p>
<p><br /></p>
<p><br /></p>
<h3>Examples of Security Vulnerabilities</h3>
<figure><img src="https://static.wixstatic.com/media/a11f24_4f1bfe49e26f481d84d72c7911dd135f~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="you learn about different types of security attacks in our DevSecOps bootcamp "></figure>
<p><br /></p>
<ul>
  <li><p><strong>⚡️ Within the application code</strong>: </p><p><br /></p><p>Your own code or third party apps and libraries, that allow for SQL injection, or cross site scripting or forging requests from clients or even worse from servers</p></li>
</ul>
<p><br /></p>
<ul>
  <li><p><strong>⚡️ Within your application container image</strong>:
The image OS layer, image configuration, using a root OS user, third party OS packages with security vulnerabilities</p></li>
</ul>
<p><br /></p>
<ul>
  <li><p><strong>⚡️ </strong>Now, that container will run somewhere, like <strong>K8s cluster</strong>:

So the question is &quot;Is cluster secured from <strong>outside</strong>&quot;:</p><ul>
  <li><p>How secure is the access to cluster</p></li>
  <li><p>Is API server publicly accessible or only from within the internal network?</p></li>
  <li><p>Have you opened any unneeded ports on worker nodes, that allow access into cluster nodes? </p></li>
  <li><p>What about access management to the cluster, who has what permission?</p><p><br /></p></li>
  <li><p>Do they have static long-term credentials or more secure short-lived tokens, that expire, so even if attackers get access to them, they aren’t valid long enough. 
</p></li>
</ul></li>
</ul>
<p>Now that’s just outside the cluster, what about <strong>inside</strong> <strong>the cluster</strong>?

Once the attacker is inside, do they have wide open network, where 1000s of pods can all talk to each other freely, where control plane processes can be easily accessed, that potentially allows to completely destroy the cluster? Because in k8s, pod to pod communication is not encrypted by default etc.</p>
<p><br /></p>
<ul>
  <li><p><strong>⚡️ </strong>Now K8s isn’t just floating around in air, right? It’s <strong>running on actual infrastructure, let’s say cloud infrastructure on AWS, well what about servers?</strong>

If someone is able to SSH into any worker node, they can access K8s, container or cloud processes running on the server directly, they don’t even need to go through K8s API server to mess up your cluster or access your applications. 

What if you left your VPC wide open with public access to your load balancer, your servers and other cloud resources used for the cluster, thus increasing the attack surface </p></li>
</ul>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_9aef35f4f70544839b167e10235d36b1~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="security vulnerabilities affect each layer of your IT systems, including your CI/CD pipeline"></figure>
<ul>
  <li><p><strong>⚡️ </strong>What about <strong>CI/CD accessing your cluster to make deployment updates?</strong>

What permissions does your CI/CD have? 
</p><p>Is it able to delete components in all Kubernetes namespaces and do real damage, bring down all the apps?</p><p><br /></p><p><br /></p><p>So if an attacker hacked into 1 system, like CI/CD tool, through an outdated Jenkins plugin for example, which was not validated for security vulnerability, will they get access to credentials stored in your CI/CD platform, to your private repos, k8s cluster, AWS account?

And if yes, what permissions do those credentials have? Are they restricted or can they do a lot of damage? </p></li>
</ul>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_f153fc82b8554c2b9ad54f23fdcfc97a~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="access management can become a huge security vulnerability of your IT systems if not securely configured"></figure>
<ul>
  <li><p><strong>⚡️ </strong>And we can go on and on, with <strong>secret management tools, credentials rotation, etc. </strong>


But you got the point ☝️


</p><p><br /></p></li>
</ul>
<p><br /></p>
<p>[OWASP Top 10: <u><a href="https://owasp.org/www-project-top-ten/" target="_blank">https://owasp.org/www-project-top-ten/</a></u>]</p>
<p><br /></p>
<p><br /></p>
<p>As you see security should be implemented in layers, to protect every layer of the system. And the closer you get to the more precious things, like payment data, personal finance data, production servers etc, the tighter the security should get! </p>
<figure><img src="https://static.wixstatic.com/media/a11f24_c86e6bd6154841dd8f3f1d9ba8284ba3~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana DevSecOps bootcamp will teach you how to create the complete DevSecOps pipeline with all the automated security scanning tools integrating in the right stages of the pipeline"></figure>
<p><br /></p>
<p><br /></p>
<h3> 3 important things to consider when thinking about Security</h3>
<p><br /></p>
<ul>
  <li><p>  <strong>Defence is more difficult than attack</strong></p><p><br /></p><p>Because attacker only needs one weak link or 1 opening to enter your system, while in defence, you need to secure every single opening and entry point</p></li>
</ul>
<p><br /></p>
<ul>
  <li><p><strong> </strong><strong>And that’s why, security should be implemented in layers</strong> </p><p><br /></p><p>So security is not a large tall wall you build around your systems. It’s multiple layers of walls within your systems. So when attackers find a whole in the first wall and sneak in, they are faced with another wall, and another etc.</p><p><br /></p></li>
</ul>
<figure><img src="https://static.wixstatic.com/media/e7182f_ec301f28bbf84d449ad6ef0fd0351046~mv2.png/v1/fit/w_768,h_770,al_c,q_80/file.png"></figure>
<p><br /></p>
<ul>
  <li><p><strong> Tracking and Monitoring</strong></p><p><br /></p><p>And finally, security measures aren’t just limited to making it hard to break into a system, but also tracking and monitoring the behavior when attacker is attempting to break into the systems. And ideally alerting you about the suspicious behavior or potential break-in and provide you with logging data to analyze what actually happened.</p><p><br /></p><p><br /></p><p>Similar to having cameras and alarm system in a well protected building </p></li>
</ul>
<p><br /></p>
<p><br /></p>
<p>So the issue with current security state is, that even though security issues have become more challenging, the security measures have stayed same. </p>
<p><br /></p>
<p><br /></p>
<h3>The Pitfalls of Treating &quot;Security as an Afterthought&quot;</h3>
<p><br /></p>
<p>Traditional approach of developing everything, setting up things, and right before production or pre-production, asking: &quot;Hmm, everything is working fine, but have we also secured things?&quot; is <strong>largely inefficient</strong> </p>
<p><br /></p>
<p>Like we built the building with the best design and a beautiful facade, furniture, but is the building secure? But do we have strong doors, do we have security system inside in case someone tries to break in? We are thinking about security <strong>after </strong>the main functionalities have been implemented.</p>
<p><br /></p>
<p>And security as afterthought means, that those potential security issues get analyzed after the work is done. </p>
<p><br /></p>
<p>Those found issues block release, so it comes back to engineers who need to fix those issues.</p>
<p><br /></p>
<h4>2 problems with implementing security like that</h4>
<figure><img src="https://static.wixstatic.com/media/a11f24_ed1d4126aa0742f39c28e47194f3fcd2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="security is often an afterthought in software development process. With DevSecOps we wanna shift security left"></figure>
<p><br /></p>
<ol>
  <li><p><strong>Long Feedback Cycles </strong></p><p><br /></p><p>It creates long iterations in software development and slows down the release process, compared to if we checked and found security issues earlier, during development</p><p><br /></p></li>
  <li><p><strong>Higher Chance of Errors ❌</strong></p><p><br /></p><p>When you are checking security issues all at once of 50 new features &amp; bug fixes and 50 configuration changes, you may more easily oversee stuff and more issues may slip into production. Also naturally you have a higher chance of human error, when this is done manually
</p></li>
</ol>
<p><br /></p>
<h3>DevOps and Security | Security Bottleneck in DevOps </h3>
<p><br /></p>
<p>Now, when we bring DevOps in the mix, we have streamlined and optimized the application development and release pace. </p>
<p><br /></p>
<p>We are releasing fast, or trying to releasing fast, but all those attempts get <strong>blocked by having a manual, slow security checks right before the release</strong>, which is done by security engineers or compliance team or even external pen testers:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a0d60dee3f9144e19c4e58c6d7e928c2~mv2.jpg/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="security becomes a huge bottleneck in efficient DevOps process without DevSecOps practices"></figure>
<p><br /></p>
<p>And this may take weeks or months. So we are just aggravating the security bottleneck with DevOps </p>
<p><br /></p>
<h3>DevSecOps vs DevOps</h3>
<p><br /></p>
<p>Here is my simplified definition of what is DevOps. What it really comes down to eventually is:</p>
<p><br /></p>
<p>This applies whether it’s application or infrastructure changes.</p>
<p><br /></p>
<p>So naturally if security is a bottleneck, that should become part of DevOps issue that we have to eliminate. </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_0142f548e9cd44b8b103a0aa942e2bb8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana DevSecOps bootcamp teaches you how to implement DevSecOps concept in actual real-life projects"></figure>
<p>So <strong>DevOps naturally should include security</strong>, but as I often say: “reality and theory or how it’s supposed to be, are 2 different scenarios&quot;  ‍♀️</p>
<p><br /></p>
<p>So in practice, it so happened that DevOps left out security.  </p>
<p><br /></p>
<p>It focused on development and fast release cycle, but security teams and external pen tests stayed outside the DevOps cycle.</p>
<p><br /></p>
<h4>What is DevSecOps and Why is DevSecOps so important</h4>
<p><br /></p>
<p>So as a reminder, to <strong>highlight the importance of security</strong> in DevOps, DevSecOps emerged:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ed06f4aea3af429bb2cbacd9f36e2ec0~mv2.gif/v1/fit/w_800,h_200,al_c,q_80/file.png"alt="DevOps vs DevSecOps"></figure>
<p><br /></p>
<p>Also as we saw, security is overarching the entire software development lifecycle (SDLC), all parts and layers. And as you also know, DevOps affects entire software development lifecycle too. </p>
<p><br /></p>
<p>So DevSecOps is taking that overarching security and integrating it in all DevOps steps from start to finish, from automated tests to building and deploying steps.</p>
<p><br /></p>
<p>This means, DevSecOps is really:</p>
<p><br /></p>
<p>So the responsibility of fixing security issues and secure implementation still lies with individual teams, who have the expertise in those specific areas, but DevSecOps creates an over-stretching CI/CD process and automated processes that measure what’s called the <strong>security posture</strong>, basically giving us a visibility of how secure your systems are.</p>
<p><br /></p>
<p>That&apos;s what is meant by DevSecOps.</p>
<p><br /></p>
<p>Now how does DevSecOps do all these? </p>
<p><br /></p>
<p><br /></p>
<h3>5 Main DevSecOps Concepts  </h3>
<p><br /></p>
<p><strong>Automation is the key</strong> here as well, just like it is in DevOps in general. </p>
<p><br /></p>
<p>So with DevSecOps we automate checking and validating all these layers of security in different parts of the SDLC. </p>
<p><br /></p>
<p>And there are tools and technologies to run those automated tests.</p>
<p><br /></p>
<p>So what are those automated checks and where in the release pipeline are they added?</p>
<p><br /></p>
<h4>1) SAST - Static Application Security Testing</h4>
<p>First we wanna check security of our application code:</p>
<ul>
  <li><p>Do we allow for SQL injection because we aren’t sanitizing user input? </p></li>
  <li><p>Are we using weak or outdated encryption algorithm to encrypt user passwords?</p></li>
  <li><p>Do we allow downloading scrips and images from any source in our frontend code?</p></li>
</ul>
<p><br /></p>
<p>This is called &quot;Static Application Security Testing&quot; or SAST, where various SAST tools will validate static code for such security issues. </p>
<p><br /></p>
<p>So SAST tools will basically <strong>scan the codebase for known patterns and common coding mistakes</strong> that could lead to security issues.</p>
<p><br /></p>
<h4>2) Secret Scanning</h4>
<figure><img src="https://static.wixstatic.com/media/a11f24_96f72dee85794c6d95a1302022cdd70e~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Secret scanning and Static Application Security Testing (SAST) test your code for any security issues or hard coded credentials"></figure>
<p><br /></p>
<p>We also wanna check our code for any <strong>hard-coded secrets</strong>. </p>
<p><br /></p>
<p>Maybe developers forgot to remove API keys they used during testing or maybe they hard coded passwords for database connection etc. </p>
<p><br /></p>
<p>Secret scanning tools can be used to go through code and <strong>identify any hard-coded access tokens, API keys, passwords</strong> etc.</p>
<p><br /></p>
<p><br /></p>
<h4>3) SCA - Software Composition Analysis</h4>
<figure><img src="https://static.wixstatic.com/media/a11f24_452e3ab182b54fc7882b9478203b93ff~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Software Composition Analysis (SCA) checks your code dependencies for any security vulnerabilities"></figure>
<p><br /></p>
<p>We also wanna check whether code from other engineers that we use in our application has any such issues. </p>
<p><br /></p>
<p>Like <strong>libraries, frameworks we are using as dependencies</strong>. They are code too, and those engineers may also write insecure code just like our engineers. </p>
<p><br /></p>
<p>This is called &quot;Software Composition Analysis&quot; or &quot;SCA&quot;. </p>
<p><br /></p>
<p>So we use SCA tools to <strong>scan all our application dependencies for any publicly known, already discovered vulnerabilities </strong>and identify whether we are using any outdated versions of third party software with known security issues.</p>
<p><br /></p>
<p><br /></p>
<h4>4) DAST - Dynamic Application Security Testing</h4>
<p>Now above are all static checks, which means they all do analysis on the static code base. But there are some security issues that can only be caught while the application itself is running. </p>
<p><br /></p>
<p>This is called &quot;Dynamic Application Security Testing&quot; or &quot;DAST&quot;, which is a testing method that assesses a <strong>RUNNING application to identify security vulnerabilities</strong>. </p>
<p><br /></p>
<p>It sends various malicious requests to the application, as a hacker would do, and observes how the app responds, looking for potential security weaknesses.</p>
<p><br /></p>
<p>So basically, very simply explained, we are putting ourselves in the shoes of a hacker and trying to hack our own app and systems.  </p>
<p><br /></p>
<p>If we succeed, hackers will too.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_57a518d5060b4d688976a033901c72c6~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Image Scanning - Scan image layers to find any security issues"></figure>
<p><br /></p>
<h4>5)  Image Scanning</h4>
<p>In modern applications, using container images to deploy our application is pretty much a standard already. So when we build an application image, we wanna <strong>validate the security of the image artifact</strong> itself. </p>
<p><br /></p>
<p>Again, there are tools that <strong>scan the image layers, </strong>to find any security issues. Like:</p>
<ul>
  <li><p>Are we using a root OS user in the image</p></li>
  <li><p>Are we using a deprecated vulnerable OS package</p></li>
  <li><p>Are we using a bloated image with lots of tools that we don’t actually need, thus increasing the attack surface and risk unnecessarily?</p></li>
</ul>
<p><br /></p>
<p><br /></p>
<h3>Next Steps:</h3>
<h3>Learn Advanced, Real-World DevSecOps Implementations </h3>
<p><br /></p>
<p><span style="color: #1d1e21;">Now understanding these core DevSecOps concepts is great to get you started with the topic </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">But when it comes to actually implementing this in your organization, evaluating various tools, building complete DevSecOps pipelines, securing cloud platforms, K8s clusters etc, </span><strong><span style="color: #1d1e21;">things get more complex</span></strong><span style="color: #1d1e21;">. </span></p>
<p><br /></p>
<h4>Hands-On Real-World Projects is the key </h4>
<p><br /></p>
<p><span style="color: #1d1e21;">Knowing how to do all this hands-on, is just tremendously valuable skillset, but also a pretty complex one to learn. You need a structured, detailed guide that shows you how to do every step and explains the concepts behind every single tool, configuration or platform, with simple words and visualizations </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">And that&apos;s exactly what we have created with </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/4d0ZURI" target="_blank">our DevSecOps bootcamp</a></span></u><span style="color: #1d1e21;">. It&apos;s a 4-month program that will help you learn this highly demanded skillset in the simplest and fastest way possible </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">We cover the individual security issue types in the bootcamp in detail and even learn how to fix some of this issues in code. </span><strong><span style="color: #1d1e21;">We go beyond</span></strong><span style="color: #1d1e21;"> just automated security checks, and learn security best practices of deploying from CI/CD to EC2 instances or K8s clusters.</span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">We learn how to evaluate false positives and tweak various DevSecOps tools, to deliver more high quality results </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">We learn how to visualize the scan reports in a vulnerability management tool like Defect Dojo and even automate the process by automatically uploading all scan results to DefectDojo using a custom Python script </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">We learn how to analyze the discovered security issues, understand what </span><u><span style="color: #1d1e21;"><a href="https://cwe.mitre.org/" rel="noreferrer" target="_blank">CWEs</a></span></u><span style="color: #1d1e21;"> and </span><u><span style="color: #1d1e21;"><a href="https://www.cve.org/" rel="noreferrer" target="_blank">CVEs</a></span></u><span style="color: #1d1e21;"> are and how to use them in analyzing and fixing those issues. </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">Now all this is </span><strong><span style="color: #1d1e21;">JUST part 1 </span></strong><span style="color: #1d1e21;">of our DevSecOps bootcamp </span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_43d462a3c5944c5185e9a62b1b9b4844~mv2.png/v1/fit/w_1000,h_951,al_c,q_80/file.png"title="From Application Security to Cloud and Platform (Kubernetes) Security"alt="From App Security to K8s Security - you learn everything in DevSecOps Bootcamp"></figure>
<p><br /></p>
<h4>AWS Cloud Security, Kubernetes Security</h4>
<p><br /></p>
<p><span style="color: #1d1e21;">In part 2 we dive into even more interesting topics, like AWS cloud security, using various AWS services, to configure logging and monitoring, as well secure access to servers and clusters, AWS services for creating of secrets and encryption keys.</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_f702cb32dbd0441b87f127dae239850a~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Kubernetes Security Topics you learn in DevSecOps Bootcamp"></figure>
<p><span style="color: #1d1e21;">We then learn </span><strong><span style="color: #1d1e21;">everything about Kubernetes security: </span></strong></p>
<ul>
  <li><p><span style="color: #1d1e21;">  Starting with the K8s security best practices</span></p></li>
  <li><p><span style="color: #1d1e21;">  to secure access management with K8s RBAC and AWS IAM service,</span></p></li>
  <li><p><span style="color: #1d1e21;">  to security cluster internal communication using Istio Service Mesh,</span></p></li>
  <li><p><span style="color: #1d1e21;">  securely create and use secrets in K8s with external secrets manager service, integrated with AWS secrets manager and Hashicorp Vault</span></p></li>
</ul>
<p><br /></p>
<p><span style="color: #1d1e21;">We also learn how to enforce security policies in K8s, using</span><strong><span style="color: #1d1e21;"> Policy as Code</span></strong><span style="color: #1d1e21;"> implementation OPA Gateway. </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">And the best thing, we learn how to provision and configure all of this in a fully automated way using </span><strong><span style="color: #1d1e21;">Terraform IaC and ArgoCD GitOps</span></strong><span style="color: #1d1e21;">. So no changes to K8s happen with manual kubectl commands, but rather a streamlined Application and IaC pipeline:</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_9443d235b359417badd5d38d9cf57262~mv2.png/v1/fit/w_1000,h_839,al_c,q_80/file.png"></figure>
<figure><img src="https://static.wixstatic.com/media/e7182f_8a0ff31e818149188cb00d25705af983~mv2.png/v1/fit/w_1000,h_840,al_c,q_80/file.png"></figure>
<p><br /></p>
<p>No worries, all of this is learnt step by step, chapter by chapter, building on top of previous concepts and extending previous demos. Thus, you learn how to combine various different tools, instead of learning things isolated, leaving you with knowledge gaps.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ce91f6cc7c73447b82ab05ad6697d33e~mv2.png/v1/fit/w_1000,h_778,al_c,q_80/file.png"title="Compliance as Code as overarching topic"alt="Compliance as Code as overarching topic"></figure>
<p><span style="color: #1d1e21;">And we end the program, with the overarching topic of </span><strong><span style="color: #1d1e21;">Compliance as Code </span></strong><span style="color: #1d1e21;">and learn what CIS benchmarks are and how to configure automatic alerting and remediation for any compliance violations in AWS cloud platform. </span></p>
<p><br /></p>
<p><span style="color: #1d1e21;">That means, lots of tools and concepts involved. </span></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: #1d1e21;">So </span><strong><span style="color: #1d1e21;">1 hour is really a drop  in this large DevSecOps ocean</span></strong><span style="color: #1d1e21;">, to learn about it.</span></p>
<p>
<span style="color: #1d1e21;">So If you want to become a confident Senior Engineer that is irreplaceable for companies, this  </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/4d0ZURI" target="_blank">DevSecOps certification program</a></span></u><span style="color: #1d1e21;"> will absolutely skyrocket your career with extensive DevSecOps projects that mirror actual real-life implementations with best practices. Find out more </span><u><span style="color: #1d1e21;"><a href="https://bit.ly/4d0ZURI" target="_blank">HERE</a></span></u><span style="color: #1d1e21;">.</span></p>
<p><br /></p>
<p><br /></p>
<h3>Summary of DevSecOps Course</h3>
<p><br /></p>
<p>In conclusion, <strong>DevSecOps represents a paradigm shift</strong> in software development, placing security at the forefront of the process. </p>
<p><br /></p>
<p>By integrating security measures, automating checks, and involving all stakeholders, DevSecOps ensures that software is not only developed faster, but also <strong>more robust and secure from the start.</strong> </p>
<p><br /></p>
<p>It&apos;s a fundamental approach for organizations looking to thrive in an increasingly digital and interconnected world </p>
<p><br /></p>
<ul>
  <li><p>[AWS Cloud Security: <u><a href="https://aws.amazon.com/security/" target="_blank">https://aws.amazon.com/security/</a></u>]</p></li>
  <li><p>[Official DevSecOps manifesto: <u><a href="https://www.devsecops.org/" target="_blank">https://www.devsecops.org/</a></u>]</p></li>
</ul>
<h2></h2>
<p>So overall, this makes the release process fast again by reducing the feedback cycle on any security issues, by infusing the security checks throughout the pipeline, instead of having it as a big task right before the release ✅</p>
<p><br /></p>
<hr>
<p style="text-align: center;">
<strong>If it was helpful, share the article on LinkedIn with your engineering network</strong><span style="background-color: var(--ricos-custom-p-background-color,unset);"> </span></p>]]></content:encoded></item><item><title><![CDATA[Ansible Learning Roadmap - 5 Demo Projects to Master Ansible]]></title><description><![CDATA[Learn Ansible from Zero to becoming a Pro - 5 Demo Projects to Master Ansible]]></description><link>https://www.techworld-with-nana.com/post/ansible-learning-roadmap</link><guid isPermaLink="false">669cb792dc79bd705a2dfe79</guid><category><![CDATA[Roadmaps]]></category><category><![CDATA[DevOps technologies]]></category><pubDate>Sun, 21 Jul 2024 11:17:32 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_f0962a73fb8c4299a745d3982a7a171b~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<figure><img src="https://static.wixstatic.com/media/e7182f_539e280dfc9147249e201cb501f3d45d~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Learn Ansible - Ansible Roadmap"></figure>
<p style="text-align: center;">Watch Overview of Ansible Learning Path <u><a href="https://techworld-with-nana.teachable.com/courses/devops-bootcamp/lectures/31770492" target="_blank">here</a></u>, which is just one part of a <u><a href="https://bit.ly/4bN3yxy" target="_blank">full DevOps Bootcamp</a></u></p>
<p><br /></p>
<p><br /></p>
<h3>☝️ What is Ansible and Why to Learn it?</h3>
<p><br /></p>
<p style="text-align: justify;">Ansible is one of the most popular configuration management tools currently used in IT projects. Having Ansible knowledge is extremely valuable for a DevOps or Cloud engineer.</p>
<p><br /></p>
<p style="text-align: justify;">But learning Ansible can be quite challenging.  </p>
<p><br /></p>
<p style="text-align: justify;">So this article should help you learn Ansible with the following 4 steps:</p>
<p><br /></p>
<p style="text-align: left;">✅   Understand what is the purpose of Ansible</p>
<p style="text-align: left;">✅   <u><a href="#vjr2o31385" rel="noopener noreferrer">Why is it such an important tool, by learning about the important Ansible use cases</a></u></p>
<p style="text-align: left;">✅   <u><a href="#htuhr31919" rel="noopener noreferrer">5 Hands-On Projects to Learn Ansible and gain practical skills</a></u></p>
<p style="text-align: left;">✅   <u><a href="#c3arg4796" rel="noopener noreferrer">Complete Ansible Learning Roadmap</a></u></p>
<p><br /></p>
<p style="text-align: justify;">So what is Ansible?</p>
<p><br /></p>
<p style="text-align: justify;">It&apos;s a tool that helps you <strong>automate different IT tasks</strong>. Now what are those IT tasks and why is it important to automate them rather than doing them manually? </p>
<p><br /></p>
<p style="text-align: justify;">For that to understand, let&apos;s check out some use cases of Ansible.</p>
<p><br /></p>
<h3> Ansible Use Cases</h3>
<p><br /></p>
<p style="text-align: justify;">Let&apos;s consider, your company has 50 servers, where your dockerized applications are running </p>
<p><br /></p>
<p style="text-align: justify;">Docker releases a new version and you want to upgrade Docker to this latest version on all 50 servers. This kind of upgrades may involve many steps, like restarting some processes, reconfiguring the environment etc. </p>
<p><br /></p>
<p style="text-align: justify;">Now imagine, if you had to <strong>manually do this update</strong>. You would have to manually ssh into the first server, do the configuration there, maybe execute a shell script you have prepared. Then ssh into the next server, do the same configuration there etc ‍ And repeat this for each of the 50 servers:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_fe9edac6c33e4920975a60aaa04ce0a6~mv2.png/v1/fit/w_1000,h_661,al_c,q_80/file.png"alt="Why use Ansible to automate "></figure>
<p><br /></p>
<p style="text-align: justify;">And now imagine, if you had to do this manually on all 50 servers, every time you want to make some configuration change. Maybe you want to create new Linux users on those servers, or install up-to-date OS packages, apply some security patch because of a security issue, or do backups ‍♂️ </p>
<p><br /></p>
<p style="text-align: justify;">Plus, when doing those changes manually, it&apos;s hard to remember every change you have made so far. So if 5 of those servers crashed, how can you restore the exact same configuration on the new servers? </p>
<p><br /></p>
<p style="text-align: justify;">That&apos;s where a configuration management tool, like Ansible comes to rescue </p>
<p><br /></p>
<p style="text-align: justify;">It makes this <strong>manual process of server management efficient by automating it</strong>. </p>
<p><br /></p>
<p style="text-align: justify;">And it does it using 3 important elements:</p>
<ul>
  <li><p style="text-align: justify;">✅  You can write all the configuration steps in a <strong>single YAML file (&quot;Configuration as Code&quot;)</strong> instead of manual tasks and various shell scripts</p></li>
  <li><p style="text-align: justify;">✅  You can <strong>execute</strong> all the tasks defined in this YAML file <strong>on the servers remotely </strong>from your own machine, instead of ssh-ing into each server one-by-one</p></li>
  <li><p style="text-align: justify;">✅  You can <strong>execute</strong> this YAML document <strong>on all servers at once</strong>, by simply passing it a list of server IP addresses as a parameter. 

So whether you have 5 servers or 500 servers, it&apos;s 1 simple Ansible command to execute configuration changes on all those machines </p></li>
</ul>
<p><br /></p>
<p>Having such an automation makes server changes more reliable, since you can avoid any human error, like forgetting to configure one of the servers, or forgetting to execute a specific command on 1 server. </p>
<p><br /></p>
<p>And in case, you lose few servers, you can very quickly and easily restore the configuration on brand new servers.</p>
<p><br /></p>
<h3> 5 Hands-On Projects to Learn Ansible </h3>
<p><br /></p>
<p style="text-align: justify;">Now that you understand why automated server configuration management is so important and how Ansible can help you manage your servers efficiently, let&apos;s see <strong>5 real life projects that will help you master Ansible </strong></p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;"> </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_47a27da275034cf98d33662d19cd3147~mv2.jpeg/v1/fit/w_493,h_388,al_c,q_80/file.png"title="Automate Node.js app deployment"alt="Ansible Demo Project 1"></figure>
<p><br /></p>
<h4>Ansible Demo Project 1</h4>
<p><br /></p>
<p>Write Ansible Playbook that configures a Linux server on a cloud platform to prepare the application deployment environment. </p>
<p><br /></p>
<p>Then builds and deploys a Node.js application to the configured server.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ae33eb7399df4ee78a93ebaf5d5a1ce3~mv2.jpeg/v1/fit/w_512,h_439,al_c,q_80/file.png"title="Automate Docker Deployment"alt="Ansible Demo Project 2"></figure>
<p><br /></p>
<p><strong>Ansible Demo Project 2</strong></p>
<p><br /></p>
<p>Provision an EC2 instance with Terraform.</p>
<p><br /></p>
<p>Write Ansible Playbook that connects to the newly provisioned server and installs Docker and Docker Compose on it. </p>
<p><br /></p>
<p>It then copies a docker-compose file to the server and start the Docker containers configured inside the compose file.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_0a952930ffe74c4eb737f060b5c62b54~mv2.jpeg/v1/fit/w_530,h_395,al_c,q_80/file.png"title="Automate Kubernetes Deployment"alt="Ansible Demo Project 3"></figure>
<p><br /></p>
<p style="text-align: justify;"><strong>Ansible Demo Project 3</strong></p>
<p><br /></p>
<p style="text-align: left;">Provision an EKS cluster using Terraform. </p>
<p><br /></p>
<p style="text-align: left;">Write Ansible Playbook to create a new K8s namespace and deploy an application inside that K8s cluster namespace.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_4d2d3e88bc534736a148a4a20c8a3c31~mv2.jpeg/v1/fit/w_499,h_398,al_c,q_80/file.png"title="Configure Dynamic Inventory"alt="Ansible Demo Project 4"></figure>
<p><br /></p>
<p><strong>Ansible Demo Project 4</strong></p>
<p><br /></p>
<p>Provision few EC2 instances with Terraform. </p>
<p><br /></p>
<p>Write Ansible AWS EC2 Plugin to fetch the IP addresses of the newly provisioned EC2 servers and dynamically set them in Ansible inventory, instead of manually hard-coding the server IP addresses.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><strong>Ansible Demo Project 5 - Capstone Project</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2be630c5296a42d0a2d786275a9f00dd~mv2.jpeg/v1/fit/w_828,h_593,al_c,q_80/file.png"title="Ansible Integration in CI/CD Pipeline"alt="Ansible Demo Project 5"></figure>
<p><br /></p>
<p>Steps of this demo project:</p>
<p><br /></p>
<ul>
  <li><p>Create a dedicated server as Ansible Control Node.</p></li>
  <li><p>Write Ansible playbook to configure multiple EC2 instances. </p></li>
  <li><p>Create a Jenkins pipeline job to trigger executing Ansible playbook on a remote Ansible Control Node to configure EC2 instances. </p></li>
</ul>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p>This project involves many complex steps and <strong>mirrors a real-life configuration of Ansible automation from a CI/CD pipeline. </strong></p>
<p><br /></p>
<p>By learning those details and important nuances, of what gets executed where and how to configure every step of the integration between servers and tools is where the real knowledge comes from </p>
<p><br /></p>
<p>This is where you learn the most </p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h3> Learning Roadmap - How to Learn Ansible </h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_4ff0ab5f772249fe95dd1afab83f5463~mv2.png/v1/fit/w_191,h_923,al_c,q_80/file.png"alt="Ansible Learning Path"></figure>
<p><br /></p>
<p><br /></p>
<p>So this are the concepts and use cases you learn in our Ansible course within the DevOps bootcamp:</p>
<p><br /></p>
<ol>
  <li><p>  We start by covering all the Ansible Core Concepts, such as Ansible Inventory, Ansible Ad-hoc commands, How to write an Ansible Playbook.</p></li>
  <li><p>  After that we move on to using Ansible modules for various use cases, such as installing packages and tools on a server, configuring applications, working with a file system, moving static files between machines etc. </p></li>
  <li><p>  In many demos, you will learn how to map and translate standard shell scripts and commands into Ansible playbooks to automate various common tasks</p></li>
  <li><p>  You will also learn how to configure servers with different Linux distributions, so you learn the common concepts, and work with any OS distribution and write more flexible Ansible playbooks, rather than being limited to 1 specific OS</p></li>
  <li><p>  In this context you will also learn how to use Ansible variables to make your Ansible playbooks customizable and also see all the different ways of setting the variable values in Ansible</p></li>
  <li><p>  While writing and executing those Ansible playbooks, we will also learn how to troubleshoot results and use conditionals and privilege escalation when needed</p></li>
  <li><p>  And we will also learn about Ansible Collection and Ansible Galaxy</p></li>
</ol>
<figure><img src="https://static.wixstatic.com/media/a11f24_1ec0788e4f50438c84fd1d6c9201c019~mv2.png/v1/fit/w_1000,h_758,al_c,q_80/file.png"title="Ansible Syllabus - Part 1 - Core"alt="Ansible Curriculum"></figure>
<p><br /></p>
<p><br /></p>
<p>After that we will <strong>dive into more advanced topics </strong>of Ansible:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_9268dc0f713a4d5f9c6d5582791848e4~mv2.jpeg/v1/fit/w_1000,h_782,al_c,q_80/file.png"title="Ansible Syllabus - Part 2 - Advanced"alt="Ansible Curriculum - Advanced Concepts"></figure>
<ol>
  <li><p>  We will configure Ansible dynamic inventory for dynamically getting the AWS EC2 server addresses from AWS instead of statically hard-coding them. This is an extremely important concept when working a large dynamic infrastructure 
</p></li>
  <li><p>  You will also learn how to execute Ansible playbooks from a Terraform script, directly after provisioning a new infrastructure, which will teach you how to completely automate provisioning and configuring infrastructure 
</p></li>
  <li><p>  In addition, we will use various Docker modules from Ansible, to work with docker images and containers, and use docker-compose module to deploy dockerized application on a server automatically
</p></li>
  <li><p> We will also use Kubernetes module from Ansible to automate configuring the cluster and deploying Kubernetes components in it
</p></li>
  <li><p>  In another more advanced demo project, we will integrate Ansible in a Jenkins CI/CD pipeline to automate application deployment with a production grade setup
</p></li>
  <li><p>  In the final demo project, you will learn how to make your Ansible content more re-usable and modular with Ansible roles. So you will know how to write more maintainable Ansible code for more complex Ansible projects
</p></li>
</ol>
<figure><img src="https://static.wixstatic.com/media/e7182f_32eb5444033a4a71a7326de468819a70~mv2.jpeg/v1/fit/w_1000,h_757,al_c,q_80/file.png"title="Building an Ansible Project Portfolio"alt="Configuration as Code - Ansible Project Portfolio"></figure>
<p><br /></p>
<p style="text-align: justify;">Finally, as part of the <strong>configuration as code</strong> concept, we will host our Ansible project in a Git repo and add playbooks for all the demo projects there. </p>
<p><br /></p>
<p style="text-align: justify;">So by the end of the module, you will<strong> end up with a nice Ansible project portfolio</strong> </p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h4>Use Ansible in combination with other DevOps Technologies</h4>
<figure><img src="https://static.wixstatic.com/media/e7182f_dba262a042c8457bb754da253c34c792~mv2.jpeg/v1/fit/w_1000,h_790,al_c,q_80/file.png"title="Use Ansible in combination with other DevOps tools"alt="Ansible with various other DevOps technologies"></figure>
<p><br /></p>
<p style="text-align: justify;">So as you see, <strong>you don&apos;t learn Ansible just as a standalone tool </strong>in this Ansible course, but rather integrated with different technologies, like Docker, K8s, Terraform, Jenkins, AWS and so on, in various real world use cases. </p>
<p><br /></p>
<p style="text-align: justify;">As the Ansible module builds on the previous modules in the DevOps Bootcamp. </p>
<p><br /></p>
<p style="text-align: justify;">This is the<strong> most important and valuable element </strong>of our programs, that we teach every DevOps tool with real life integrations with other technologies and platforms, which you almost never find in other educational programs ‍♀️</p>
<p><br /></p>
<p style="text-align: justify;">I hope to help you on your journey of becoming an absolutely pro in Ansible, and thus not only advance your engineering career, but also make your engineering work much more efficient and productive </p>
<p><br /></p>
<p><br /></p>]]></content:encoded></item><item><title><![CDATA[What is DevSecOps? REALLY Simply Explained]]></title><description><![CDATA[DevSecOps - shifting security left and why it is important]]></description><link>https://www.techworld-with-nana.com/post/what-is-devsecops-simply-explained</link><guid isPermaLink="false">667bd090a8b912ea3d417992</guid><category><![CDATA[DevSecOps]]></category><category><![CDATA[DevOps Concepts]]></category><pubDate>Fri, 12 Jul 2024 15:39:51 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_da782572fede46ee9da18204d9095de8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p>#devsecops #devsecopscourse #devops</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_da782572fede46ee9da18204d9095de8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="What is DevSecOps | DevSecOps explained"alt="What is DevSecOps - TechWorld with Nana"></figure>
<h2><strong>Overview of Topics covered</strong></h2>
<ul>
  <li><p>Common fully automated DevOps workflow</p></li>
  <li><p>Challenge: Security audits as bottlenecks in the DevOps pipeline</p></li>
  <li><p>What are common security issues in application release pipeline</p></li>
  <li><p>Solution: DevSecOps - Shifting Security Left</p></li>
  <li><p>Automating security in DevOps</p></li>
  <li><p>Summary of why DevSecOps is an important element of DevOps</p></li>
</ul>
<p><br /></p>
<p style="text-align: justify;">[Part of full <u><a href="https://bit.ly/4eYoLaA" target="_blank">DevSecOps certification program</a></u> - DevSecOps bootcamp]</p>
<hr>
<p><br /></p>
<p style="text-align: justify;">Understand what is DevSecOps in 8 minutes </p>
<p><br /></p>
<a href="https://www.youtube.com/watch?v=nrhxNNH5lt0&ab_channel=TechWorldwithNana">https://www.youtube.com/watch?v=nrhxNNH5lt0&ab_channel=TechWorldwithNana</a>
<p><br /></p>
<hr>
<p>To understand what DevSecOps is, let&apos;s look at a common DevOps workflow, where things are streamlined, everything is automated and fast </p>
<p><br /></p>
<p>Developers check in the code and an application CI/CD pipeline starts. The changes are tested with automated tests, a new version is built and deployed to the test environment, where more automated tests will run.</p>
<p><br /></p>
<p>If all the automated tests pass, a green light is given to the new version to be deployed ✅</p>
<p><br /></p>
<p>So this super optimized and automated DevOps pipeline makes application delivery fast without manual effort. Great and the new version of the application is ready to be released in production. Well, not really? </p>
<p><br /></p>
<h2><strong>CHALLENGE without DevSecOps</strong></h2>
<p><br /></p>
<p>Because what about security? If your application is an online banking app or a social media platform that millions of people use or e-shop with credit card information and other sensitive data, you want to make sure there are no security holes in your application. Because getting hacked and leaking sensitive data may be detrimental to your business.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_38a120b221d542f4a97a08f9d644fd3a~mv2.png/v1/fit/w_1000,h_788,al_c,q_80/file.png"title="Why we need DevSecOps"alt="DevSecOps course | TechWorld with Nana"></figure>
<p>So before deploying it to production via CI/CD pipeline, the <strong>security team must test the new version for any vulnerabilities and security issues</strong>:</p>
<ul>
  <li><p>What if the developers used a new library that has some vulnerabilities</p></li>
  <li><p>What if it has some special licensing requirements</p></li>
  <li><p>What if passwords are exposed</p></li>
  <li><p>What if the container image has security vulnerability?</p></li>
  <li><p>What if the K8s components for the application are misconfigured?
</p></li>
</ul>
<p><br /></p>
<p>And of course these could all be things that developers themselves aren&apos;t even aware of ‍♂️</p>
<p><br /></p>
<p>So the security team will run tests and analyze the code changes and look for any security issues in the application. And this <strong>may take hours or days, or if you have a complex application maybe weeks</strong> ⏰ ⚠️</p>
<p><br /></p>
<p>The security team may find 1000s of vulnerabilities and issues and send them to developers to fix in that new version. However, in the meantime, because of the efficient DevOps cycle a couple new versions have been created, which are all waiting in the queue for the security audit.</p>
<p><br /></p>
<p>So you see the problem here:</p>
<p>You have this super optimized DevOps process, with fully automated CI/CD pipeline, that you built and are proud of, but right before the release the security checks and audit block the whole process, delaying the release for weeks:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_5b60d2ed669543a8abee5a7345b276f2~mv2.png/v1/fit/w_1000,h_768,al_c,q_80/file.png"title="DevOps workflow without DevSecOps"alt="DevSecOps course | TechWorld with Nana"></figure>
<p><br /></p>
<p>Now why does security audit take so long? ‍♀️</p>
<p>To understand why it&apos;s a bottleneck in the process, think about how applications have evolved over the last years:</p>
<ol>
  <li><p>We have <strong>micro services </strong>now, instead of 1 monolith application, and they expose APIs to communicate, which means much more attack surface</p></li>
  <li><p>We have <strong>tons of services</strong> which micro services, like databases, message brokers, service mesh application etc.</p></li>
  <li><p>These all run in <strong>containers</strong>, which is yet another layer where security issues may arise.</p></li>
  <li><p>And all these may run on a <strong>cloud platform </strong>maybe on a <strong>K8s cluster</strong></p></li>
</ol>
<p><br /></p>
<p>So you see that you have many layers of infrastructure and application and components which need securing.</p>
<p><br /></p>
<p>And the security teams need to also learn and understand all these platforms and technologies to be able to identify issues.</p>
<p><br /></p>
<p>Another problem is that, because many security tools that security professionals use and are experienced in, were developed way before K8s or micro services. So they need to now find or create tools for working with this modern application setup.</p>
<p><br /></p>
<p>And all that of course complicates the job of security professionals and creates the bottleneck in the application delivery process slowing down the DevOps cycle </p>
<p><br /></p>
<p><br /></p>
<h2><strong>SOLUTION with DevSecOps concept </strong></h2>
<p><br /></p>
<p>So how to fix the problem and solve the bottleneck?</p>
<p><br /></p>
<p>By integrating security in the DevOps workflow, or in other words, <strong>shifting security to the left</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ed06f4aea3af429bb2cbacd9f36e2ec0~mv2.gif/v1/fit/w_800,h_200,al_c,q_80/file.png"alt="Shifting Security to the Left"></figure>
<p><br /></p>
<p>So instead of thinking about security <strong>after</strong> a new feature is developed, right before releasing, and solving them in chunks, start thinking about security right at the beginning and solve it right away as soon as they appear.</p>
<p><br /></p>
<p>How would that work in practice? And how can security be infused in this DevOps process, instead of being a separate step here? So what is meant by DevSecOps exactly? </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_9ba0be3947ef44c4b9c341cd6c92e019~mv2.png/v1/fit/w_1000,h_765,al_c,q_80/file.png"title="DevSecOps in Practice"alt="DevSecOps course | TechWorld with Nana"></figure>
<p>1)</p>
<p>Well first of all, <strong>security becomes a developer responsibility too</strong>, instead of just being a responsibility of dedicated professionals.</p>
<p><br /></p>
<p>2)</p>
<p>And the <strong>security team itself becomes more of a facilitator </strong>and advisor to developers and operations teams, helping them understand and manage security rather than being like an external police that blocks the development speed.</p>
<p><br /></p>
<p>So the security team will create security policies. </p>
<p><br /></p>
<p>3)</p>
<p>Then they&apos;ll <strong>select proper automation tools</strong> for detecting security issues, like doing security scans, code quality checks, automated security tests of the application etc.</p>
<p><br /></p>
<p>4)</p>
<p>And they will <strong>train and teach developers and operations team</strong> how to interpret the output of these tools, so that they can identify and fix the issues themselves.</p>
<p><br /></p>
<p><em>Resource: [Computer Security Resource Center, DevSecOps project: </em><u><a href="https://csrc.nist.gov/projects/devsecops" target="_blank"><em>https://csrc.nist.gov/projects/devsecops</em></a></u><em>]</em></p>
<p><br /></p>
<p>5)</p>
<p>The Developers or DevOps engineers will then integrate these DevSecOps tools in their CI/CD pipeline. And on every commit push to a feature branch or main branch, these tools will run, and they will get automated output on their application security status and what issues and vulnerabilities need to be fixed.</p>
<p><br /></p>
<p>If there are no security issues, the pipeline will deploy and release the application.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/a11f24_6382c16f9267414fbd7a5530a9d5b3d2~mv2.png/v1/fit/w_1000,h_774,al_c,q_80/file.png"></figure>
<p><br /></p>
<p>So the <strong>manual work of security engineers will be automated and integrated</strong> into the application delivery pipeline making the release process much faster ️</p>
<p><br /></p>
<p>Apart from the speed itself, also note that, having security later in the process increases the risk of security issues sliding into the production and fixing security issues in Production is much more expensive.</p>
<p><br /></p>
<p>On the other hand, fixing them in the feature branch is much more efficient, because of the short feedback cycle. Right after commit and push, the developer knows the security issue they caused and can fix it faster, without a context switch.</p>
<p><br /></p>
<p><em>Resource:  [Official DevSecOps manifesto: </em><u><a href="https://www.devsecops.org/" target="_blank"><em>https://www.devsecops.org/</em></a></u><em>]</em></p>
<p><br /></p>
<p>So overall, this makes the process fast again by reducing the feedback cycle on any security issues, by infusing the security checks throughout the pipeline, instead of having it as a big task right before the release.</p>
<p><br /></p>
<p>I hope I could make it clear for you what DevSecOps is and why companies and projects are adopting it </p>
<p><br /></p>
<p><span style="color: rgb(36, 52, 63);">And if you want to </span><span style="color: rgb(36, 52, 63);"><strong>become a confident Senior Engineer</strong></span><span style="color: rgb(36, 52, 63);"> that is irreplaceable for companies, this  </span><u><a href="https://bit.ly/4eYoLaA" target="_blank"><span style="color: rgb(36, 52, 63);">DevSecOps certification program </span></a></u><span style="color: rgb(36, 52, 63);">will absolutely skyrocket your career    The extensive DevSecOps projects mirror actual real-life implementations with best practices, so you can easily implement them at work </span></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h4></h4>
<hr>
<p style="text-align: center;">
<strong>Share the article on LinkedIn with your engineering network</strong> </p>]]></content:encoded></item><item><title><![CDATA[From Sys Admin to DevOps Engineer: Jose’s Journey to an Exciting and Well-Paid DevOps Job ]]></title><description><![CDATA[How Jose revived his career by transitioning from a low paid Sys Admin role to highly-demanded DevOps engineer in just 1 year]]></description><link>https://www.techworld-with-nana.com/post/sysadmin-to-devops-jose</link><guid isPermaLink="false">667aaf507f32cb3b34140985</guid><category><![CDATA[TWN Success Stories]]></category><category><![CDATA[DevOps as a Career]]></category><pubDate>Fri, 05 Jul 2024 11:52:41 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_390b536facd941e88694f0ad02ff09dc~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><em><span style="color: #000000;"><span style="background-color: transparent;">Our DevOps alumnus Jose thrives at his job when managing constant challenges. If you are looking for more excitement at work too, then DevOps might be the right fit for you, just like it was for Jose </span></span></em><span style="color: #000000;"><span style="background-color: transparent;">‍</span></span></p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_390b536facd941e88694f0ad02ff09dc~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Jose's DevOps Journey - TechWorld with Nana DevOps Bootcamp Review"></figure>
<p style="text-align: center;"><span style="color: #000000;"><span style="background-color: transparent;">Jose is one of our successful </span></span><u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank"><span style="color: #0563c1;"><span style="background-color: transparent;">DevOps Bootcamp graduates</span></span></a></u><span style="color: #000000;"><span style="background-color: transparent;"> </span></span><span style="color: #1d1e21;"><span style="background-color: #ffffff;"></span></span></p>
<p><br /></p>
<h3>Meet Jose </h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">Hi, my name is Jose, and I come from Ecuador   </span></span></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_1d8d124875a94b31afd57d6fdebe9efd~mv2.png/v1/fit/w_1000,h_676,al_c,q_80/file.png"alt="Jose DevOps Bootcamp Graduate - LinkedIn Profile"></figure>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">I’m a young DevOps Engineer, and in my job I love dealing with new technologies, automations, and optimizations on a daily basis. It’s a lot of fun. </span></span></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">And in terms of payment, it’s amazing: </span></span><span style="color: #000000;"><span style="background-color: transparent;"><strong>My DevOps salary is 233% more than what I used to earn </strong></span></span><span style="color: #000000;"><span style="background-color: transparent;">at my previous job, </span></span>which of course is besides of being fulfilled at work another important aspect and increased the quality of my life </p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h3>What did you do before DevOps? </h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">In my very first job I worked as a developer using Java, PL/SQL and bash scripting.</span></span></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">With time, I became interested in Linux OS  and infrastructure things, so I ended up working as a Sys Admin in a big company. </span></span></p>
<p><br /></p>
<p><br /></p>
<h3>Why did you decide to switch to DevOps<span style="color: #000000;"><span style="background-color: transparent;"><strong>? Which aspect do you like most about it? </strong></span></span></h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">To be honest, I felt stagnant with low payment so I researched new roles in IT and I found DevOps. </span></span></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a6ff11653a394b058e29eaec834aa192~mv2.png/v1/fit/w_972,h_629,al_c,q_80/file.png"alt="DevOps - Intersection of Development and Operations"></figure>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">It’s an exciting role that combined the two worlds which I liked a lot: &quot;Software Development&quot; &amp; &quot;Operations&quot;. </span></span></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">In fact, DevOps promised to be dynamic, with new technologies, optimizations, automations, etc. </span></span></p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://media0.giphy.com/media/KTGoegOhCsubHuANH0/giphy.gif?cid=4672ce52pwesxvgtbttwk9eutrsjixyuo38zx08porgme2vj&ep=v1_gifs_search&rid=giphy.gif&ct=g"></figure>
<p><br /></p>
<p><br /></p>
<h3><span style="color: #000000;"><span style="background-color: transparent;"><strong>How did you decide to take the DevOps Bootcamp? Where did you hear about it? </strong></span></span></h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">I found the video &quot;</span></span><u><a href="https://www.youtube.com/watch?v=0yWAtQ6wYNM" target="_blank"><span style="color: #0563c1;"><span style="background-color: transparent;">What is DevOps&quot; by TechWorld with Nana</span></span></a></u><span style="color: #000000;"><span style="background-color: transparent;">, and I was surprised about how easily and clearly Nana explained all concepts on YouTube, although I’m not a native English speaker. </span></span></p>
<p><br /></p>
<p><a href="http://speaker.So" target="_blank"><span style="color: #000000;"><span style="background-color: transparent;">So</span></span></a><span style="color: #000000;"><span style="background-color: transparent;"> I had no doubts that her </span></span><u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank"><span style="color: #0563c1;"><span style="background-color: transparent;">DevOps Bootcamp</span></span></a></u><span style="color: #000000;"><span style="background-color: transparent;"> would be just as good. I </span></span><span style="color: #000000;"><span style="background-color: transparent;"><strong>wanted a complete course that gave me the big picture</strong></span></span><span style="color: #000000;"><span style="background-color: transparent;">, </span></span><span style="color: #000000;"><span style="background-color: transparent;"><strong>not isolated courses without connection</strong></span></span><span style="color: #000000;"><span style="background-color: transparent;">. And the DevOps Bootcamp was a perfect match for my needs ✅</span></span></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">The main obstacle to me was the price but I considered it as an investment in my career, and it definitely paid off!</span></span></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">I didn&apos;t try any other schools, just TechWorld with Nana’s DevOps Bootcamp and it was clearly everything I needed to make the career switch.</span></span></p>
<p><br /></p>
<p><br /></p>
<h3><span style="color: #000000;"><span style="background-color: transparent;"><strong>What was the best part of the DevOps Bootcamp? </strong></span></span></h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">I really </span></span><span style="color: #000000;"><span style="background-color: transparent;"><strong>liked the quality of labs (hands-on projects)</strong></span></span><span style="color: #000000;"><span style="background-color: transparent;"> and continuity between the lessons.</span></span></p>
<p><br /></p>
<p><a href="http://lessons.It" target="_blank"><span style="color: #000000;"><span style="background-color: transparent;">It</span></span></a><span style="color: #000000;"><span style="background-color: transparent;"> was very easy for me to completely understand the classes. I was able to make a profile in Github with all my knowledge.</span></span></p>
<p><br /></p>
<p><br /></p>
<h3><span style="color: #000000;"><span style="background-color: transparent;"><strong>So, how did you get your new job, how did you prepare?   </strong></span></span></h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">With my Github profile, my DevOps badge as a “Certified DevOps Practitioner” and all the new knowledge, I updated my LinkedIn profile and curriculum, and I started applying for DevOps positions. ✍️</span></span></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;"><strong>I was invited to many interesting interviews</strong></span></span><span style="color: #000000;"><span style="background-color: transparent;">, and eventually I got a new job within only 1 year of enrolling in the DevOps Bootcamp! It went so fast! </span></span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7e2e21f9d9db46199b5eac995d7ae7ee~mv2.png/v1/fit/w_600,h_600,al_c,q_80/file.png"alt="DevOps Certification at TechWorld with Nana"></figure>
<p><br /></p>
<p><br /></p>
<h3><span style="color: #000000;"><span style="background-color: transparent;"><strong>Is there a big difference in your salary?</strong></span></span> </h3>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">I got a 233% increase compared to my previous salary.</span></span></p>
<p><br /></p>
<p>This actually confirmed what my research showed that DevOps is very demanded. It seems there is a <strong>lack of people, who can implement DevOps properly</strong> and companies are therefore willing to pay premium to get skilled people :)</p>
<p><br /></p>
<p><br /></p>
<h3><span style="color: #000000;"><span style="background-color: transparent;"><strong>What do you recommend to new DevOps-aspirants?</strong></span></span> </h3>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_558a7a1b0c81484687493053dd4711fd~mv2.jpeg/v1/fit/w_1000,h_720,al_c,q_80/file.png"></figure>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">Do all the hands-on projects to get real practice, and </span></span><span style="color: #000000;"><span style="background-color: transparent;"><strong>very importantly ‼️</strong></span></span><span style="color: #000000;"><span style="background-color: transparent;">:</span></span></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">Create a Github profile based on what you’ve learned </span></span></p>
<p><br /></p>
<p><span style="color: #000000;"><span style="background-color: transparent;">I can assure you, with the DevOps Bootcamp you have a complete program that prepares you for the majority of DevOps jobs published out there   </span></span>Good luck!</p>
<p><br /></p>
<p><br /></p>
<h3><span style="color: #000000;"><span style="background-color: transparent;"><strong>Feel free to share anything else in addition</strong></span></span><span style="color: #000000;"><span style="background-color: transparent;"> </span></span></h3>
<p><br /></p>
<p style="text-align: justify;"><span style="color: #000000;"><span style="background-color: transparent;">I just want to say THANK YOU for the hard work in order to deliver a high quality education, I&apos;m very proud of being part of TechWorld with Nana.</span></span></p>
<p><br /></p>
<p style="text-align: justify;"><a href="http://Nana.You" target="_blank"><span style="color: #000000;"><span style="background-color: transparent;">You</span></span></a><span style="color: #000000;"><span style="background-color: transparent;"> are changing lives.</span></span></p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h3>Do YOU want to upskill in DevOps or Cloud?</h3>
<p><br /></p>
<p>Did you find Jose&apos;s story inspiring and motivating? If you too, want to become a highly demanded and highly valued DevOps engineer with tremendous career opportunities, that&apos;s exactly what we do best. We&apos;ve already helped 1,000s of engineers on this journey with our Bootcamps! </p>
<p><br /></p>
<p>And we can help you go from absolutely zero DevOps knowledge to becoming a confident DevOps engineer within just few months, with our meticulously structured, fully up-to-date <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" rel="noreferrer" target="_blank">DevOps Bootcamp</a></u> </p>
<p><br /></p>
<p>Before starting with the DevOps bootcamp, you can even <u><a href="https://www.techworld-with-nana.com/devops-bootcamp#request-a-video-call" rel="noreferrer" target="_blank"><strong>book a FREE orientation call</strong></a></u><strong>,</strong> where we will guide you and help you plan your DevOps and Cloud career journey!</p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_eb9f26b6fb9142f2885a3102e2e70be2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana Career Quiz"></figure>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>]]></content:encoded></item><item><title><![CDATA[From Embedded Software Developer to DevOps: Andrijana’s Journey and Tips for a Successful Career Switch ]]></title><description><![CDATA[Andrijana recently started her DevOps engineer position and shares valuable insights and tips for anyone wanting to make a career switch]]></description><link>https://www.techworld-with-nana.com/post/embedded-software-developer-to-devops</link><guid isPermaLink="false">6627866b007f78dd347bc91f</guid><category><![CDATA[TWN Success Stories]]></category><category><![CDATA[DevOps as a Career]]></category><pubDate>Thu, 25 Apr 2024 16:39:31 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_df968980cbbf40cf962b5865d2cd7857~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><em><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">Are you considering a career shift into DevOps but unsure where to start?  Andrijana recently took the step into the world of DevOps, and shares valuable insights and tips for anyone embarking on a similar path</span></span></em><em> </em>‍</p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_df968980cbbf40cf962b5865d2cd7857~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Andijana's DevOps Journey - TechWorld with Nana DevOps Bootcamp Review"></figure>
<p><br /></p>
<p><br /></p>
<p>Andrijana is one of our outstanding <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps Bootcamp graduates</a></u>  who secured an amazing job as a DevOps engineer, transitioning from a software development background.</p>
<p><br /></p>
<p>Be sure not to skip this TechWorld with Nana DevOps Bootcamp revie<span style="color: #1d1e21;">w. I</span>t&apos;s a <strong>short read filled with valuable lessons and tips</strong>, for anyone seeking to switch from one IT field to another ⏰  </p>
<p><br /></p>
<p>But rather than me telling you all the details, this is Andrijana&apos;s story, how she got hired and how she started a successful career in DevOps </p>
<p><br /></p>
<h3>Meet Andrijana ‍♀️</h3>
<p><br /></p>
<p><span style="color: #1d1e21;">Hi, my name is </span><u><a href="https://www.linkedin.com/in/andrijana-ojdanic/" rel="noreferrer" target="_blank"><span style="color: #1d1e21;">Andrijana</span></a></u><span style="color: #1d1e21;"> and I come from Serbia. I recently started working as a DevOps Engineer.</span></p>
<p><span style="color: rgb(34, 34, 34);">The company Azul is located in Silicon Valley, but has locations in multiple places globally. They recently opened a new office in Serbia, so that&apos;s how I started working there </span></p>
<p><br /></p>
<p><span style="color: rgb(29, 30, 33);"><span style="background-color: transparent;">For me, the main value of switching to DevOps Engineering is to work in a super interesting IT field now. I like to see “the big picture”, so that’s why I enjoy my new DevOps job so much :)</span></span></p>
<p><br /></p>
<p>But let&apos;s start from the beginning.. </p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h3>What did you do before becoming a DevOps Engineer?</h3>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I studied computer engineering at the faculty of electrical engineering and started my professional career as Embedded Software Developer.</span></p>
<p><br /></p>
<ul>
  <li><p><em> What is Embedded Software Engineering</em></p><p>A specialized discipline within the field of software engineering that focuses on designing, implementing, and testing software for embedded systems.</p><p><br /></p><p>Embedded systems are computing devices that are designed to perform specific functions within larger systems, often with real-time constraints, limited resources (such as memory and processing power), and often operate in environments where reliability and efficiency are critical.</p><p><br /></p><p>Embedded software engineers typically work closely with hardware engineers to develop software that interacts directly with the hardware components of the embedded system.</p></li>
</ul>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_bb8993946b4e4fb987b46d90b5e3ea65~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Andijana's Journey from embedded developer to DevOps Engineer - TechWorld with Nana DevOps Bootcamp Review"></figure>
<p><span style="color: rgb(34, 34, 34);">I worked in this field for ~3 years, and although hardware and low-level programming was something that I found interesting during university, </span><span style="color: rgb(34, 34, 34);"><strong>I didn&apos;t find much satisfaction</strong></span><span style="color: rgb(34, 34, 34);"> in developing embedded software professionally ‍♀️</span></p>
<p><br /></p>
<p><a href="http://professionally.As" target="_blank"><span style="color: rgb(34, 34, 34);">As</span></a><span style="color: rgb(34, 34, 34);"> I got exposed to DevOps and infrastructure while working in the industry, I realized that it&apos;s the area of IT that&apos;s most appealing to me.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">So I decided to quit embedded development and </span><span style="color: rgb(34, 34, 34);"><strong>work towards switching to DevOps</strong></span><span style="color: rgb(34, 34, 34);">  </span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">First step was to move to backend development, so that I get exposure to large infrastructure from dev perspective.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">That&apos;s how I started working as backend C++ developer in video streaming for a TV provider.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I started TechWorld with Nana&apos;s DevOps Bootcamp training while working on this job.</span></p>
<p><br /></p>
<p><br /></p>
<h3>And why did you decide to switch to DevOps field in the first place? </h3>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">The thing that makes DevOps field so appealing to me is that you get to observe the infrastructure and processes that deliver a software product from an </span><span style="color: rgb(34, 34, 34);"><strong>end to end perspective</strong></span><span style="color: rgb(34, 34, 34);">.</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_0e5f29d498f049ca816e9605f5d1d9a2~mv2.png/v1/fit/w_902,h_722,al_c,q_80/file.png"alt="DevOps encompassing whole SDLC"></figure>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">This holistic &quot;zoom-out&quot; view required for the job aligns with my preferences way more than partial &quot;zoom-in&quot; view in app development ‍♀️</span></p>
<p><br /></p>
<p><span style="color: rgb(0, 0, 0);">Plus,</span><span style="color: rgb(34, 34, 34);"> you get to automate repetitive tasks and promote efficient workflow practices through automation, which makes a lot of sense to me!</span></p>
<p><br /></p>
<p><br /></p>
<h3>When and how did you decide to enroll into TWN DevOps Bootcamp?</h3>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I started exploring Youtube tutorials and various online resources on DevOps topics. I watched a few Nana&apos;s videos and really liked the unique teaching style, so I decided to explore the channel further </span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">That&apos;s how I discovered the Bootcamp. I looked into the curriculum and concluded that it&apos;s exactly what I needed!</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I quickly decided to enroll, as I figured out that such structured learning would </span><span style="color: rgb(34, 34, 34);"><strong>speed up switching to DevOps significantly</strong></span><span style="color: rgb(34, 34, 34);">  </span></p>
<p><br /></p>
<p><br /></p>
<h3>And how was your learning experience? How did you use the knowledge and skills from the DevOps bootcamp?</h3>
<p><br /></p>
<p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">I liked really many aspects of it </span></span></p>
<ul>
  <li><p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">the structure</span></span></p></li>
  <li><p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">the selection of DevOps technologies</span></span></p></li>
  <li><p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">the hands-on projects</span></span></p></li>
  <li><p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">and of course Nana’s unique teaching style</span></span></p></li>
</ul>
<p><br /></p>
<p>Here&apos;s what I mean </p>
<p><br /></p>
<p><strong>️ Teaching Style:</strong></p>
<p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">I like the clarity of presentation. </span></span><span style="color: rgb(0, 0, 0);">Nana always starts with the basics, makes sure that essentials are well defined, tells you where things fit into the bigger picture, and then proceeds to specifics and technical details.</span></p>
<p><br /></p>
<p><strong> Structure and Selection of DevOps technologies:</strong></p>
<p><span style="color: rgb(34, 34, 34);">The content is organized in such a way that after you complete the training you have a very clear picture about where each piece of the DevOps puzzle fits. And you get to learn this big picture while developing hands-on projects in widely-used technologies, which is great for portfolio.</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_8a85e8bf7d65476eb244e2c3f5e1ec0d~mv2.png/v1/fit/w_982,h_982,al_c,q_80/file.png"></figure>
<p><br /></p>
<p><strong>‍ Hands-on Projects :</strong></p>
<p><span style="color: rgb(34, 34, 34);">These hands-on projects were a gold mine for me!  </span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I used them as the basis and inspiration, expanded on them and developed a set of portfolio projects, which simulate DevOps processes in an imaginary company that deploys 2 apps.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">This portfolio was afterwards the main point in my pitch for interviews </span></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h3>We are curious, how did you handle the job search and how was the interview process? ️ </h3>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a36e09f1714a48f2bffdb9296bae22b3~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="job search"></figure>
<p>I started by preparing for it.  After I completed the Bootcamp:</p>
<p>✅  I developed a set of portfolio projects mentioned above</p>
<p>✅  updated my CV with details about DevOps Bootcamp training and links to these projects</p>
<p>✅  updated my LinkedIn profile with the same</p>
<p><br /></p>
<p>..and started job hunting! ‍♀️ </p>
<p><br /></p>
<p><a href="http://hunting.In" target="_blank"><span style="color: #1d1e21;">In</span></a><span style="color: #1d1e21;"> p</span>arallel I was working on further interview preparations from various online materials.</p>
<p><br /></p>
<p>I also did <strong>interview-specific preparations</strong>:</p>
<p>For example, if a job posting mentioned Terraform I&apos;d dive deeper into Terraform specifics prior to the intervie<span style="color: #1d1e21;">w. My st</span>rong basis from the Bootcamp allowed this process of deep-diving to go smooth, as I typically had a good starting point.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_4526b13c25d84baeb2ef169932ed76a2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="working on job assignments"></figure>
<p>The interview process for my current job (as well as for many other positions) also involved a take-home assignment.</p>
<p><br /></p>
<p>This allowed me to quickly develop quality assignments ✅</p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">So this and my extensive portfolio was afterwards the main point for landing the job </span></p>
<p><br /></p>
<p><br /></p>
<h3>Finally, some tips for our TWN community, who want to get into DevOps and Cloud Engineering? </h3>
<p><br /></p>
<p><span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">Sure! Transitioning your career can be a lengthy process, </span></span>so you will need patience, discipline and structure. But <span style="color: rgb(0, 0, 0);"><span style="background-color: transparent;">with right mindset and resources, it can be an incredibly rewarding journey </span></span></p>
<p><br /></p>
<p>  <strong>1) Define your goals and steps</strong> required to achieve them clearly and do your best to not deviate from them </p>
<p><br /></p>
<p>  <strong>2) Apart from learning a lot, which you will have to do</strong>, make sure to present your newly acquired knowledge well</p>
<p><br /></p>
<p> <strong> 3) Devote time to develop a portfolio and document it well</strong>. Presentation is super super super important. I think it can&apos;t be overstated!</p>
<p><br /></p>
<p>  <strong>4) Get Feedback</strong>: If you can, have somebody knowledgable take a look at your CV, your projects and ask them for feedback</p>
<p><br /></p>
<p><br /></p>
<p><span style="color: #1d1e21;">That&apos;s it from me! </span></p>
<p><br /></p>
<p><span style="color: rgb(29, 30, 33);">Good luck and</span><span style="color: #1d1e21;"><span style="background-color: transparent;"> remember, every step forward brings you closer to realizing your goals in this dynamic and ever-evolving field </span></span></p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h3>Do YOU want to upskill in DevOps or Cloud?</h3>
<p><br /></p>
<p>If you’re as motivated as Andrijana and want to become a DevOps engineer or upskill in your current IT role, make sure to check out our popular, but <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" rel="noreferrer" target="_blank">intensive DevOps Bootcamp</a></u>.</p>
<p> </p>
<p>Thousands of students use our bootcamps and courses to upskill and become highly-demanded DevOps and Cloud Engineers.</p>
<p><br /></p>
<p>If you&apos;re starting with zero IT knowledge, no worries, we also got you covered. </p>
<p><br /></p>
<p>If you’re not sure where to start, check out our <u><a href="https://www.techworld-with-nana.com/it-career-quiz" target="_blank">custom career path quiz</a></u> for some advice on where to start and what path to take ✅ </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_eb9f26b6fb9142f2885a3102e2e70be2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana Career Quiz"></figure>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>]]></content:encoded></item><item><title><![CDATA[How transitioning from Sys Admin to DevOps Engineer with TWN DevOps Bootcamp skyrocketed my career within 9 months ]]></title><description><![CDATA[How Jean-David transitioned from Sys Admin to DevOps Engineer within 9 months]]></description><link>https://www.techworld-with-nana.com/post/devops-bootcamp-review-jean-david</link><guid isPermaLink="false">65e9a4b5c79888b10b6b2934</guid><category><![CDATA[TWN Success Stories]]></category><category><![CDATA[DevOps as a Career]]></category><pubDate>Sun, 10 Mar 2024 13:01:07 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_6d59a69d3aca4fdba8957fb008ddc5f4~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><em>Thinking of levelling up your career? Find out how Jean-David made a huge career and salary jump by becoming a confident and highly-demanded Cloud &amp; DevOps Engineer  </em>‍</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_6d59a69d3aca4fdba8957fb008ddc5f4~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana DevOps Bootcamp Review by Jean-David"></figure>
<p><br /></p>
<p><br /></p>
<p>Jean-David is one of our successful <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps Bootcamp graduates</a></u>    </p>
<p><br /></p>
<h2><strong>Meet Jean-David </strong></h2>
<p><br /></p>
<p><span style="color: rgb(55, 63, 73);">Hi, my name is </span><u><a href="https://www.linkedin.com/in/jeandavidkoki/" rel="noreferrer" target="_blank"><span style="color: rgb(55, 63, 73);">Jean-David</span></a></u><span style="color: rgb(55, 63, 73);"> and I’m working as a Cloud and DevOps Engineer. I hope by sharing my journey, I can inspire and motivate others to persist and believe in themselves! </span></p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h2><strong>What was your starting point?</strong></h2>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I started in IT at 17 years, after a Bac +3 in Software Engineering that I obtained in Ivory Coast </span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Like any Beginner, I was looking for a place in the professional world, so I </span><span style="color: rgb(34, 34, 34);"><strong>wanted to be as versatile as possible</strong></span><span style="color: rgb(34, 34, 34);"> to be essential.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">So I was a Fiber Optic Technician, Graphic Designer, Developer, Windows System Administrator and finally Linux System Administrator for about a year and a half.</span></p>
<p><br /></p>
<p><br /></p>
<h2><strong>Why did you decide to take the TWN DevOps Bootcamp? What were your struggles? </strong></h2>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I actually was a DevOps engineer for a little over a year in an IT company in Ivory Coast.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">But this was just by title, I was really </span><span style="color: rgb(34, 34, 34);"><strong>not good at the technical level</strong></span><span style="color: rgb(34, 34, 34);">.</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2b8ca018324245279462161e423b4a74~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Overwhelmed"></figure>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I had vague theoretical knowledge of DevOps tools, but I didn&apos;t really understand them.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I was </span><span style="color: rgb(34, 34, 34);"><strong>overwhelmed by the number of technologies</strong></span><span style="color: rgb(34, 34, 34);"> that had to be mastered and I couldn&apos;t implement them in the projects that were entrusted to me.</span></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I had planned to leave for my own mental health and when I saw the TechWorld with Nana DevOps Bootcamp, </span><span style="color: rgb(34, 34, 34);"><strong>I knew it was time to train myself </strong></span><span style="color: rgb(34, 34, 34);">and level up my DevOps and Cloud skills.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">So I took almost all my savings to buy the bootcamp.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">It was very risky to do that, but it was either that or looking for another job for months, where I would most likely experience the same scenes.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Plus I had already followed some of Nana&apos;s courses on Youtube, I knew I could trust this bootcamp :)</span></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_246a50331b7b453490fa1b603d201758~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p><br /></p>
<p><br /></p>
<h2>How did you secure this amazing DevOps job in Paris?</h2>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Absolutely everything from the bootcamp helped me get my DevOps Engineer job in Paris.</span></p>
<p><br /></p>
<p><strong>Here the steps I took</strong> </p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">First I made myself a presentable LinkedIn with a good profile photo and an eye-catching cover!</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_32a7936d2114423698b4fafaac8b693b~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Jean-David's DevOps Bootcamp posts"></figure>
<p><span style="color: rgb(34, 34, 34);">While following the Bootcamp, I practiced a lot. </span>Each module in the DevOps bootcamp has several real-life demo projects and<span style="color: rgb(34, 34, 34);"> by following the demo projects, I </span><span style="color: rgb(34, 34, 34);"><strong>built a strong and extensive DevOps portfolio </strong></span><span style="color: rgb(34, 34, 34);">step by step.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Finally I posted on LinkedIn everything I learned in the bootcamp and I put in my posts the references to my Git projects, for those interested in the code.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">By posting, I now had </span><span style="color: rgb(34, 34, 34);"><strong>great visibility</strong></span><span style="color: rgb(34, 34, 34);">, which is how </span><span style="color: rgb(34, 34, 34);"><strong>I was contacted</strong></span><span style="color: rgb(34, 34, 34);"> by people wanting to learn, companies, etc.</span></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">During my interviews I was very confident, because I knew that I had progressed a lot, I no longer had anything to do with the person who doubted himself months before.</span></p>
<p><br /></p>
<p>That&apos;s how I got this amazing DevOps engineer position in Paris  and moved there to take the job!</p>
<p><br /></p>
<p>Everything I learnt in the DevOps Bootcamp I could apply and use in my daily job. It was really a fantastic feeling to know what to do and how to do it, because I had already done it in the bootcamp :) </p>
<p><br /></p>
<p><br /></p>
<h2>Did you make a big salary jump? </h2>
<p><br /></p>
<p>Yes! I nearly earned 4 times more than I made back then.</p>
<p><br /></p>
<p>You can say the investment I put into my education definitely paid off multiple times within a few months and it continues to do so  :)</p>
<p><br /></p>
<p><br /></p>
<h2>But your journey didn&apos;t end, right?  =&gt; </h2>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I recently signed a new DevOps Engineer contract in London so I&apos;m going there soon! ✈️ </span></p>
<p><span style="color: rgb(34, 34, 34);">Very excited to move there!</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">With my gained confidence and ability to show my skills, I was even able to negotiate yet another pay increase.</span></p>
<p><br /></p>
<p>It&apos;s unbelievable how this DevOps Bootcamp changed my life to the better! It gave me the DevOps and Cloud skills I needed to become a confident, highly-demanded engineer.</p>
<p><br /></p>
<p><strong>High salary is great, but that&apos;s just one part of it</strong>: Being really proficient and confident with those highly-demanded skills gives you so much more, like a great feeling to be able to handle the tasks at work, job security, flexibility to work in any country and ability to provide a good life for my family.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>What was your learning experience in the Bootcamp? What did you like most?</strong></h2>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I liked the DevOps bootcamp, because it pinpointed what I really considered to be my shortcomings.</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Each concept is very well explained with supporting animations, which facilitate understanding.</span></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">And finally, the treasure in my opinion, the explanations and then practice on </span><span style="color: rgb(34, 34, 34);"><strong>how to integrate the services with each other</strong></span><span style="color: rgb(34, 34, 34);"> </span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Thank you once again for this great DevOps program, it&apos;s all thanks to you :)</span></p>
<p><br /></p>
<p><br /></p>
<h2>Finally, any tips for someone, who is starting the same DevOps and Cloud journey? </h2>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">To someone who is embarking on this adventure, I would tell them that you should not follow the videos to finish them as fast as possible, but to understand everything.</span></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">I would also say not to be too hard on either, because it is a complicated journey and it has been for everyone. :)</span></p>
<p><br /></p>
<p><span style="color: rgb(34, 34, 34);">Finally, believe in yourself, BECAUSE the hard worker will always surpass the genius </span></p>
<p><br /></p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h2>Do YOU want to start a new career in DevOps or Cloud?</h2>
<p><br /></p>
<p>If you’re like Jean-David and want to become confident in your DevOps and Cloud skills, be  sure to check out our popular <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" rel="noreferrer" target="_blank">intensive DevOps Bootcamp</a></u>, which earned Jean-David such attractive job offers across countries.</p>
<p> </p>
<p>Thousands of students use our bootcamps and courses to upskill and become highly-demanded DevOps and Cloud Engineers.</p>
<p><br /></p>
<p>If you&apos;re starting with zero IT knowledge, no worries, we also got you covered. </p>
<p><br /></p>
<p>If you’re not sure where to start, check out our <u><a href="https://www.techworld-with-nana.com/it-career-quiz" target="_blank">custom career path quiz</a></u> for some advice on where to start and what path to take ✅ </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_eb9f26b6fb9142f2885a3102e2e70be2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana Career Quiz"></figure>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>]]></content:encoded></item><item><title><![CDATA[Overview of DevOps Courses and DevOps Engineer Trainings]]></title><description><![CDATA[An essential guide to navigating the sea of DevOps courses, ensuring you choose the right path to kickstart or enhance]]></description><link>https://www.techworld-with-nana.com/post/devops-courses-and-devops-trainings</link><guid isPermaLink="false">65e997ac4f8daa57afc53b21</guid><category><![CDATA[DevOps as a Career]]></category><pubDate>Sat, 09 Mar 2024 09:17:12 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_5187c78662df4016a743b3fc85e99ed0~mv2.png/v1/fit/w_1000,h_758,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<figure><img src="https://static.wixstatic.com/media/e7182f_5187c78662df4016a743b3fc85e99ed0~mv2.png/v1/fit/w_1000,h_758,al_c,q_80/file.png"alt="DevOps Courses and DevOps Trainings"></figure>
<p><br /></p>
<p><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">Demand for skilled DevOps engineers is soaring, in today’s fast-paced tech world. </span></span></p>
<p><br /></p>
<p><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">DevOps, which is a merge of development (Dev) and IT operations (Ops), emphasizes a culture where engineers collaborate to create processes where software development and deployment is completely streamlined.</span></span></p>
<p><br /></p>
<p><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">This makes DevOps engineer skills extremely valuable for any business. </span></span></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">Therefore, as companies continue to embrace DevOps (</span></span>the global DevOps market is expected to exceed <a href="https://www.globenewswire.com/en/news-release/2023/05/12/2667918/0/en/DevOps-market-worth-25-5-billion-by-2028-growing-at-a-CAGR-of-19-7-Report-by-MarketsandMarkets.html" rel="nofollow" target="_blank">$25.5 billion by 2028</a><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">), the </span></span><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);"><strong>need for comprehensive DevOps courses and engineer trainings has never been more critical</strong></span></span><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">.</span></span></p>
<p><br /></p>
<p><br /></p>
<h2>Navigating the Sea of DevOps Courses &amp; DevOps Trainings</h2>
<p><br /></p>
<p><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">This article provides an essential guide to navigating the sea of DevOps courses, ensuring you choose the right path to kickstart or enhance your career in this highly-demanded field.</span></span></p>
<p><br /></p>
<p>We will go over the topics of:</p>
<ol>
  <li><p>What is DevOps</p></li>
  <li><p>Why invest in DevOps training</p></li>
  <li><p>Selecting the Right DevOps Course</p></li>
  <li><p>What DevOps Courses and Trainings should cover</p></li>
  <li><p>Conclusion</p></li>
</ol>
<h2>
What is DevOps?</h2>
<p><br /></p>
<p>DevOps is not just a set of practices, but a philosophy that fosters a<strong> </strong>collaborative environment between software developers and IT professionals. </p>
<p><br /></p>
<p>By integrating development and operations, DevOps aims to:</p>
<ul>
  <li><p>speed up the development lifecycle</p></li>
  <li><p>enhance deployment frequency</p></li>
  <li><p>and ensure high product quality</p></li>
</ul>
<p><br /></p>
<p><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">And a </span></span><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);"><strong>huge part of that is automation</strong></span></span><span style="color: rgb(13, 13, 13);"><span style="background-color: rgb(255, 255, 255);">. </span></span></p>
<p><br /></p>
<a href="https://www.youtube.com/watch?v=0yWAtQ6wYNM&ab_channel=TechWorldwithNana"><img src="https://i.ytimg.com/vi/0yWAtQ6wYNM/maxresdefault.jpg" width="1280" height="720"></a>
<p><br /></p>
<p><br /></p>
<h2>Why Invest in DevOps Training?</h2>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_9f55868273ef4140afe20649848944dc~mv2.webp/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Become a DevOps Pro with the right course"></figure>
<p>The DevOps market is thriving, with experts predicting its exponential growth over the next few years. </p>
<p><br /></p>
<p>Here are a few reasons why investing in DevOps training is worthwhile:</p>
<p><br /></p>
<ul>
  <li><p>  <strong>Huge Demand for DevOps Professionals</strong>: Companies are in constant search for skilled DevOps engineers who can streamline and automate processes  
</p></li>
  <li><p>  <strong>Lucrative Salaries</strong>: With the high demand comes competitive salaries. DevOps engineer jobs are among the highest-paid ones in the IT industry  
</p></li>
  <li><p>  <strong>Career Advancement</strong>: DevOps training opens up numerous career opportunities, from automation architect to platform engineer, to cloud engineer  </p></li>
</ul>
<p><br /></p>
<p><br /></p>
<h2>Selecting the Right DevOps Course</h2>
<p><br /></p>
<p>Choosing the right DevOps course can be daunting   Here are key factors to consider:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2f1737d7a6104330af1acd383cf10aa8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="DevOps Training"></figure>
<ul>
  <li><p><strong>Curriculum Relevance</strong>: Ensure the course covers essential DevOps practices such as continuous integration (CI), continuous delivery (CD), automation, monitoring, and cloud services</p></li>
</ul>
<p><br /></p>
<ul>
  <li><p><strong>Practical DevOps Projects</strong>: Look for DevOps courses that offer hands-on experience with real-world projects and tools</p></li>
</ul>
<p><br /></p>
<ul>
  <li><p><strong>DevOps Certification</strong>: While not always necessary, DevOps certification can be a testament to your skills and knowledge</p></li>
</ul>
<p><br /></p>
<p><br /></p>
<p>You should also know that you only need 1 bootcamp, if it&apos;s the right one ✅ </p>
<p><br /></p>
<p>Often times you unfortunately <strong>waste time and money</strong> on trying out different courses and bootcamps, that leave you with knowledge gaps:</p>
<p><br /></p>
<ul>
  <li><p>  Like you learned things, you understand stuff, but you don&apos;t feel really confident about your knowledge </p></li>
  <li><p>  You don&apos;t feel like you will be able to handle DevOps tasks and the complexity it comes with </p></li>
</ul>
<figure><img src="https://static.wixstatic.com/media/e7182f_fabfb012c7d14849b93805eb2e14f778~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana DevOps Bootcamp - No Knowledge Gaps"></figure>
<p><br /></p>
<p>That happened to one of our DevOps Bootcamp Graduate, you can <u><a href="https://www.techworld-with-nana.com/post/devops-bootcamp-review-chioma" target="_blank">read about her DevOps journey here</a></u>.</p>
<p><br /></p>
<p>So if you are looking for a <strong>1-stop shop for your complete DevOps education</strong>, this single <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps bootcamp</a></u> is all you need to become a DevOps Pro </p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h2>6 Topics DevOps Courses &amp; DevOps Trainings should cover</h2>
<p><br /></p>
<p><strong>1)  Foundational DevOps Training </strong><strong> </strong></p>
<p>Understanding the big picture and basic principles of DevOps. Understanding of software development life cycle, agile methodologies and how DevOps actually emerged.</p>
<p><br /></p>
<p><strong>2)  Continuous Integration and Continuous Deployment (CI/CD)</strong> <strong></strong></p>
<p>CI/CD is the backbone of DevOps, therefore any proper DevOps course must teach extensive usage of CI/CD platforms.  As a DevOps engineer you should be able to build complete end-to-end release pipeline with DevOps tools:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_074919286f044ab0b486201962b0deaf~mv2.png/v1/fit/w_1000,h_449,al_c,q_80/file.png"title="CI/CD Pipeline"alt="TechWorld with Nana CI/CD Pipeline"></figure>
<p><br /></p>
<p>The most popular CI/CD platform currently is Jenkins, however CI/CD platforms like GitLab CI or ArgoCD etc are also getting popularity, especially for new projects.</p>
<p><br /></p>
<p><br /></p>
<p><strong>3)  Containerization and Container Orchestration</strong> <strong></strong></p>
<p>Modern DevOps and Cloud is hard to imagine without Docker and Kubernetes. Containers and Container Runtimes like Kubernetes have become pretty much a standard in modern systems. So as a DevOps engineer you should be able to configure K8s cluster, dockerize applications, and deploy the dockerized applications inside a Kubernetes cluster.</p>
<p><br /></p>
<p>And you should be able to do all that in an automated way through a release pipeline on Jenkins or GitLab CI for example:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_948ef2fcbc3e47598cde6d040a3b3805~mv2.png/v1/fit/w_1000,h_685,al_c,q_80/file.png"alt="CI/CD that deploys to Kubernetes cluster"></figure>
<p><br /></p>
<p>That&apos;s why it&apos;s essential that the DevOps courses and trainings you choose teach you how to integrate Docker, Kubernetes, Jenkins and few other technologies together, instead of learning them in isolation ☝️</p>
<p><br /></p>
<p><strong>4)  Infrastructure as Code (IaC)</strong> <strong></strong></p>
<p>DevOps is all about automation. And Infrastructure as Code  tools empower you as a DevOps engineer to automate infrastructure provisioning and configuration.  </p>
<p><br /></p>
<p>So learning automation tools like Terraform, Ansible etc is not only essential, but will actually make your work as a DevOps engineer 100 times more productive and enjoyable. </p>
<p><br /></p>
<p><strong>5)  Cloud platforms</strong> <strong></strong></p>
<p>Everybody is moving to cloud and cloud computing has become integral to DevOps just as for many other engineering roles. Any DevOps course must teach one of the large Cloud platforms, like AWS, Azure or GCP extensively:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_6f2b58131e5c42c09e8ebaa52fab86d6~mv2.png/v1/fit/w_1000,h_900,al_c,q_80/file.png"alt="3 largest cloud platforms"></figure>
<p><br /></p>
<p>And you should learn skills of deploying, managing, and scaling applications using AWS, Azure, or Google Cloud Platform.</p>
<p><br /></p>
<p><strong>6)  </strong><strong>Monitoring and Logging</strong> <strong></strong></p>
<p>Learning how to monitor systems, networks, and applications effectively and implement logging best practices to ensure optimal performance and security is another must for a DevOps engineer, especially in a complex Kubernetes environments. </p>
<p><br /></p>
<p><br /></p>
<p>By the way, we cover all these topics extensively to make you absolutely confident in your DevOps engineering skills: <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" rel="noreferrer" target="_blank">DevOps Bootcamp</a></u></p>
<p><br /></p>
<p>And if you really want to become irreplaceable as a DevOps engineer, adding Security to your skillset, and learning DevSecOps will skyrocket your value and demand </p>
<p><br /></p>
<a href="https://www.youtube.com/watch?v=cdb6ernButc&pp=ygUJZGV2c2Vjb3Bz"><img src="https://i.ytimg.com/vi/cdb6ernButc/maxresdefault.jpg" width="1280" height="720"></a>
<p><br /></p>
<p><br /></p>
<p><strong>Next Step: Security and DevSecOps</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_30ace405a6834d40b5b5a5815e87d8f4~mv2.jpeg/v1/fit/w_1000,h_558,al_c,q_80/file.png"alt="DevSecOps"></figure>
<p><br /></p>
<p>These advanced courses integrate security practices into the DevOps process, focusing on vulnerability assessment, threat modeling, and secure coding practices.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h2>Conclusion</h2>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_3554934ecb2946e68e1bdcc1bc6742a7~mv2.png/v1/fit/w_820,h_760,al_c,q_80/file.png"alt="DevOps is highly demanded"></figure>
<p>As businesses increasingly adopt DevOps practices, the demand for highly skilled DevOps professionals keeps increasing. Whether you’re new to the field or looking to advance your career, the right DevOps course can set you on the path to success.</p>
<p><br /></p>
<p>Remember, <strong>the best DevOps training combines theory with practical experience</strong>, preparing you for the challenges of tomorrow’s tech landscape.</p>
<p><br /></p>
<p>Embrace the opportunity to become a part of the DevOps revolution. With the right training and a passion for continuous learning, you can forge a successful career in this exciting and evolving field. </p>]]></content:encoded></item><item><title><![CDATA[From Production Engineer in Nigeria to DevOps Engineer in Canada: A TWN Success Story]]></title><description><![CDATA[How Chioma secured a fulfilling job as a DevOps engineer (TechWorld with Nana DevOps Bootcamp Review)]]></description><link>https://www.techworld-with-nana.com/post/devops-bootcamp-review-chioma</link><guid isPermaLink="false">65e6e30f7ce124f73641b456</guid><category><![CDATA[TWN Success Stories]]></category><category><![CDATA[DevOps as a Career]]></category><pubDate>Wed, 06 Mar 2024 15:45:37 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_e269a6d716824d0a8405f6019c905741~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><em>Thinking of a career change? Find out how Chioma quit her </em><em><span style="color: rgb(30, 31, 33);"><span style="background-color: #ffffff;">monotonous</span></span></em><em> job at an oil company, moved to Canada and secured a fulfilling job as a DevOps engineer by impressing the hiring managers </em></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_e269a6d716824d0a8405f6019c905741~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana DevOps Bootcamp Review by Chioma"></figure>
<p style="text-align: center;">or <u><a href="https://youtu.be/BauFgatEjY0" target="_blank">watch her full story here</a></u><u>.</u></p>
<p><br /></p>
<h2><strong>Meet Chioma </strong></h2>
<p><br /></p>
<p><span style="color: rgb(55, 63, 73);">Hi, my name is </span><u><a href="https://www.linkedin.com/in/chioma-ukaegbu/?originalSubdomain=ca" rel="noreferrer" target="_blank"><span style="color: rgb(55, 63, 73);">Chioma</span></a></u><span style="color: rgb(55, 63, 73);"> and I’m working as a DevOps Engineer in Canada.</span></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_55d5f634f4ee41a79e6bb050b70e75a8~mv2.png/v1/fit/w_1000,h_804,al_c,q_80/file.png"alt="Chioma - TWN DevOps Bootcamp Graduate"></figure>
<p><br /></p>
<hr>
<p><br /></p>
<p>Chioma is one of our successful DevOps Bootcamp graduates, who sent us this heartfelt email some weeks ago </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_17a88be6c12249d492b2a2c0ea551dcd~mv2.jpg/v1/fit/w_965,h_623,al_c,q_80/file.png"alt="Chioma - TWN Success Email"></figure>
<p><br /></p>
<p><span style="color: rgb(55, 63, 73);">After reading what she shared with us, we just knew we had to chat with her and share the story with our community </span></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><span style="color: rgb(55, 63, 73);">Keep reading to find out how this all happened.  </span></p>
<p><br /></p>
<h2><strong>What did you do before you became a DevOps Engineer? </strong></h2>
<p><br /></p>
<p>I studied Electrical and Electronics Engineering back in Nigeria and worked as a</p>
<p>Production Engineer (Instrumentation and Control discipline) in Shell for 3.5 years.</p>
<p><br /></p>
<p>After which I moved to Canada in 2021 and decided it was time to try something</p>
<p>different.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>Why did you decide to switch to DevOps? That&apos;s a big career decision, so what motivated you to do that? </strong></h2>
<figure><img src="https://media3.giphy.com/media/GqM0PRGIgGwBTMVBS7/giphy.gif?cid=e2a3cbdekcr4c5zmh8dhbygwnr0qvgz367vmvq26qvnyryni&ep=v1_gifs_search&rid=giphy.gif&ct=g"></figure>
<p><br /></p>
<p><br /></p>
<p>Even though I earned good money at my job, I <strong>did not like the role</strong> because I found it</p>
<p>boring, and it was not challenging.  </p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p>Basically the goal is, waking up every morning and looking forward to go to work and spend the time at what you enjoy the most. </p>
<p><br /></p>
<p>I liked programming in school, even though I was learning an obsolete language (Fortran)...lol. I decided to learn Python on the side during my spare time. I also learned SQL and thought I was going to be a Data Analyst ‍</p>
<p><br /></p>
<p>When I moved to Canada, it was <strong>time to explore and discover what I would like for a new</strong></p>
<p><strong>career</strong>. I knew it was going to be Software Engineering related but I didn’t know the</p>
<p>exact branch.</p>
<p><br /></p>
<p>I took 3 bootcamps before Nana’s bootcamp.</p>
<p><br /></p>
<p>One was purely Data Analysis. I liked mining data, but I did not like the visualization aspect, that was how I knew it was not Data Analysis I wanted to pursue. One of the other bootcamps was Python, SQL and DevOps and that was how I learned about DevOps and Cloud. It was absolutely mind blowing. The 3rd one was purely Cloud and DevOps.</p>
<p><br /></p>
<p>DevOps is the field that binds the Software Development team and the IT operations together with lots of Automation.</p>
<p><br /></p>
<p>That was interesting for me. I also found it a lot easier to get started with </p>
<p><br /></p>
<p><br /></p>
<h2><strong>With all those previous bootcamps, why did you decide to enroll in yet another one - TechWorld with Nana&apos;s DevOps Bootcamp? </strong></h2>
<p><br /></p>
<p><br /></p>
<figure><img src="https://media3.giphy.com/media/wGEymBvo6FUlR9bbda/giphy.gif?cid=e2a3cbdeyofr7u0qghwjeo40674wgt275tg8jtnm1ecfdt8o&ep=v1_gifs_search&rid=giphy.gif&ct=g"></figure>
<p>Even though I was taught how to deploy things at the previous bootcamps <strong>I was NOT confident as a DevOps engineer,</strong> because while learning, I was mostly just copying and pasting code.</p>
<p><br /></p>
<p>I didn&apos;t know the links between the various tools and how they all came together.</p>
<p><br /></p>
<p>I remember using Jenkins to automate things in the previous bootcamps I did, but the reality is that I did not know the role Jenkins was playing in the Software Development Life Cycle (SDLC) and why I was using it. </p>
<p><br /></p>
<p><br /></p>
<p>So I started searching for more on Youtube... and Boom! </p>
<p><br /></p>
<p>I found this great Instructor called Nana. I watched Nana’s free Youtube videos and I was amazed at how she explained the concepts. I then wondered that if she taught THIS good for something that is free, how then would her bootcamp be? </p>
<p><br /></p>
<p>I enrolled in the bootcamp immediately! (After convincing my husband )</p>
<p><br /></p>
<p><br /></p>
<h2><strong>And did your expectation hold true?</strong></h2>
<p><br /></p>
<p>Absolutely!</p>
<p><br /></p>
<p>Nana’s bootcamp is a definition of structure.  I liked everything to be honest.</p>
<p><br /></p>
<p>Everything I learned in the previous bootcamps began to make sense, because</p>
<p>Nana taught the Basics right from Linux File System, which I had never properly learned. So Nana  explains all the tools from basic to advanced level in the bootcamp.</p>
<p><br /></p>
<p>She would tell you <strong>how everything ties together</strong>. Docker, Kubernetes, Ansible, Terraform, Jenkins and their role in the SDLC.</p>
<p><br /></p>
<p>Everything about Cloud/DevOps made sense to me when I took her bootcamp. It was the</p>
<p>gamechanger.</p>
<p><br /></p>
<p>Rather than copying code and seeing it work, Nana explained the concepts and even explained what the code/scripts were doing. I could even tweak it to achieve the same thing.</p>
<p><br /></p>
<p><strong>I was so happy that I was becoming confident in my DevOps skills </strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ebb455c6388743c8b3f006d20455f689~mv2.png/v1/fit/w_717,h_799,al_c,q_80/file.png"></figure>
<p><br /></p>
<p><br /></p>
<h2>How did you secure the job? How were the job interviews like?</h2>
<p><br /></p>
<p><br /></p>
<p>After I took Nana’s course, I was confident to attend the job interviews.</p>
<p><br /></p>
<p>I created a master DevOps resume and applied to companies. I <strong>got 2 offers in less than 24 hours</strong> of attending 2 interviews back-to-back.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/11062b_9d59954432494f2b8c45bd908c8f455d~mv2.jpg/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p>For the 2 offers I got, I knew I was going to get the job right during the interview.</p>
<p><br /></p>
<p>I remember that for one of the companies, where I got an offer, the hiring manager took a pause during the interview and told me, that he must say he is <strong>very impressed with the answers</strong> and would likely extend an offer to me.</p>
<p><br /></p>
<p>He said he doesn’t say that during the interviews, but he just had to tell me! </p>
<p><br /></p>
<p>I remember, they asked me DevOps questions and one of the interviewers shared his screen to show me a Kubernetes service manifest file and <strong>asked me to explain what it was doing</strong>. ☝️</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_033b98dde4634737bf151fa0626177e0~mv2.png/v1/fit/w_641,h_581,al_c,q_80/file.png"></figure>
<p>When I saw it I was smiling in my mind, knowing I can explain every single line, since Nana had explained everything in detail in the bootcamp. <span style="color: rgb(67, 67, 67);"><span style="background-color: transparent;">I was able to go line by line to explain this code, the importance of labels, selectors etc.</span></span></p>
<p><br /></p>
<p>If not for the TechWorld with Nana DevOps Bootcamp, I wouldn’t have been able to do it.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p>As I said earlier, the other bootcamps (which were even more expensive) would just give me the code to copy without explaining it.</p>
<p><br /></p>
<p><br /></p>
<h2>Is there a big difference in earnings in this new role from what you made? </h2>
<p><br /></p>
<p>The oil and gas industry pays well and I was working in one of the top paying companies in my home country, so I really cannot compare because my current job is my first in Canada.</p>
<p><br /></p>
<figure><img src="https://media0.giphy.com/media/xTiTnqUxyWbsAXq7Ju/giphy.gif?cid=e2a3cbdew9xhr3y7x5cb0v81lf9t9poes805m61zbgu9p0s7&ep=v1_gifs_search&rid=giphy.gif&ct=g"></figure>
<p>However, what I would say is that I was able <strong>negotiate a $20,000 increase</strong> in the annual pay offer I was given and that is because I had impressed them so much.</p>
<p><br /></p>
<p><br /></p>
<p>During the interview, the hiring manager had asked me </p>
<p><br /></p>
<p>I couldn’t contain my joy. I emailed Nana to say thank you :)</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<h2>Any recommendation or tips for someone who is just starting out on the same journey as you went through?</h2>
<p><br /></p>
<p>I would say people should have a passion and drive and choose a good course to get</p>
<p>started. I recommend TechWorld with Nana. That is all. Nana teaches in a way that</p>
<p>even a child can understand.</p>
<p><br /></p>
<p>If you get it right the first time, and take Nana&apos;s bootcamp, you won’t have to pay for multiple courses like me </p>
<p><br /></p>
<p>So all you need is <strong>one right course</strong>... to get started and move on from there.</p>
<p><br /></p>
<p>I wish I knew about Nana when I first started.</p>
<p><br /></p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<h2>Do YOU want to start a new career in DevOps or Cloud?</h2>
<p><br /></p>
<p>If you’re like Chioma and want to finally transition into a more fulfilling and enjoyable career in IT, be  sure to check out our popular <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" rel="noreferrer" target="_blank">intensive DevOps Bootcamp</a></u>, which earned Chioma such an attractive job offer along with compliments on her DevOps knowledge.</p>
<p> </p>
<p>Thousands of students use our bootcamps and courses to upskill and become highly-demanded DevOps and Cloud Engineers.</p>
<p><br /></p>
<p>If you&apos;re starting with zero IT knowledge, no worries, we also got you covered. </p>
<p><br /></p>
<p>If you’re not sure where to start, check out our <u><a href="https://www.techworld-with-nana.com/it-career-quiz" target="_blank">custom career path quiz</a></u> for some advice on where to start and what path to take ✅ </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_eb9f26b6fb9142f2885a3102e2e70be2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="TechWorld with Nana Career Quiz"></figure>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><br /></p>]]></content:encoded></item><item><title><![CDATA[Kubernetes Roadmap - A Complete Step-by-Step Learning Path for Admins and Developers]]></title><description><![CDATA[Complete Step-by-Step Learning Path for Administrators and Developers to learn Kubernetes the most efficient way]]></description><link>https://www.techworld-with-nana.com/post/kubernetes-roadmap</link><guid isPermaLink="false">64c2328cbaf5c98b504c5a17</guid><category><![CDATA[Roadmaps]]></category><category><![CDATA[DevOps as a Career]]></category><pubDate>Wed, 09 Aug 2023 14:14:10 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_512f70e7670442e09b965d17596dc366~mv2.jpg/v1/fit/w_1000,h_630,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_edff5a86e02347918ff4a6cbd1bf65c4~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Kubernetes Roadmap"></figure>
<p style="text-align: center;"><em>This is the written version of</em><u><a href="https://youtu.be/UMQGyeAnfFE" target="_blank"><em> my youtube video</em></a></u><u><a href="https://youtu.be/UMQGyeAnfFE" target="_blank"> </a></u>✍️ </p>
<p><br /></p>
<p><br /></p>
<h2><strong>Why Learning Kubernetes is a good idea </strong></h2>
<p><br /></p>
<h5><strong>Kubernetes has become the &quot;operating system&quot; of the cloud</strong></h5>
<p>Kubernetes (K8s) is being adopted at companies at a high pace and anyone with knowledge in that has a career advantage.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_9a378afffc134222b2aeb3ff2c947710~mv2.png/v1/fit/w_897,h_592,al_c,q_80/file.png"title="Kubernetes skills are in high demand"alt="Kubernetes skills in high demand"></figure>
<p>This inevitably also reflects on the job market, where  <strong>Kubernetes job searches grew by 2125% in 4 years.  </strong>And this high demand for engineers, who have a deep knowledge of Kubernetes, results in great career opportunities and high salaries. </p>
<p><br /></p>
<p>Most popular Kubernetes related tech-roles include:</p>
<ul>
  <li><p>DevOps Engineer</p></li>
  <li><p>Software Engineer</p></li>
  <li><p>Cloud Engineer. </p></li>
</ul>
<p>You can even become a full-time Kubernetes engineer as it has almost become its own role.</p>
<p><br /></p>
<h5><strong>Kubernetes is powerful, but complex</strong></h5>
<p>Kubernetes is a powerful platform, but a very complex one, which means you have a steep learning curve and even though many people want to learn Kubernetes, often they don&apos;t know where to start.</p>
<p><br /></p>
<p>So it certainly helps to have a guidance and a sort of a roadmap of how to approach learning Kubernetes efficiently. That&apos;s why I want to give you a <strong>step-by-step roadmap of what to learn and in which order to structure your learning of Kubernetes.</strong> </p>
<p><br /></p>
<p>Now I know it also helps to have this type of roadmap visualized in a written format, so we also created an <u><a href="https://techworld-with-nana.com/kubernetes-roadmap" target="_blank">accompanying PDF roadmap</a></u> for you, which you can download from our website here: <u><a href="https://techworld-with-nana.com/kubernetes-roadmap" target="_blank">Kubernetes Roadmap PDF version</a></u>.</p>
<p><br /></p>
<h5><strong>Containers are pre-requisite</strong></h5>
<p>Kubernetes is built on containers, so before learning Kubernetes you should be able to run and build containers. </p>
<p><br /></p>
<p>You can learn everything you need here: <u><a href="https://youtu.be/pg19Z8LL06w" target="_blank">Docker Crash Course</a></u> </p>
<p><br /></p>
<h2><strong>Kubernetes Administrator vs User - Most important point to consider</strong></h2>
<p><br /></p>
<p>Here&apos;s the most important point to consider when you start learning Kubernetes, which will make your learning journey much easier and more efficient.</p>
<p><br /></p>
<p>It is to understand the following: Kubernetes platform, like almost all other platforms, has <strong>two sides or aspects</strong> of it:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_59c4221c261c45109fcc3b4a561fb52f~mv2.png/v1/fit/w_509,h_390,al_c,q_80/file.png"alt="Kubernetes Administration"></figure>
<p><br /></p>
<p><strong>The Administration Side</strong></p>
<p>Someone needs to set it up, initialize, configure all the essentials to prepare it for its actual usage.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_32456ada20b04b2b9612efbb45aabc0b~mv2.png/v1/fit/w_552,h_362,al_c,q_80/file.png"alt="Kubernetes User or Kubernetes Developer"></figure>
<p><br /></p>
<p><strong>The Platform User Side</strong></p>
<p>Someone will now start actually using it deploying applications and services inside.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p>Just like with AWS cloud platform or Jenkins platform for example, you have to set it up like:</p>
<ul>
  <li><p>create an AWS account or</p></li>
  <li><p>install Jenkins service</p></li>
  <li><p>then configure the access</p></li>
  <li><p>install or activate any plugins needed or services</p></li>
  <li><p>secure the platform to make it usable</p></li>
  <li><p>and so on</p></li>
</ul>
<p>And once that&apos;s done and accesses are given, the engineers, who actually need to use the platform will create the pipeline on Jenkins or deploy their application to AWS platform and so on.</p>
<p><br /></p>
<p>So these are two different roles and we need to <strong>differentiate and draw the line between the two</strong>. You need to understand, which aspect of the technology you want to learn and you can decide that based on your role.</p>
<p><br /></p>
<p><strong>Are you an application developer? ‍</strong></p>
<p>You need a roadmap to learn how to use Kubernetes to deploy applications and run applications inside the cluster.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_d41f3750683a4ef083daae183fe1de3d~mv2.png/v1/fit/w_806,h_325,al_c,q_80/file.png"alt="Kubernetes User Learning Path"></figure>
<p><br /></p>
<p><strong>Are you an operations engineer? ‍</strong></p>
<p>Well then you need to learn the Kubernetes administration and operation side.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_72ba1ea6e37a4aeaa22a63b996cfebf7~mv2.png/v1/fit/w_845,h_359,al_c,q_80/file.png"alt="Kubernetes Administrator Learning Path"></figure>
<p><br /></p>
<p>By recognizing the distinction between these two roles, you can approach your learning journey with a clear focus.  </p>
<p><br /></p>
<p>If you&apos;re a developer, your primary aim will be to understand Kubernetes usage and deployment. As an operations engineer your main focus will be on administration and Kubernetes operations. </p>
<p><br /></p>
<p>Now you can eventually learn both, if you want to, but if you divide it and learn one part first and then build the other on top, it will make your learning process much easier and more structured, it will also be easier to connect the dots. ✅</p>
<p><br /></p>
<p>There are even <strong>different certifications for these two</strong>:</p>
<ul>
  <li><p>CKA or Kubernetes Administrator exam</p></li>
  <li><p>CKAD, which is Kubernetes Application Developer certification exam.</p></li>
</ul>
<p><br /></p>
<p>And just like there is no learning AWS, you <strong>learn a specific path within AWS based</strong> on your engineering role and what you want to do on AWS platform. And you also have different AWS certifications for administrator, developer, maybe mobile developer, data engineer and so on.</p>
<p><br /></p>
<p>So when you have clarified that, then it&apos;s easier to create a roadmap to learn only the relevant services and concepts from hundreds of AWS services. </p>
<p><br /></p>
<p>So it&apos;s exactly the same concept here.</p>
<p><br /></p>
<h2><strong>I - Fundamental Concepts </strong></h2>
<figure><img src="https://static.wixstatic.com/media/e7182f_b7cde8f6a1754a40bd2a8b7ac5f5b57e~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="K8s Fundamental Concepts that need to learn both"></figure>
<p><br /></p>
<p>So we&apos;ve established that we have these two separate learning paths. However, before branching off into a specific path there are <strong>fundamental concepts that apply to both</strong>, developers and </p>
<p>administrators.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_f03de3e995504034a41ff4d4881bf6a3~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Kubernetes Building blocks for solid foundation"></figure>
<p>So first you need to learn the basics, no matter which path you continue with. These are the <strong>building blocks of Kubernetes knowledge</strong>.</p>
<p><br /></p>
<p>So let&apos;s explore this shared topics to lay a solid foundation for your Kubernetes learning journey first. </p>
<p><br /></p>
<p><br /></p>
<h3>1 - Understanding the Why ❓</h3>
<p>And the most important <strong>entry point to learning any new technology</strong> or tool is learn the why behind the technology first.</p>
<ul>
  <li><p>What problem does it solve that made Kubernetes so popular and widely used?</p></li>
  <li><p>The <strong>whys of how Kubernetes helps solve issues of operating large, containerized applications</strong></p></li>
</ul>
<p>Once you&apos;ve understood &quot;why Kubernetes&quot; or &quot;what problems it solves&quot;, then you can learn how it actually solves those problems and the actual implementation of the tool and how the tool works. </p>
<p><br /></p>
<p>So this will be the first step in grasping the fundamentals of Kubernetes. </p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://youtu.be/g8Sf-6EsgZM" target="_blank">https://kubernetes.io/docs/concepts/overview/</a></u></p></li>
</ul><p>TWN Learning Resource:</p><ul>
  <li><p><u><a href="https://youtu.be/VnvRFRk_51k" target="_blank">What is Kubernetes</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/g8Sf-6EsgZM" target="_blank">Benefits of Kubernetes</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>2 - Architecture of Kubernetes</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_e2ec3556ae2142029326340df1645e84~mv2.png/v1/fit/w_899,h_760,al_c,q_80/file.png"alt="Kubernetes architecture"></figure>
<p>Once you&apos;ve established the why, you can dive into the core components and architecture of Kubernetes.</p>
<p><br /></p>
<p>As part of Kubernetes architecture, you need to <strong>understand and learn about the Control Plane and Worker Nodes</strong>.</p>
<p><br /></p>
<p>What is the role of each, how are they connected, what processes are running on them. </p>
<p><br /></p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>TWN Learning Resource: <u><a href="https://youtu.be/umXEmn3cMWY" target="_blank">Kubernetes Architecture</a></u> </p></li>
</ul>
<p><br /></p>
<h3>3 - Core Objects of Kubernetes</h3>
<p>After that you need to learn the core building blocks of Kubernetes, which are Kubernetes components. You need to understand <strong>what is a ...</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_613d0bd1e947458bad7037583130f9df~mv2.png/v1/fit/w_1000,h_470,al_c,q_80/file.png"alt="Kubernetes core objects"></figure>
<ul>
  <li><p>Pod</p></li>
  <li><p>Service</p></li>
  <li><p>Ingress</p></li>
  <li><p>ConfigMap</p></li>
  <li><p>Secret</p></li>
  <li><p>Deployment</p></li>
  <li><p>StatefulSet</p></li>
  <li><p>Namespaces</p></li>
  <li><p>Volumes.</p></li>
</ul>
<p>These are the main Kubernetes components. Understand <strong>why each one exists</strong> and <strong>what are their relations</strong> and connections to each other. </p>
<p><br /></p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>TWN Learning Resources:</p><ul>
  <li><p><u><a href="https://youtu.be/Krpb44XR0bk" target="_blank">Main Kubernetes Objects explained (Pod, Deployment, Service, ConfigMap, Secret)</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/K3jNo4z5Jx8" target="_blank">Namespaces explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/80Ew_fsV4rM" target="_blank">Ingress explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/0swOh5C3OVM" target="_blank">Volumes explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/pPQKAR1pA9U" target="_blank">StatefulSet explained</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>4 - How K8s works behind the scenes - Kubernetes Components</h3>
<p>Now these components that are mentioned, you work with them directly, you create the Pods, you create the Services, Deployments. You also create Worker Nodes and join them to the cluster and so on. But there are <strong>components that are part of Kubernetes that just work behind the scenes</strong>, kind of doing its magic in the cluster.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_42f436b796b04ee2a6d68b0e808b860b~mv2.png/v1/fit/w_614,h_420,al_c,q_80/file.png"alt="Control Plane and Worker Nodes"></figure>
<p>These are the components like:</p>
<ul>
  <li><p>Scheduler</p></li>
  <li><p>Controller Manager</p></li>
  <li><p>etcd</p></li>
  <li><p>API Server</p></li>
  <li><p>Kubelet</p></li>
  <li><p>Kube Proxy</p></li>
  <li><p>Container runtime</p></li>
</ul>
<p><br /></p>
<p>Even though you may have little to do with this directly, because they just run in the background and do the work in the cluster, but still understanding these components, what each one of them does and what is the role of each of these services in the cluster, will <strong>help you understand how Kubernetes works</strong>, the mechanisms behind the cluster, the self-healing functionality, the way Kubernetes manages the desired versus actual state and keeps them in sync, scaling deployments and so on.</p>
<p><br /></p>
<p>So when you do things in a cluster, when you administer it or run applications inside, knowing what&apos;s happening in the background from the Kubernetes perspective will definitely make it easier for you to work with Kubernetes.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs: <u><a href="https://kubernetes.io/docs/concepts/overview/components/" target="_blank">https://kubernetes.io/docs/concepts/overview/components/</a></u>  </p><p>TWN Learning Resource: <u><a href="https://youtu.be/umXEmn3cMWY" target="_blank">Kubernetes Architecture</a></u></p></li>
</ul>
<p><br /></p>
<h2><strong>II - Work with Kubernetes </strong></h2>
<h2></h2>
<p>Now this is all theory, right? Understanding the architecture, components, how Kubernetes works. Now we need to move on to practice, because while understanding the components behind a tool is essential and that&apos;s definitely where you should start at, after that you should get hands-on, because this will give you a <strong>different level of confidence with the tool</strong> and kind of <strong>break the fear</strong> of working with it as well. </p>
<p><br /></p>
<h3>5 - Accessing and interacting with Kubernetes</h3>
<p>So with a solid understanding of the fundamentals, you can now shift your focus to understanding how to access and work with a Kubernetes cluster.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_fa0f2219b9024c2a86a5834512cf0a57~mv2.png/v1/fit/w_1000,h_410,al_c,q_80/file.png"alt="Kubectl to interact with Kubernetes cluster"></figure>
<p>As part of this, you need to learn <strong>Kubectl command line interface and its main commands</strong>, which is essentially for interacting with your Kubernetes cluster.</p>
<p><br /></p>
<p>Whether you are an administrator or a product engineer, you need to learn this tool to perform various actions in the cluster. Again <strong>creating</strong> components, <strong>updating</strong> them, <strong>troubleshooting</strong> and <strong>viewing</strong> components, analyzing and so on.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/tasks/tools/" target="_blank">Install Kubectl</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/reference/kubectl/" target="_blank">Kubectl Overview</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/" target="_blank">Kubectl Cheatsheet</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/reference/kubectl/kubectl/" target="_blank">Kubectl commands</a></u> </p></li>
</ul><p>TWN Learning Resources:</p><ul>
  <li><p><u><a href="https://youtu.be/E2pP1MOfo3g" target="_blank">Minikube and Kubectl explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/azuwXALfyRg" target="_blank">Kubectl Main Commands</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>6 - Kubernetes Manifest Files</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_376313c6a86d448892dda0158be2f38a~mv2.png/v1/fit/w_1000,h_916,al_c,q_80/file.png"alt="Kubernetes Manifest File"></figure>
<p>Additionally, you also need to learn about Kubernetes manifest files as part of Kubernetes basics.</p>
<p>These are <strong>Kubernetes YAML configuration files</strong>, which describe the desired state of your applications within the cluster.</p>
<p><br /></p>
<p>So basically you use this to define, what Kubernetes components like Deployments, Services, StatefulSets and so on you want to create in the cluster and what configuration you want those components to have.</p>
<p><br /></p>
<p>Here an example configuration file for a Deployment configuration:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_003251675e55443aad3ba5a685abd28f~mv2.png/v1/fit/w_760,h_1000,al_c,q_80/file.png"alt="Deployment Configuration File"></figure>
<p>And understanding how to create and manage these manifest files is going to be very important for working with Kubernetes as well.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>TWN Learning Resource: </p><ul>
  <li><p><u><a href="https://youtu.be/qmDzcu5uY1I" target="_blank">Kubernetes Manifest File explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/1uFVr15xDGg" target="_blank">YAML Tutorial</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/EQNO_kM96Mo" target="_blank">Complete Application Deployment - Hands-On</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>7 - Troubleshooting</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_d20b942f9e584ead80940e0916bd6031~mv2.png/v1/fit/w_555,h_267,al_c,q_80/file.png"alt="You will encounter issues in K8s cluster"></figure>
<p>As you progress in your Kubernetes journey and start deploying applications inside with manifest files and Kubectl and start creating various Kubernetes components, you will definitely <strong>encounter challenges and issues</strong> in the process that require troubleshooting skills.</p>
<p><br /></p>
<p>So you also need to learn <strong>Kubectl commands for troubleshooting</strong> as well as other ways of <strong>getting insights into the cluster</strong> and what&apos;s going on with your components, like getting insights into cluster networking, the component configuration, the runtime environment of your applications and so on:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_df414a9a16b2419bb42785af83bfd88e~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Troubleshooting skills essential in K8s"></figure>
<ul>
  <li><p>Check container logs</p></li>
  <li><p>Check cluster status
 Check Node and Pod Status</p></li>
  <li><p>Verify Networking 
... </p></li>
</ul>
<p>So troubleshooting is an essential skill you will need to practice in order to work with and learn even more about Kubernetes and how things work inside the cluster.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/tasks/debug/debug-application/" target="_blank">Troubleshooting Applications</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/tasks/debug/debug-cluster/" target="_blank">Troubleshooting Clusters</a></u> </p></li>
</ul><p>Free TWN Learning Resource:</p><ul>
  <li><p><u><a href="https://youtu.be/azuwXALfyRg" target="_blank">Debug commands </a></u> </p></li>
</ul><p>K8s Administrator Course: </p><ul>
  <li><p><u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">Troubleshooting</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>8 - Learn about common K8s misconfigurations</h3>
<p>Now when you learn how to create components and run various services in Kubernetes, you will soon notice that Kubernetes is a powerful and very flexible platform. </p>
<p><br /></p>
<p>It&apos;s <strong>not very opinionated</strong> and you can do a lot in the cluster. So it gives you a lot of flexibility, but this also means that <strong>you can do a lot wrong</strong>, like misconfiguring things with bad practices. </p>
<p><br /></p>
<p>And that&apos;s where details of <strong>common misconfigurations will actually help you a lot</strong>. Knowing from the start what are some things that people without experience in Kubernetes may misconfigure. Things that are not really logical or intuitive and where people <strong>mostly make mistakes. </strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5a66cffeb9df44eb840b0c4c807f490f~mv2.png/v1/fit/w_1000,h_432,al_c,q_80/file.png"alt="Learn about Bad Practices in K8s"></figure>
<p>And I find it easier to start with bad practices and learn explicitly what not to do, before learning about the best practices, because you learn exactly <strong>what to avoid and importantly why to avoid them</strong>. </p>
<p><br /></p>
<p>This will also teach you more about how Kubernetes works and why are things a certain way.</p>
<p><br /></p>
<p>Such details are usually missing in the official documentations or other common learning resources, which teach you about a feature or a component, but usually they <strong>don&apos;t mention such details</strong>. That&apos;s why in my educational content I always make sure to add some of the common mistakes as well as best practices that are not immediately clear or intuitive, which I myself learned from practice, so you can avoid making these mistakes as a beginner. </p>
<p><br /></p>
<p><br /></p>
<h3>9 - Helm Charts</h3>
<p>Another advanced topic you can learn at this point is Helm charts, especially as you <strong>start deploying third-party services in your cluster</strong> next to your own applications.</p>
<p><br /></p>
<p>So learn:</p>
<ul>
  <li><p>What is Helm</p></li>
  <li><p>What are Helm charts</p></li>
  <li><p>What are they used for</p></li>
  <li><p>How they make working with Kubernetes and deploying different services easier</p></li>
  <li><p>and so on</p></li>
</ul>
<p>Again the same approach: First understand why we need them and then how to use them.</p>
<p><br /></p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://helm.sh/" target="_blank">Helm Package Manager</a></u> </p></li>
</ul><p>Free TWN Learning Resource:</p><ul>
  <li><p><u><a href="https://youtu.be/-ykwb1d0DXU" target="_blank">Helm Explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/QoDqxm7ybLc" target="_blank">Helm Demo</a></u> </p></li>
</ul><p><u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps Bootcamp:</a></u></p><ul>
  <li><p>Create Helm Chart for Microservices</p></li>
  <li><p>Deploy Microservices with Helmfile</p></li>
</ul></li>
</ul>
<p><br /></p>
<hr>
<p>So this will basically be a <strong>really solid good foundation of Kubernetes knowledge</strong>, doesn&apos;t matter which path you continue with.  This will already get you to the level, where you know exactly what Kubernetes is, how to work with and you&apos;re confident with the tool.</p>
<p><br /></p>
<p>And all this until here, you can actually <u><a href="https://www.youtube.com/@TechWorldwithNana" target="_blank">learn on my channel</a></u>. I have videos most of these topics, so you don&apos;t have to search for those resources elsewhere. </p>
<p><br /></p>
<h3><strong>Branch out to specific roadmap ᛘ</strong></h3>
<p>So now that we have a foundation of Kubernetes knowledge, <strong>based on your engineering role and direction</strong> you want to go into, <strong>you can now branch out</strong> to either Kubernetes administrator side or Kubernetes user side.</p>
<p><br /></p>
<p>Let&apos;s start with the Kubernetes administrator roadmap first! </p>
<p><br /></p>
<p><br /></p>
<h2><strong>III - Kubernetes Administrator Roadmap ‍</strong></h2>
<p><br /></p>
<p>On this foundation, you can now build the knowledge you need to administer and operate a Kubernetes cluster.</p>
<p><br /></p>
<h3>10 - Self-Managed vs Managed Kubernetes Service </h3>
<p>First start by understanding <strong>different ways of operating Kubernetes cluster</strong>, like self-managed and Managed Kubernetes Services, which are offered by cloud providers, such as AWS EKS or Azure AKS.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_247fb22851f44e43b195aeb627b0fe88~mv2.png/v1/fit/w_718,h_357,al_c,q_80/file.png"alt="Self-Managed vs Managed Kubernetes Service"></figure>
<p><br /></p>
<p>Understand the <strong>pros and cons</strong> of each one and the <strong>differences between them</strong>.</p>
<p><br /></p>
<p>This will help you make informed decisions about how to operate Kubernetes cluster for your specific organization or your engineering teams.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Free TWN Learning Resource:</p><ul>
  <li><p><u><a href="https://youtu.be/k-V3_zxRasM" target="_blank">Managed K8s Service explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/JGtJj_nAA2s" target="_blank">Application Deployment on a Managed K8s Service</a></u> </p></li>
</ul><p>K8s Administrator Course:</p><ul>
  <li><p><u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">Set up a Kubernetes cluster from scratch</a></u> </p></li>
</ul><p>DevOps Bootcamp:</p><ul>
  <li><p><u><a href="https://techworld-with-nana.com/devops-bootcamp" target="_blank">Set up an AWS EKS cluster</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<p><br /></p>
<h3>11 - Networking in Kubernetes </h3>
<p>Another important concept you need to learn as a Kubernetes administrator to do your job effectively, is Networking in Kubernetes. Networking plays an <strong>important role in how various components communicate within a cluster</strong>.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_6da4b306bd934c3ab2cb6af3bebe9a44~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Networking in Kubernetes"></figure>
<p>You should learn the concepts such as:</p>
<ul>
  <li><p>Ingress</p></li>
  <li><p>Network Policies</p></li>
  <li><p>Pod-to-Pod communication</p></li>
  <li><p>Pod-to-Service communication</p></li>
  <li><p>Kubernetes Network Interface</p></li>
  <li><p>Network Plugins</p></li>
  <li><p>Cluster DNS service</p></li>
  <li><p>and so on</p></li>
</ul>
<p>Understanding these networking concepts is absolutely <strong>essential, especially when you want to administer a self-managed Kubernetes cluster</strong>. Troubleshooting and fixing networking issues is very difficult , if you don&apos;t understand properly how Kubernetes networking works.</p>
<p><br /></p>
<p>As part of networking, also understand the soft network isolation with namespaces as well as hard network isolation between cluster components and why this concept is important in general.</p>
<p><br /></p>
<p>Now most of the networking functionality, once you install network plugin in the cluster is automatic. So in terms of establishing communication between cluster components or joining new servers to the Kubernetes network, <strong>Kubernetes does a lot of these out of the box</strong> without much effort and configuration needed from administrator, which is great. </p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/cluster-administration/networking/" target="_blank">Cluster Networking</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/" target="_blank">Network Plugins</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/services-networking/network-policies/" target="_blank">Network Policies</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/services-networking/" target="_blank">Services Networking</a></u> </p></li>
</ul><p>Free TWN Learning Resources:</p><ul>
  <li><p><u><a href="https://youtu.be/5cNrTU6o3Fw" target="_blank">Pods and Containers</a></u> </p></li>
</ul><p><u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">K8s Administrator Course:</a></u> </p><ul>
  <li><p>Container communication</p></li>
  <li><p>Container network interface - CNI</p></li>
  <li><p>Configure Network Plugin</p></li>
  <li><p>Join Worker Nodes to cluster</p></li>
  <li><p>DNS in Kubernetes</p></li>
  <li><p>...</p></li>
</ul><p><br /></p></li>
</ul>
<p><br /></p>
<h3>12 - Cluster Access Management </h3>
<p>But there is another essential responsibility of a Kubernetes administrator that you need to explicitly configure and set up and you need to set up properly with best practices, and this is cluster access management. Basically: <strong>who can do what in the cluster</strong>.  </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_ed574059536e40eabf9caac6e4b3e954~mv2.png/v1/fit/w_590,h_354,al_c,q_80/file.png"title="RBAC to control who can do what in the K8s cluster"alt="RBAC to control who can do what in the K8s cluster"></figure>
<p>As I said Kubernetes is complex and powerful, so you don&apos;t want unauthorized people with little knowledge of Kubernetes to have admin permissions to mess everything up. So understanding Kubernetes <strong>RBAC or Role-Based Access Control</strong> is very important to make sure that <strong>everyone has correct access permissions</strong> to the cluster resources and everyone can do their job without messing things up in the cluster.</p>
<p><br /></p>
<p>For this you need to learn Kubernetes components, such as:</p>
<ul>
  <li><p>Roles and RoleBindings</p></li>
</ul>
<figure><img src="https://static.wixstatic.com/media/e7182f_78cebd00b84240269e4b44a6b1be25a7~mv2.png/v1/fit/w_904,h_325,al_c,q_80/file.png"alt="Roles and RoleBinding"></figure>
<ul>
  <li><p>ClusterRole and ClusterRole Bindings</p></li>
</ul>
<figure><img src="https://static.wixstatic.com/media/e7182f_fbf0cf3dae71416693026a9e50538b71~mv2.png/v1/fit/w_1000,h_382,al_c,q_80/file.png"alt="ClusterRole and ClusterRoleBinding"></figure>
<ul>
  <li><p>ServiceAccounts</p></li>
  <li><p>Kubeconfig and how it works</p></li>
  <li><p>Creating client certificates in Kubernetes for human users</p></li>
  <li><p>How to integrate various authentication services in Kubernetes cluster</p></li>
</ul>
<p>So you can give engineers in your organization access to the cluster more easily as an administrator. </p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/reference/access-authn-authz/authorization/" target="_blank">Authorization Overview</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/security/controlling-access/" target="_blank">Controlling Access to K8s API</a></u></p></li>
  <li><p><u><a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/" target="_blank">RBAC</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/" target="_blank">ServiceAccounts</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/" target="_blank">Certificates</a></u> </p></li>
</ul><p><u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">Kubernetes Administrator Course:</a></u> </p><ul>
  <li><p>Authorization with RBAC</p></li>
  <li><p>Certificates in Kubernetes</p></li>
  <li><p>Certificates API</p></li>
  <li><p>Create User Account</p></li>
  <li><p>Connect to Cluster with User</p></li>
  <li><p>Give User Permission</p></li>
  <li><p>Create ServiceAccount and Permissions</p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>13 - Data Management and Data Backups</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_1bb204843d724bc08d5921c0edd83c66~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Kubernetes Data Backups"></figure>
<p>You also will need to take care of data backups in Kubernetes. You need to make sure to have a proper mechanism in place to <strong>easily recover your cluster in case of a disaster</strong>.</p>
<p><br /></p>
<p>For this you need to understand generally how data is managed in Kubernetes and that by default you have <strong>no data persistence in Kubernetes </strong>and generally in the container world! </p>
<p><br /></p>
<p>You need to understand:</p>
<ul>
  <li><p><strong>Application Data</strong>: Understand the concept of Volumes and how data is plugged into the cluster services through Volumes</p></li>
  <li><p><strong>K8s Cluster Configuration Data</strong>: Apart from the application data, you also need to understand etcd, which is data storage for Kubernetes cluster configuration data itself. And you need to understand what&apos;s stored inside, how to backup and secure etcd store with all its sensitive cluster data </p></li>
  <li><p><strong>Securing secret data</strong> for various cluster applications </p></li>
</ul>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/storage/" target="_blank">Volumes</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/" target="_blank">Operating etcd cluster</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/" target="_blank">Encrypting Confidental Data at Rest</a></u> </p></li>
</ul><p><u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">Kubernetes Administrator Course:</a></u></p><ul>
  <li><p>Persisting Data with Volumes</p></li>
  <li><p>ETCD Backup and Restore</p></li>
</ul><p><br /></p></li>
</ul>
<p><br /></p>
<h3>14 - Kubernetes Operators</h3>
<p>As a Kubernetes admin you also need to learn the concept of Kubernetes operators. When you start deploying more complex stateful applications, like databases in your Kubernetes cluster, you will come across the operators.</p>
<p><br /></p>
<p>Kubernetes operator is basically the service itself bundled with the intelligent logic of operating that service automatically within the cluster:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5ef12fdb54264190a7bf3bd02c5edbcf~mv2.png/v1/fit/w_407,h_379,al_c,q_80/file.png"alt="Kubernetes Operators"></figure>
<p>So instead of human intervention of setting up, initiating and maintaining that service, so basically operating the service, the <strong>automated operator does all that</strong>, which is a powerful extension of Kubernetes capabilities.</p>
<p><br /></p>
<p>So understanding this concept, learning how to deploy and use operators, will help you a lot in administering the cluster. ✅</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs: <u><a href="https://kubernetes.io/docs/concepts/extend-kubernetes/operator/" target="_blank">Operator Pattern</a></u> </p><p><br /></p><p>TWN Learning Resource:</p><ul>
  <li><p><u><a href="https://youtu.be/ha3LjlD6g7g" target="_blank">Kubernetes Operator explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/QoDqxm7ybLc" target="_blank">Prometheus Operator</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<h3>15 - Monitoring K8s cluster </h3>
<p>To have insights into what&apos;s going on in your cluster you need monitoring. And it&apos;s your job as a Kubernetes administrator to take care of <strong>configuring and setting up monitoring on a K8s cluster level</strong>. You can&apos;t manage and administer or fix what you can&apos;t see. </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_905fee8f9c24467ba83e07a5e9268718~mv2.png/v1/fit/w_928,h_310,al_c,q_80/file.png"alt="Prometheus Stack to Monitor Kubernetes Cluster"></figure>
<p>One of the most popular tools for monitoring in Kubernetes is Prometheus.</p>
<p><br /></p>
<p>And when you deploy a monitoring stack including Prometheus, AlertManager and all the components that come with it, you will be able to deploy it with a Kubernetes operator.</p>
<p><br /></p>
<p>Which again means all these <strong>skills</strong> that I just mentioned kind of <strong>stack up on top of each other</strong> and each one kind of helps in doing the other task better.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p><u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps Bootcamp - Monitoring with Prometheus:</a></u></p><ul>
  <li><p style="text-align: left;">Introduction to Monitoring with Prometheus</p></li>
  <li><p style="text-align: left;">Install Prometheus Stack in Kubernetes</p></li>
  <li><p style="text-align: left;">Data Visualization with Prometheus UI</p></li>
  <li><p style="text-align: left;">Introduction to Grafana</p></li>
  <li><p style="text-align: left;">Alert Rules in Prometheus</p></li>
  <li><p style="text-align: left;">Create own Alert Rules</p></li>
  <li><p style="text-align: left;">Introduction to Alertmanager</p></li>
  <li><p style="text-align: left;">Configure Alertmanager with Email Receiver</p></li>
  <li><p style="text-align: left;">Trigger Alerts for Email Receiver</p></li>
  <li><p style="text-align: left;">Monitor Third-Party Applications</p></li>
  <li><p style="text-align: left;">Deploy Redis Exporter</p></li>
  <li><p style="text-align: left;">Alert Rules &amp; Grafana Dashboard for Redis</p></li>
  <li><p style="text-align: left;">Collect &amp; Expose Metrics with Prometheus Client Library</p></li>
  <li><p style="text-align: left;">Scrape Own Application Metrics &amp; Configure Own Grafana Dashboard</p></li>
</ul><p>
</p><p><br /></p></li>
</ul>
<p><br /></p>
<h3>16 - Best Practices</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_d98609cb40054f6f88d5710d141572ca~mv2.png/v1/fit/w_1000,h_734,al_c,q_80/file.png"alt="Kubernetes Best Practices"></figure>
<p>And generally for all the above administrative tasks you need to learn the best practices as well, not just any way of doing it and configuring it so that it works, but the <strong>best way of operations and security in Kubernetes</strong>. ⭐️</p>
<p><br /></p>
<p>So that&apos;s basically your roadmap if you want to become a Kubernetes administrator and learn that aspect of the platform. </p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/security/secrets-good-practices/" target="_blank">Good Practices for K8s Secrets</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/configuration/overview/" target="_blank">Configuration Best Practices</a></u> </p></li>
</ul><p>Free TWN Learning Resource:</p><ul>
  <li><p><u><a href="https://youtu.be/oBf5lrmquYI" target="_blank">Kubernetes Security Best Practices</a></u> </p></li>
</ul><p>Whole K8s Administrator, DevOps Bootcamp and DevSecOps Bootcamp is created with Best Practices in mind!</p></li>
</ul>
<p><br /></p>
<h3>Kubernetes Administrator Course</h3>
<p>Now having a roadmap like this is great for structuring your learning, but you still need to:</p>
<ul>
  <li><p>find the right resources that explain these concepts properly</p></li>
  <li><p>you have to put them in the right order</p></li>
  <li><p>make sure you don&apos;t miss any important topics</p></li>
</ul>
<p>That&apos;s still a <strong>huge effort to research all of these</strong> and <strong>drains the motivation</strong> right at the beginning. </p>
<p><br /></p>
<p>So instead as a simpler alternative you can consider enrolling in our pre-structured course, where I already did all that heavy lifting of creating the perfect curriculum with the right hands-on projects and practical examples for these specific learning path.</p>
<p><br /></p>
<p>Many of our students right after completing the course successfully passed the CKA exam and became Certified Kubernetes Administrators only through this course.  But more importantly, because for me this is more important than the certification it&apos;s itself, they are actually able to <strong>apply the knowledge from the course directly in their work</strong> and actually administer a Kubernetes cluster. </p>
<p><br /></p>
<p>So if you are interested in this path, definitely check out our <u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">CKA course</a></u> to make your life easier.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>IV - Kubernetes User Roadmap ‍</strong></h2>
<p><br /></p>
<p>Now of course we don&apos;t operate Kubernetes just for the sake of operating it, right? A product team actually needs to use it. So that&apos;s the Kubernetes user or developer roadmap.</p>
<p><br /></p>
<h3>10 - Deep Dive on Deployment Components</h3>
<p>As a Kubernetes user your main goal is to deploy and run your applications in a Kubernetes cluster with high availability, meaning even if something happens in your application it&apos;s still accessible for users and that&apos;s where Kubernetes power actually lies.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_6d77c85b7e564a45bfb77e5ec8ed7c4c~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Deep Dive into K8s Deployment Components"></figure>
<p>So you need to understand the concepts of:</p>
<ul>
  <li><p><strong>replicating</strong> your application in Kubernetes</p></li>
  <li><p><strong>scaling</strong> your application up and down to adjust to the load</p></li>
</ul>
<p>And for that you need to learn more about:</p>
<ul>
  <li><p>Deployments</p></li>
  <li><p>ReplicaSets</p></li>
  <li><p>How to configure readiness and liveness probes</p></li>
  <li><p>Learn how to achieve all that for stateful applications as well</p></li>
</ul>
<h4></h4>
<h4><strong>Deep Dive on K8s Manifest Files</strong></h4>
<p>But as I mentioned at the beginning, all such cluster components are defined through Kubernetes manifest files.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_1fee53c9230c49279a5d0bc5f1dfbc84~mv2.png/v1/fit/w_1000,h_602,al_c,q_80/file.png"alt="Send K8s manifest files to K8s to apply them"></figure>
<p>So we <strong>send those manifests to Kubernetes to actually apply them</strong> and they contain a definition of what the desired cluster state should be.</p>
<p><br /></p>
<p>Again what should be created, updated and so on. Which means as a Kubernetes user you need deeper knowledge of Kubernetes manifest files: syntax, structure, configuration details for different Kubernetes objects like Deployments, Services etc. So basically learn different configuration options for core K8s resources:</p>
<ul>
  <li><p>Again how to configure liveness and readiness probes for your applications inside the Deployment configuration file</p></li>
  <li><p>How to define Init Containers</p></li>
  <li><p>How to use Volumes, understand the types of Volumes to decide which one is the best for which use case and application</p></li>
  <li><p>And how to configure that for your application definition</p></li>
  <li><p>How to configure Services for different applications with different Service types and so on</p></li>
</ul>
<p><br /></p>
<h3>11 - Deployment Strategies</h3>
<p>Another important thing to learn as a Kubernetes user is deploying your application changes <strong>without causing your application downtime or deploying without risking that the application changes may crash the entire application in a production environment</strong>. ⚡️</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_43b1b6c4180b4f3aa9e30d8718a75a0a~mv2.png/v1/fit/w_383,h_320,al_c,q_80/file.png"alt="Blue-Green Deployment Strategy"></figure>
<p>For that you need to learn deployment strategies that you can use in Kubernetes, such as:</p>
<ul>
  <li><p>Canary deployments</p></li>
  <li><p>Blue-green deployments</p></li>
  <li><p>Rolling updates and rollbacks</p></li>
</ul>
<p>And when you know these deployment strategies, you can decide which one fits best for your application and for your cluster.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>Official Docs:</p><ul>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#canary-deployment" target="_blank">Canary Deployment</a></u> </p></li>
  <li><p><u><a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#updating-a-deployment" target="_blank">Rolling update / Rollback</a></u> </p></li>
</ul><p><u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">Kubernetes Administrator Course</a></u>: Rolling Update</p><p><br /></p></li>
</ul>
<p><br /></p>
<h3>12 - CI/CD Integration</h3>
<p>When deploying your application changes to Kubernetes, you won&apos;t be doing that manually. As part of your developer workflow, you will have CI/CD release pipeline configured that actually deploys to the end environment.</p>
<p><br /></p>
<p>So you need to <strong>learn how to integrate CI/CD into Kubernetes cluster</strong> to do automatic deployments, whether it&apos;s a self-managed or managed Kubernetes service:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_8c634cc4c3724bbebff97313d48d4dca~mv2.png/v1/fit/w_1000,h_240,al_c,q_80/file.png"title="Deploy to Kubernetes cluster from CI/CD pipeline"alt="Integrate Kubernetes in CI/CD pipeline"></figure>
<p>Again with best practices and the right deployment strategy for your application within the frame of Kubernetes.</p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p style="text-align: left;"><u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps Bootcamp - AWS &amp; Kubernetes &amp; Jenkins &amp; Docker - CI/CD:</a></u></p><ul>
  <li><p style="text-align: left;">Complete Jenkins Pipeline - Deploy to EKS - using kubectl</p></li>
  <li><p style="text-align: left;">Complete Jenkins Pipeline - Build and push docker image to ECR and deploy to EKS</p></li>
  <li><p style="text-align: left;">Complete Jenkins Pipeline - Deploy to LKE using Kubernetes CLI plugin and kubeconfig file</p></li>
</ul><p style="text-align: left;"><u><a href="https://www.techworld-with-nana.com/gitlab-cicd-course" target="_blank">GitLab CI/CD Course - Deploy to Kubernetes Cluster</a></u> </p><p><br /></p><p><br /></p></li>
</ul>
<p><br /></p>
<h3>13 - Application Networking (Service Mesh, Ingress)</h3>
<p>Knowledge of those configuration details that I just mentioned may be even more important when you&apos;re deploying <strong>more complex microservice applications</strong>, because now you have to connect them properly within the cluster and configure all needed third-party services for your microservices application.</p>
<p><br /></p>
<p>And that&apos;s where you will need to learn more about services that you can deploy inside cluster for such microservices application, like a <strong>service mesh</strong> for example:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_04d86872280d4becb7eceec8cbe0cd79~mv2.png/v1/fit/w_703,h_351,al_c,q_80/file.png"alt="Service Mesh"></figure>
<p><br /></p>
<p>You also need to understand how to <strong>handle traffic to the cluster as well as between your services:</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5932c0ae12194fa89fbb82d2203ea95a~mv2.png/v1/fit/w_333,h_468,al_c,q_80/file.png"alt="Ingress to handle traffic to the cluster"></figure>
<p><br /></p>
<ul>
  <li><p><span style="color: #3a5698;"><strong>Learning Resources</strong></span></p><p>TWN Learning Resources:</p><ul>
  <li><p><u><a href="https://youtu.be/16fgzklcF7Y" target="_blank">Service Mesh &amp; Istio explained</a></u> </p></li>
  <li><p><u><a href="https://youtu.be/voAyroDb6xk" target="_blank">Istio Setup in Kubernetes</a></u> </p></li>
</ul></li>
</ul>
<p><br /></p>
<p>So that will be the part that covers usage of Kubernetes to the advanced level. </p>
<p><br /></p>
<p>Now hopefully this gives you a clear roadmap of how to structure your learning and helps you get started.</p>
<p><br /></p>
<h3><strong>V - Learning Resources</strong></h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_073c95ac110b4ba5bdc0efe050d40b48~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Learn Kubernetes"></figure>
<p>There are many resources out there:</p>
<ul>
  <li><p>official documentation</p></li>
  <li><p>blog articles</p></li>
  <li><p>individual videos</p></li>
</ul>
<p>...that you can put together to learn all this stuff.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_91fd22cabea2403cb37ad9cd4966322c~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Put together your own learning resources"></figure>
<p>But I know from experience that this is still a lot of <strong>effort and time to research</strong> and <strong>find the right resources</strong>, thinking about the roadmap and structuring, having to collect all the learning resources, analyze which ones are easy to follow and understandable, not outdated, not missing important information, making sure you don&apos;t have knowledge gaps left and so on.  </p>
<p><br /></p>
<p>If you don&apos;t want to go through this process and make it easier for you, save your time and energy as I mentioned before, you can use our courses to learn all this. </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_fbba48da3fd546c3a878f6ced8a9ea43~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="K8s Learning Path"></figure>
<p>You just <strong>follow the prepared path</strong>, which is perfectly laid out for you and learn both the whys to really understand the concepts as well as how&apos;s of practically working with the tool and actually implementing these things.</p>
<p><br /></p>
<p>The below would be the TechWorld with Nana Learning Path, which you can use  ⬇️</p>
<p><br /></p>
<h3></h3>
<h3>0 - Getting Started - Our Kubernetes Crash Course on Youtube </h3>
<p>So in terms of learning resources, as a <strong>starting point</strong> for the shared knowledge that you need for both directions, you can use:</p>
<ul>
  <li><p>my <u><a href="https://youtu.be/s_o8dwzRlu4" target="_blank">one hour Kubernetes video</a></u></p></li>
  <li><p>or the <u><a href="https://youtu.be/X48VuDVv0do" target="_blank">4 hour tutorial video</a></u></p></li>
</ul>
<p>Which are both on my YouTube channel and absolutely free. </p>
<p><br /></p>
<h3>1 - For K8s Administration: Continue with CKA Course</h3>
<p><br /></p>
<p>If it&apos;s easy to follow and understandable for you and you decide you want to learn Kubernetes properly to the <strong>advanced level, for the administration path</strong> you can use our <u><a href="https://www.techworld-with-nana.com/kubernetes-administrator-cka" target="_blank">CKA course</a></u>.</p>
<p><br /></p>
<h3>2 - For K8s Usage and Operational Parts: K8s in complete DevOps process</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_12f098bf328d42739d193cbde601a64b~mv2.png/v1/fit/w_890,h_700,al_c,q_80/file.png"alt="Learn K8s in combination with different DevOps technologies"></figure>
<p>And if you want to build on top of that, learn <strong>how to use Kubernetes to the advanced level</strong> as well as other operational parts of Kubernetes, you can enroll in our <u><a href="https://techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps Bootcamp</a></u>, where I teach <strong>Kubernetes in combination with various other DevOps technologies</strong>, including:</p>
<ul>
  <li><p>The managed Kubernetes service, AWS EKS</p></li>
  <li><p>Automating Kubernetes cluster provisioning with Terraform</p></li>
  <li><p>Deploying from Jenkins CI/CD pipeline to Kubernetes cluster</p></li>
  <li><p>Monitoring and alerting in Kubernetes</p></li>
  <li><p>and more</p></li>
</ul>
<p>Based on actual <strong>real-life use cases</strong> that you can apply directly at work as an engineer.</p>
<p><br /></p>
<h3>3 - Advanced Security in Kubernetes (Complete DevSecOps)</h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_7868489db81641d49ef9cb401096f73a~mv2.png/v1/fit/w_1000,h_816,al_c,q_80/file.png"alt="Level up with DevSecOps Bootcamp"></figure>
<p>And if you want to take it even one step higher and learn about the security best practices and secure configuration of Kubernetes cluster specifically, then soon we are releasing a full <u><a href="https://techworld-with-nana.com/devsecops-bootcamp" target="_blank">DevSecOps bootcamp</a></u>, where a large part of that bootcamp will actually cover <strong>Security in Kubernetes to the advanced level</strong>. </p>
<p>But Kubernetes Security is just one part of the whole Bootcamp.</p>
<p><br /></p>
<p>Security is actually a high priority at companies, so knowledge in this field makes you even more valuable on the job market.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_f105c2d4d775443195f34ceffa2da42d~mv2.png/v1/fit/w_1000,h_800,al_c,q_80/file.png"alt="Different steps to learning and acquiring new engineering skills"></figure>
<p>So you can also use these courses as different <strong>steps of learning the basics</strong> and <strong>then moving to the next level of learning and acquiring new engineering skills</strong>.</p>
<p><br /></p>
<h3>Learning Tip </h3>
<p>But regardless of which resources you use to learn, be sure to <strong>follow this roadmap step by step</strong> for each concept. First understand the why and then immediately put it in practice, so you can have the full picture of the theory and practice.</p>
<p><br /></p>
<h3>Learning on your Own ‍</h3>
<p>If you decide to learn yourself, take a containerized dockerized, open source application and deploy that to a Kubernetes cluster. You will learn a lot in that process alone to at least get started and break through the fear of working with Kubernetes.</p>
<p><br /></p>
<p>I hope this comprehensive roadmap will guide you through your Kubernetes learning journey. </p>
<p><br /></p>
<p></p>
<p>Please let me know in the comments, if it did actually help to break it down like this and also if you want me to do similar roadmaps on any other technology or platform? </p>
<p><br /></p>
<p>I try to read all your comments and respond to all of them as much as I can and I absolutely appreciate hundreds and thousands of positive comments and amazing feedback you guys leave. </p>
<p><br /></p>
<p>So thank you for that! </p>
<p><br /></p>
<p>We have also put together a PDF version of this here: <u><a href="https://techworld-with-nana.com/kubernetes-roadmap" target="_blank">https://techworld-with-nana.com/kubernetes-roadmap </a></u> </p>
<hr>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[10 DevOps Tools to build complete DevOps processes ]]></title><description><![CDATA[A short, but comprehensive overview of the core DevOps tools, that you need to build DevOps processes]]></description><link>https://www.techworld-with-nana.com/post/10-devops-tools</link><guid isPermaLink="false">649fd1c742fd3498c015c5b5</guid><category><![CDATA[DevOps technologies]]></category><pubDate>Mon, 10 Jul 2023 14:08:04 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_281317e34196414f88a7a36ac0c16c46~mv2.jpg/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_281317e34196414f88a7a36ac0c16c46~mv2.jpg/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p style="text-align: center;"><em>This is the written version of</em><u><a href="https://youtu.be/UMQGyeAnfFE" target="_blank"><em> my youtube video</em></a></u><u><a href="https://youtu.be/UMQGyeAnfFE" target="_blank"> </a></u>✍️ </p>
<p><br /></p>
<h2><strong>Introduction</strong></h2>
<p><br /></p>
<p>This article is aimed at giving you a short, but comprehensive overview of the core DevOps tools, that you need to build DevOps processes. So let&apos;s get to it right away! </p>
<p><br /></p>
<h2></h2>
<h2><strong>1 - CI/CD Platform </strong></h2>
<h4>Tools: Jenkins, GitLab CI, GitHub Actions, Azure DevOps</h4>
<p><br /></p>
<p>At the very core of DevOps we have a release pipeline, commonly known as a CI/CD pipeline. So CI/CD tool is the most essential part of a DevOps Engineer&apos;s toolkit.</p>
<p><br /></p>
<p>The most popular and still most widely used one being Jenkins. There are alternatives like GitLab CI is becoming really good or GitHub Actions, Circle CI and many more.</p>
<p><br /></p>
<p>So these tools are about how<strong> to create automated release pipelines</strong>, which run tests, build the application, do different types of application scanning and deploy to the end environment:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_fd34dc6eb21d4399bfefad0a7302fb09~mv2.png/v1/fit/w_1000,h_728,al_c,q_80/file.png"alt="Example CI/CD pipeline"></figure>
<p><br /></p>
<p>And that involves its <strong>integrations</strong> with:</p>
<ul>
  <li><p>Git repositories on GitLab, GitHub etc.</p></li>
  <li><p>Docker registry</p></li>
  <li><p>Cloud platforms</p></li>
</ul>
<p><br /></p>
<p>Writing pipeline as code with Jenkinsfile and so on.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>2 - Cloud Platform</strong></h2>
<h4>Tools: AWS, Azure, Google Cloud</h4>
<p><br /></p>
<p>Okay, we&apos;re testing and releasing application and deploying it, but where are we deploying the application?</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_088d5758c1194a6daad897b281f4b31c~mv2.png/v1/fit/w_1000,h_497,al_c,q_80/file.png"alt="Deploy application to end environment"></figure>
<p><br /></p>
<p>We need a <strong>deployment environment</strong> and that&apos;s where cloud platforms, like AWS, come in.</p>
<p><br /></p>
<p>So AWS services, the virtual instances, security groups around servers, access to application running on the server, configuring the server and so on.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>3 - Docker</strong></h2>
<h2></h2>
<p>Okay cool, we are releasing and deploying applications to AWS virtual machines let&apos;s say, but what are we releasing exactly?  And in which form? You need to understand how the application is packaged and how it runs on the end environment.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a06f623598f64413ba9f2dd51821aa0a~mv2.png/v1/fit/w_725,h_276,al_c,q_80/file.png"alt="Container that has everything the software needs packaged inside"></figure>
<p>The new standard way of packaging and running applications is Docker. Docker <strong>packages software into standardized units called</strong> &quot;<strong>containers</strong>&quot; that have everything the software needs to run including libraries, system tools, code and runtime.</p>
<p><br /></p>
<p>And this improves the development in deployment process. You can quickly deploy and scale applications into any environment and <strong>know your code will run</strong>. </p>
<p><br /></p>
<p>Again there are similar tools, but Docker wins here as well. </p>
<p><br /></p>
<p>So we would create Docker images in the CI/CD pipeline and run the application as Docker container on AWS server for example:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7958c0b5d9c54268a862ec47cbc3a789~mv2.png/v1/fit/w_1000,h_418,al_c,q_80/file.png"alt="Docker in CI/CD pipeline"></figure>
<p><br /></p>
<p><br /></p>
<h2><strong>4 - Kubernetes</strong></h2>
<figure><img src="https://static.wixstatic.com/media/e7182f_7df22bff20dc4389a61a0f2aebb8233b~mv2.png/v1/fit/w_753,h_492,al_c,q_80/file.png"alt="Engineers going wild with Docker containers"></figure>
<p>Now Docker made it easy to create and run applications, so engineers went wild and scaled up applications, because it is easy to do with Docker. </p>
<p><br /></p>
<p>But that made the lives of application operations team harder again. With DevOps we are saying no separate Dev and Ops, we want to unify them, so how to make running dockerized microservices applications easier?</p>
<p><br /></p>
<p>Docker is lightweight and cool, but ephemeral and stateless.</p>
<p><br /></p>
<p><strong>Challenges:</strong></p>
<ul>
  <li><p>So how do we restart applications when they fail</p></li>
  <li><p>how do we scale and replicate applications or microservices if they are getting a lot of requests?</p></li>
  <li><p>How do we run distributed applications like database clusters and so on.</p></li>
  <li><p>Making sure that application is always available, even if some parts of it fail.</p></li>
  <li><p>Also a network of hundreds of containers, when they run on multiple servers, how do we manage that?</p></li>
</ul>
<p>So Kubernetes, which is a container orchestration platform, comes to rescue with all these solutions.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7599c5863a394db290fc0e90c9910c3e~mv2.png/v1/fit/w_948,h_389,al_c,q_80/file.png"alt="Kubernetes features"></figure>
<p>Kubernetes has an <strong>auto-healing</strong> feature and the network layer that makes thousands of containers seem like part of one server.</p>
<p><br /></p>
<p>It has <strong>auto-scheduling</strong> and much more.</p>
<p><br /></p>
<p>Scaling applications up and down as we need is super easily done. Just specifying replica counts in Kubernetes deployments. And you can also <strong>scale up and down</strong> the servers by adding additional worker nodes or control plane nodes easily. </p>
<p><br /></p>
<p><br /></p>
<h2><strong>5 - Monitoring and Alerting</strong></h2>
<h4>Tools: Prometheus, Grafana</h4>
<h2></h2>
<p>Cool, we have thousands of containers or even tens of thousands of containers, which is great and Kubernetes manages a lot of the operations automatically. ✅</p>
<p><br /></p>
<p>And that&apos;s great, but what if things go wrong in the cluster? </p>
<p>Let&apos;s say we have applications equipped with great logging and we have all the information, but we <strong>can&apos;t possibly manually look into logs and metrics of thousands of applications</strong> and see what&apos;s going on. Maybe someone is trying to hack into our application and our application is logging and screaming about it, but we don&apos;t know. </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_1221172dff82454e98db8a277fa3c91e~mv2.png/v1/fit/w_1000,h_436,al_c,q_80/file.png"alt="proper monitoring is needed"></figure>
<p>What about third-party applications, maybe databases is under heavy load or the servers are under attack. </p>
<p><br /></p>
<p>Somebody&apos;s trying to SSH into it or do a port scanning to see what ports are open and so on.</p>
<p><br /></p>
<p>With so much workload, we need <strong>automatic monitoring and alerting</strong> in place that uses the data that we have in the logs and alerts us, if something is out of natural behavior. Again security attacks or maybe a harmless misconfiguration in Kubernetes manifest file that has created a mess in the cluster. ‍♂️</p>
<p><br /></p>
<p>So monitoring and alerting is essential on all levels like infrastructure, runtime and application itself and for Kubernetes specifically, a popular monitoring tool is Prometheus, which comes with a whole stack for monitoring, alerting and visualizing the metrics data:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_26df53740fdb47669516ae43a318cafe~mv2.png/v1/fit/w_1000,h_546,al_c,q_80/file.png"alt="Prometheus monitoring stack"></figure>
<p><br /></p>
<p><br /></p>
<h2><strong>6 - Infrastructure as Code with Terraform</strong></h2>
<h2></h2>
<p>Talking about issues in the cluster they may make the cluster to crash and get into a state that we can&apos;t recover.  </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_d77c6e98871b42798aeee10a73bdf091~mv2.png/v1/fit/w_737,h_484,al_c,q_80/file.png"alt="How can we recover the state"></figure>
<p>Imagine we configure the cluster on AWS, we have thousands of servers with tens of thousands of containers running on them and we have configured monitoring and 100 other services in the cluster and <strong>now it&apos;s all gone!</strong> Because of misconfiguration issues or hacking attacks or whatever. </p>
<p><br /></p>
<p>How can we possibly recover all that? How can we <strong>recreate this state</strong> again? And that&apos;s where &quot;Infrastructure as Code&quot; helps, because it&apos;s really difficult and sometimes impossible to do that manually or it would take just weeks or month. ⏰</p>
<p><br /></p>
<p>So with Infrastructure as Code we actually <strong>script this entire setup</strong>: spinning up AWS resources, Kubernetes cluster, installing all the services. And if something happens, we just run the script again and it recreates everything:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5fa7ab0b19fc4461892af83e19d79846~mv2.png/v1/fit/w_1000,h_518,al_c,q_80/file.png"title="Using IaC to automate infrastructure provisioning"alt="Using IaC to automate infrastructure provisioning"></figure>
<p><br /></p>
<p>Terraform is the most popular tool that allows infrastructure as code.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>7 - Configuration Management</strong></h2>
<h4>Tools: Ansible, Chef, Puppet</h4>
<h2></h2>
<p>Now sometimes if we&apos;re working directly on the operating system like installing packages, maybe doing security patches etc like on Kubernetes worker nodes, that&apos;s where configuration management tools like Ansible may be helpful.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a8b248592eab4064a1278b3e69977ea1~mv2.png/v1/fit/w_727,h_412,al_c,q_80/file.png"alt="Manually configuring servers"></figure>
<p>Again with the scale of Kubernetes, we may have hundreds or thousands of worker nodes and let&apos;s say if you need to do a security patch on those or do an upgrade to the latest container runtime, you <strong>don&apos;t want to be login into each server manually</strong> and executing the scripts. ‍♀️</p>
<p><br /></p>
<p><br /></p>
<p>With Ansible, <strong>just write a script once, </strong>provide it with a list of servers as targets and it will automatically push out and execute scripts on those targets and give you a nice output summary of the state  :</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5852dd2284cd499f93b106573c3d2046~mv2.png/v1/fit/w_683,h_397,al_c,q_80/file.png"title="Using Ansible to automate configuration"alt="Using Ansible to automate configuration"></figure>
<p><br /></p>
<h2><strong>8 - Code Editor</strong></h2>
<h4>Tool: Visual Studio Code</h4>
<figure><img src="https://static.wixstatic.com/media/e7182f_48a9df1c42b041398ac3f656736a1586~mv2.jpg/v1/fit/w_792,h_574,al_c,q_80/file.png"title="All DevOps tools are configurations written as code"alt="All DevOps tools are written as code"></figure>
<p><br /></p>
<p>Now &quot;Infrastructure as Code&quot; is code, &quot;Configuration as Code&quot; is also code.</p>
<p><br /></p>
<p>Again if you&apos;re writing Jenkinsfile, that&apos;s also code.</p>
<p><br /></p>
<p>Or the Dockerfile or Kubernetes manifest files.</p>
<p><br /></p>
<p><br /></p>
<p>So we need to <strong>write all of these in a code editor</strong> such as Visual Studio Code (VSC). You can install  a bunch of plugins and features for specific languages or tools that actually help you write those scripts. They have auto-completion or error checking integrated and so on:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_345cb1a050e6433a8758434dbc82b781~mv2.png/v1/fit/w_982,h_669,al_c,q_80/file.png"alt="Writing configuration files in a code editor"></figure>
<p><br /></p>
<p>And it&apos;s a simple tool, but it is definitely a needed one in DevOps.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>9 - Version Control</strong></h2>
<h4>Tool: Git</h4>
<h2></h2>
<p>Now obviously you aren&apos;t working alone. Well, hopefully not!   But rather in a team with other engineers. </p>
<p><br /></p>
<p>So as a DevOps engineer you aren&apos;t coding the application features themselves, but you are writing pipeline code, Dockerfiles, Helm charts etc. So basically code, which is part of the application or you are writing infrastructures code scripts, which are in a separate project:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_6e5a4ac9d9d84120aabfbd5ee8a7f52d~mv2.png/v1/fit/w_1000,h_578,al_c,q_80/file.png"title="Collaborating on code"alt="Collaborating on code"></figure>
<p><br /></p>
<p>Well, you need to <strong>make that code available and transparent for teams</strong> for other engineers, ideally with <strong>history of changes</strong> and ideally with its own release pipeline to apply infrastructure changes the same way as application changes are applied:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_e5c75ff7ae414df88c93c67b83cf4657~mv2.png/v1/fit/w_1000,h_538,al_c,q_80/file.png"title="Treat IaC same way as application code"alt="Treat IaC same way as application code"></figure>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_b30e788d84ad4d5f961f3597f991c1cf~mv2.png/v1/fit/w_432,h_624,al_c,q_80/file.png"alt="IaC and configuration as code in Git repos"></figure>
<p>Well that&apos;s where you need the knowledge of Git to do all that with your infrastructures code as well as just collaborate with other engineers on code changes.</p>
<p><br /></p>
<p>Git is a <strong>version control system</strong>, which enables:</p>
<p>✅  Tracking of infrastructure changes</p>
<p>✅  Comparing versions, revert changes easily</p>
<p>✅  Code reviews, approval workflows etc.</p>
<p>✅  Trigger Pipeline and automate testing and deployment of infrastructure configurations</p>
<p><br /></p>
<p><br /></p>
<h2><strong>10 - Linux Operating System and Command Line</strong></h2>
<h2></h2>
<p>Now this is an obvious one, but obviously you can&apos;t do much if you don&apos;t know Linux and Linux command line. </p>
<p><br /></p>
<p>➡️  Docker is a lightweight virtual computer, mostly based on Linux</p>
<p>➡️  Worker nodes in Kubernetes are servers mostly with Linux operating system</p>
<p>➡️  Physical or cloud servers are mostly Linux OS</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_cb50222f9a504c3c94a2f3c0e66d1dbe~mv2.png/v1/fit/w_1000,h_668,al_c,q_80/file.png"alt="Learn Linux"></figure>
<p><br /></p>
<p>So even with Infrastructure as Code and all the automations, you will still be <strong>working a lot with Linux and working with command line interface</strong>. </p>
<p><br /></p>
<p>So that&apos;s kind of a must here.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>Combine those tools </strong></h2>
<h2></h2>
<p>Now as you see, when building DevOps processes these tools need to be combined and used together. So even if you know them individually, you need to <strong>learn how to integrate these tools.</strong> </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a871f51753044d57889e9058e329e9dd~mv2.png/v1/fit/w_1000,h_866,al_c,q_80/file.png"alt="Combining DevOps tools is important"></figure>
<p>Like deploy from Jenkins to Kubernetes environment, which is running on AWS and has AWS service integrations, and all that written in Terraform.</p>
<p><br /></p>
<p>And again for that Terraform code that lives in Git repository, you may build a CI/CD pipeline. And all of this is containerized, even Jenkins instances may be running as containers.</p>
<p><br /></p>
<p>And learning these tools in isolation is already challenging, but learning to combine them in a secure properly configured way with industry best practices is way more challenging and that&apos;s exactly why we created the DevOps Bootcamp and are now working on DevSecOps course to teach exactly that, <strong>building complete DevOps and DevSecOps processes with all these tools</strong> and even more. </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_aa273e5a702b46008642a6d39a944dd3~mv2.png/v1/fit/w_1000,h_641,al_c,q_80/file.png"alt="DevOps and DevSecOps processes"></figure>
<p><br /></p>
<p>And more importantly <strong>teaching the underlying concepts</strong> for each step so that you can <strong>easily replace and swap out the tools </strong> when you need to, because when you understand what you are doing and why on a conceptual level, tools just become means to an end and easily replaceable. </p>
<p><br /></p>
<p>And for us that was extremely important part of creating those courses. If you want to learn all that or get more details, you can check out more information here:</p>
<ul>
  <li><p><u><a href="https://techworld-with-nana.com/devops-bootcamp " target="_blank">DevOps Bootcamp</a></u> </p></li>
  <li><p><u><a href="https://techworld-with-nana.com/devsecops-bootcamp" target="_blank">DevSecOps Bootcamp Waitlist </a></u> </p></li>
</ul>
<p><br /></p>
<p>Now I hope I was able to give you some valuable, quick information in this blog post. </p>
<p><br /></p>
<p>Feel free to share it with others, who want to get a short overview of DevOps tools and also let us know in the comments what interesting exciting DevOps tools do you work with or work for besides the ones I mentioned here. </p>
<p><br /></p>
<hr>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[What is Platform Engineering and how it fits into DevOps and Cloud world]]></title><description><![CDATA[There is a lot of discussion going on, where some people are asking whether platform engineering replaces DevOps. Many people say it goes ha]]></description><link>https://www.techworld-with-nana.com/post/what-is-platform-engineering</link><guid isPermaLink="false">647dc2fe896ccb6a49f41f78</guid><category><![CDATA[DevOps as a Career]]></category><pubDate>Wed, 07 Jun 2023 15:14:04 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_15dadc0306e0484896265b6d804246e8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_15dadc0306e0484896265b6d804246e8~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p style="text-align: center;"><em>This is the written version of</em><u><a href="https://youtu.be/ghzsBm8vOms" target="_blank"><em> my youtube video</em></a></u><u><a href="https://youtu.be/ghzsBm8vOms" target="_blank"> </a></u>✍️ </p>
<p><br /></p>
<h2><strong>Introduction</strong></h2>
<p><br /></p>
<p>In this blog article we&apos;re going to talk about a <strong>relatively new hot topic in DevOps and Cloud space</strong>, which is “Platform Engineering”.</p>
<p><br /></p>
<p>There is a lot of discussion going on, where some people are asking whether platform engineering replaces DevOps. Many people say it goes hand in hand and is rather an addition to DevOps, but in reality it&apos;s a bit more complicated than that. Platform engineering actually <strong>changes a lot of established rules we knew</strong> about DevOps, SRE and Cloud engineering, it changes the game and introduces some new rules. </p>
<p><br /></p>
<p>So let&apos;s clearly define, what platform engineering exactly is, more interestingly, why was there even a need for this new role and how it evolved and of course how it compares to DevOps and cloud engineering and does it really replace any of these roles? </p>
<p><br /></p>
<h3><strong>✔  </strong>Topics of this blog article<strong> </strong></h3>
<ul>
  <li><p>Why Platform Engineering? Issue in traditional and DevOps teams</p></li>
  <li><p>Standardize usage of tools</p></li>
  <li><p>Non-functional requirements</p></li>
  <li><p>What Platform Engineering is responsible for?</p></li>
  <li><p>How Platform Engineering works? Internal Developer Platform (IDP)</p></li>
  <li><p>How it looks in real-world?</p></li>
  <li><p>Flexibility with Infrastructure as Code</p></li>
  <li><p>How to implement an IDP successfully</p></li>
  <li><p>Platform Engineering vs DevOps </p></li>
  <li><p>Platform vs Cloud Engineer</p></li>
</ul>
<p><br /></p>
<h2><strong>Why Platform Engineering?</strong></h2>
<p><br /></p>
<p>Whenever a new role or concept appears, the first question should always be: Why was there a need for it? Because there must be a problem behind, that couldn&apos;t be solved with existing solutions and naturally caused the evolution of this role. So let&apos;s talk about these <strong>problems that led to emerging platform engineering as a solution</strong>.</p>
<p><br /></p>
<h3>Issue in traditional Development and Operations teams <strong></strong></h3>
<p>Initially we had developers and operations working in separate teams and developers were responsible for programming the application. And when ready, they would throw the packaged application over to operations, who was responsible for deploying and running that application.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_c3e40d3149ad4d008264a3ad19d7ed7f~mv2.png/v1/fit/w_1000,h_872,al_c,q_80/file.png"alt="Developers and Operations siloed departments"></figure>
<p><br /></p>
<p>So while you had a dedicated operations team with expertise to properly manage the infrastructure or operate company-wide CI/CD platform for example or other platforms for the application teams, this was an <strong>inflexible and slow process:</strong></p>
<p><br /></p>
<p>❌  Developers waiting on operations, when they needed any change in infrastructure or needed any infrastructure resources like additional servers or Jenkins pipeline for their applications</p>
<p><br /></p>
<p>❌ Or on the other side operations team waiting on developers to fix something in the application that affected the deployment or application runtime etc.</p>
<p><br /></p>
<p>So when DevOps was introduced it united those teams removing the inflexible and limiting process.</p>
<p><br /></p>
<h3>Issue in DevOps teams </h3>
<p>DevOps removed the communication challenges and knowledge silos between these two parts, developing application and running and operating the application. So this was a <strong>huge improvement</strong> to the traditional way of working. ✅</p>
<p><br /></p>
<p>This led to <strong>one DevOps team</strong> that now <strong>owns the application as well as the underlying runtime and infrastructure</strong>. So basically the application itself and everything the application needs to run:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_72dd0e6c495449cc89e6a6fc00330ec8~mv2.png/v1/fit/w_1000,h_820,al_c,q_80/file.png"alt="One DevOps team that owns application, runtime and infrastructure"></figure>
<p><br /></p>
<p>This is way more flexible, fast and just a cool way of working for the engineers.  </p>
<p><br /></p>
<p>But with lots of options and ownership comes a lot of responsibility and cognitive load. Now you’re having one DevOps team, everyone developing the application and running the entire stack under the application.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_965dd0ed257f4672851c069dbfef3866~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Too much work for one DevOps team"></figure>
<p>So you have one team where either developers or a dedicated DevOps engineer is setting up:</p>
<ul>
  <li><p>a CI/CD platform and creating the pipelines</p></li>
  <li><p>writing Terraform scripts for infrastructures code</p></li>
  <li><p>spinning up Kubernetes clusters</p></li>
  <li><p>configuring the cluster with best practices</p></li>
  <li><p>configuring logging and monitoring</p></li>
  <li><p>adding security scans</p></li>
  <li><p>maintaining Helm charts</p></li>
  <li><p>also maintaining all these infrastructures code scripts as the tools evolve and new versions come out, right?</p></li>
  <li><p>Managing Docker repositories</p></li>
</ul>
<p>And all these in addition to the actual application development  This is why we are even doing all these other things. </p>
<p><br /></p>
<p>And this increases the flexibility and speed of work and efficiency, but naturally it also adds <strong>tremendous cognitive load</strong> on the team, because too many things that just few roles need to be responsible for.</p>
<p><br /></p>
<h4>10 other DevOps teams having the same challenges</h4>
<p>But it goes even beyond that. Now imagine you have another application team developing a completely different application and they have the same challenges and tasks. So to increase their efficiency a DevOps engineer designs the same CI/CD workflow for the project, sets up cluster, maybe this time a managed EKS service instead of self-managed one, configures all integrations with AWS cloud, configures the storage, adds security scanning steps, monitoring the whole secret management and so on. Maybe they use a different Docker repository like ECR for an easy integration with the EKS cluster.</p>
<p><br /></p>
<p>So they have the same challenges and same needs for their application to run somewhere, so they do all this stuff in their own ways with their own tech stack, right?</p>
<p><br /></p>
<p>And maybe you have 10 more such teams in your organization, now all of them need to figure out all these things for their projects. So you end up with <strong>10 DevOps teams building and operating 10 different platforms</strong> to deliver and run their applications, and this can be hugely inefficient ‍♂️ and wasteful as well as have high cognitive load on individual engineers in those teams.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_81809a03291a485fbfcb7fbda35ee316~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="10 DevOps teams building and operating 10 different tech stack"></figure>
<p><br /></p>
<p>And with complex systems like Kubernetes, sometimes the part of managing infrastructure becomes more effort than writing application code and producing business logic itself. So you have <strong>teams that are too busy building a platform </strong>and have less time to build the business value in the applications. </p>
<p><br /></p>
<h4>Hard to Scale</h4>
<p>Plus you need expertise of so many things within a single team if they have to manage the entire infrastructure stack underneath the application, which means many experienced engineers to add to many teams, which naturally also means higher human resource costs, right?</p>
<p><br /></p>
<p>And finally this becomes hard to scale, because each new project team will have the initial time and effort in setting up the infrastructure before they can even release the application to the end users and very very important point, even though you have these teams managing their own infrastructure and platforms they may actually <strong>not have enough expertise</strong> to do everything correctly. So you may end up with Kubernetes misconfigurations or lack of monitoring and logging entirely or security issues all over your systems.</p>
<p><br /></p>
<p>Plus when you have one compliance or security team in the whole company and tens of teams with 10 completely different tech stacks and just different different ways of running their applications, it will be pretty hard for them to get insights and help all these teams implement proper security. Because it will be really hard for them to understand what&apos;s going on in all these individual projects. So this becomes hard to scale, because we have no standards.</p>
<p><br /></p>
<p>Also when each team uses different tech stack with different configurations this leads to inconsistency across the organization.</p>
<p><br /></p>
<p>And finally I want to mention that the concept of: &quot;<u><em>you build it, you run it</em></u>&quot;, which we know from the SRE was created back when applications weren&apos;t as complex as today and the underlying environment for running the application wasn&apos;t as complex either. So in today&apos;s highly complex, multi-cloud, multi-cluster or hybrid cloud world with thousands of microservices and hundreds of services for those microservices, it&apos;s a bit too much to ask developers to integrate this concept in their work.</p>
<p><br /></p>
<p>Like asking an expert front-end engineer stop your work and focus on properly configuring Kubernetes cluster is not really cool and not the most efficient usage of that engineer&apos;s skills.</p>
<p><br /></p>
<p>So to quickly summarize:</p>
<p>➡️  We either have <strong>autonomous DevOps teams going wild</strong> and doing whatever being fast and flexible, but also leading to too much responsibility on one team with high cognitive load and organization-wide inconsistency.</p>
<p><br /></p>
<p>➡️  Or we have the <strong>traditional separate Dev and Ops,</strong> where infrastructure is managed and secured but with a painfully slow process that really limits the work of developers.</p>
<p><br /></p>
<p>And that&apos;s where Platform Engineering comes in to save the day, but only when implemented correctly! </p>
<p><br /></p>
<h2><strong>So how does platform engineering solve these problems?</strong></h2>
<p><br /></p>
<h3>Standardize usage of tools </h3>
<p>Platform Engineers take the tools that are needed for deploying and running the application and standardize their usage across teams.</p>
<p><br /></p>
<p>So if 10 teams use 10 different CI/CD solutions make a standard CI/CD offering or if every team uses Kubernetes, but in different ways standardize usage of Kubernetes. So basically platform engineers <strong>standardize everything that is part of applications non-functional requirements.</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5d19795e492e4d018ceb9bfd9b9b083f~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Standardize non-functional requirements"></figure>
<p><br /></p>
<h3>Non-Functional Requirements</h3>
<p>So what are the things that we need or the so-called &quot;non-functional requirements&quot; of the application?  So basically things that are not business logic, but necessary to deliver the application to its end users:</p>
<ul>
  <li><p>Every application needs a Version Control System</p></li>
  <li><p>Every application needs CI/CD pipeline</p></li>
  <li><p>The application needs to run somewhere, like on a runtime environment like Kubernetes</p></li>
  <li><p>Kubernetes cluster of course needs an underlying infrastructure like AWS Cloud platform or even a multi-cloud platform</p></li>
  <li><p>The application and the underlying infrastructure also needs logging and monitoring</p></li>
  <li><p>The application also needs proper security</p></li>
</ul>
<p>So as you see there&apos;s a lot of things going on that need to be set up for the application to run properly and each of these categories have lots of different tools and technologies, right?</p>
<p>There are loads of CI/CD platforms out there, there are different Cloud platforms and so on.</p>
<p><br /></p>
<p>So platform engineers standardize usage of tools that offer these services for the platform. Now this is a pretty large list of services that platform team takes over.</p>
<p><br /></p>
<p>So does that mean that platform team now becomes completely responsible for all this or what exactly are they taking over? </p>
<ul>
  <li><p>Do they create Kubernetes cluster and configure it?</p></li>
  <li><p>Do they create the whole CI/CD pipeline and manage it for the teams as well as operate these tools or do platform and product teams share the responsibility for those services?</p></li>
  <li><p>And if so where do we draw the line between those responsibilities?</p></li>
</ul>
<p><br /></p>
<p>And that&apos;s exactly where it gets interesting and why I mentioned that platform engineering only works if implemented correctly </p>
<p><br /></p>
<p>So let&apos;s talk about and really understand what platform engineering is responsible for?</p>
<p><br /></p>
<h3>Separation of Responsibilities - What Platform Engineering is responsible for</h3>
<p>When we think about the tools that application needs, like GitLab, Kubernetes, Jenkins, Cloud platforms, databases and so on, each of these tools has two sides:</p>
<ol>
  <li><p><strong>admin side</strong> </p></li>
  <li><p><strong>user side</strong></p></li>
</ol>
<p>The admin of the tool sets up and configures the tool, make sure backups are in place, access is secured, they install any needed plugins and so on. So all the things to make the tool ready to be used for the actual task that it&apos;s meant for.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_89f8b13063ba4f86a8581a5075ea6711~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Admins set up Kubernetes cluster"></figure>
<p>So for example Kubernetes cluster needs to be provisioned, network plugin needs to be installed, access and permissions need to be configured for security, load balancer configured for the cluster and a bunch of other stuff to make the cluster ready to be used to deploy applications inside:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_18873e5b49ce46bba90c63de2b6c70f0~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Users use the K8s cluster, deploying applications inside the cluster"></figure>
<p>So once the admins set up and prepare the tools to be used, the users can come and use the tool for their intention., like application developers access Jenkins and create pipelines for their application.</p>
<p><br /></p>
<p>So you have a <strong>role that operates and manages the tool</strong> and a <strong>role that uses the tool. </strong>So these two responsibilities can be easily separated.</p>
<p><br /></p>
<h4>2 separate roles - Platform takes over admin side</h4>
<p>Now in DevOps teams as I mentioned, you have both of these responsibilities in one self-sufficient team and that means individual application teams can decide how to operate and how to use the tools, but as I mentioned  these are two separate set of skills and you actually need separate knowledge base to do each. There are even separate Kubernetes certifications for administering the cluster, which is a &quot;Kubernetes administrator&quot; certificate and deploy into the cluster, which is called &quot;Kubernetes application developer&quot; certificate, because again you have to specifically learn each aspect of the tool.</p>
<p><br /></p>
<p>So in order to standardize the tools across teams, platform engineers need to take over the operation side of these tools, which means selecting the standard tools, setting them up, again one standard way with production and security best practices.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2681d909a93642c082a98a8431ff7f52~mv2.png/v1/fit/w_1000,h_686,al_c,q_80/file.png"></figure>
<p>At the same time this is an improvement for the application teams, because it <strong>takes the load off the application developers</strong>. So at least one part of the services they aren&apos;t responsible for anymore. </p>
<p><br /></p>
<p>So less cognitive load and more capacity for creating the business value.</p>
<p><br /></p>
<p>In addition you can use the expertise of your engineers more efficiently, because now instead of needing to have an expert on Kubernetes cluster administration in every team, you can have fewer in platform engineering team, who take over this work for all application teams. Same for CI/CD tools, database administration and so on. </p>
<p><br /></p>
<p>So you basically <strong>extract the need of expertise to administer these tools</strong> from the application teams. So instead of engineers who kind of half know this in that tool in every team, you have one expert team, who has the expertise to operate these tools properly. ✅  Plus because it&apos;s their core responsibility, they also have more time for it, because they don&apos;t have an additional stress of having to release new features. ⏰</p>
<p><br /></p>
<p>So this distributes the pressure, responsibility and the need of expertise among multiple application teams and <strong>one organization-wide platform team</strong>.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_f599274a6ce54480ae05db0319ac387e~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p>And now instead of each team deciding which CI/CD tool to use or which Kubernetes cluster set up to use, <strong>platform team offers a ready solution</strong> for the application teams.</p>
<p><br /></p>
<p>And instead of each team building their pipeline steps with security scans, platform can standardize that these scans are part of each team&apos;s pipeline, like if for example the company has specific regulations for their industry or country these regulation specific scans will be part of every pipeline by default.</p>
<p><br /></p>
<h4>But wait! ✋</h4>
<p>But wait, didn&apos;t we put Dev and Ops together to avoid the siloed teams that have separate responsibilities?  Because now it sounds like we have a separate platform team that decides which tools are going to be used company-wide and sets up all these tools as they see needed and gives access to those tools to the application teams. Sounds a bit like that traditional approach that we definitely don&apos;t want to go back to!</p>
<p><br /></p>
<p>Well, no worries because it continues from here, this is just the baseline </p>
<p><br /></p>
<p>So now how do app teams access these Services?</p>
<p><br /></p>
<h2><strong>How Platform Engineering works - Standardizing without creating silos</strong></h2>
<p><br /></p>
<p>Obviously it would be no improvement if we went back to the slow inflexible process of developers requesting resources from platform team to give them access to some services.</p>
<p><br /></p>
<p>So how does that work?</p>
<p><br /></p>
<h3>Self-Service Platform</h3>
<p>1. Platform team takes all these tools like Cloud platform, Kubernetes, databases that application teams need applies their expertise and configures them properly, so they are secure, up to date etc.</p>
<p><br /></p>
<p>2. Then they <strong>create an abstraction layer</strong> on top with a user-friendly interface like a UI or API, so that application teams can now come and <strong>self-service</strong> whatever services and tools they need.</p>
<p><br /></p>
<h4>Internal Developer Platform (IDP)  </h4>
<figure><img src="https://static.wixstatic.com/media/e7182f_cc5f6d385a694a6292c631811214a3a4~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Internal Developer Platform or IDP"></figure>
<p>So those provisioned configured secured services with an interface to easily interact and access them to use for the applications, is a &quot;platform&quot; and since developers can just log in and self-service without going to platform team to ask for the resources, it is a &quot;platform as a service&quot; for the internal developer teams or also called an &quot;internal developer platform&quot; or &quot;IDP&quot;.  </p>
<p><br /></p>
<p>So platform teams are essentially building the IDP or internal developer platform hiding away and <strong>abstracting the complexity of operating and managing the services</strong> that developers need to release and run their applications. So basically instead of application team logging into an AWS cloud and provisioning EKS cluster they go to the platform or IDP log in to that platform and use the EKS cluster, which is pre-configured with the proper security, backups etc by the platform team within minutes independently without asking platform team for anything.</p>
<p><br /></p>
<p>So application team has the flexibility and speed to access the services for their applications without needing to worry about operating those services </p>
<p><br /></p>
<p>Now let&apos;s go into how this all looks like in real world and think about the following actual scenario.</p>
<p><br /></p>
<h3>How Platform Engineering looks in real-life</h3>
<p>Remember I said platform standardizes the tools that are used across teams instead of five teams using five different CI/CD tools. Now let&apos;s imagine platform offers Gitlab CI/CD as a standard solution, but what if application team A says &quot;I want to use Circle CI instead&quot;. So basically teams want to have freedom to use new modern cool tools or tools that may fit better to their workflow. Maybe they want to use Argo CD or a specific service mesh for their microservice application.</p>
<p><br /></p>
<p>So it seems like with platform team and the whole standardization we are locking down the selection and saying: &quot;<u><em>That&apos;s what we use in this company and that&apos;s it. Everyone abide</em></u>.&quot;</p>
<p><br /></p>
<p>Well of course not. That won&apos;t actually be an improvement and will take away a lot of the flexibility and creativity that autonomous DevOps teams have. And the last thing platform engineers want to do is become a blocker and have a weird dynamic with application teams, because that will kind of ruin the whole concept.</p>
<p><br /></p>
<h4>Freedom of Choice </h4>
<p>So instead of saying you can only use this CI/CD tool or you can only use this cloud platform. The platform team will say &quot;<u><em>oh you want to use Circle CI instead? Okay we will help you set it up and configure it with best practices</em></u>&quot;. And once they do that, they can now integrate it in the platform and offer it to other teams as well, who may also benefit from using Circle CI in their workflows.</p>
<p><br /></p>
<p>And this way, when new services are added to the platform instead of limiting application teams to only use the CI/CD tool or this Docker registry and so on, you are saying you can use any of these registries or CI/CD tools or any services that we offer as part of our platform, because then we know that they are all properly configured and operated in the background and with time the platform may add more such tools that application teams can select from.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_07b851cc14424bc881019359117ebf66~mv2.png/v1/fit/w_1000,h_960,al_c,q_80/file.png"></figure>
<p>Now again in real life there could be cases, where one specific tool may only be needed in one team in which case, platform team can decide that that application teams stays the owner of that team specific tool and they can operate it themselves instead of integrating it into the platform or the IDP.</p>
<p><br /></p>
<h4>Avoiding old way of working ⚠️</h4>
<p>So in no case platform engineering should be mixed up with the old way of working, where the infrastructure or operations team analyzes several tools for security compliance etc decides on one correct way of using that specific tool and lock this down and say to the developers this is the only way you can use this tool and that&apos;s it, because we already did our analysis and that&apos;s the way to go.</p>
<p><br /></p>
<p>So when implementing platform engineer team in your company you want to <strong>keep the platform flexible, while adding guard rails</strong> and pre-configurations to ensure security consistency, proper configuration and so on.</p>
<p><br /></p>
<p>So it&apos;s important to understand that platform engineering is a step forward from DevOps not a step backwards with Dev and Ops separated again.</p>
<p><br /></p>
<p>But I have to say in reality I think if people don&apos;t understand the concept of platform engineering properly, there is a <strong>risk of it drifting towards the step backwards</strong> and I talked about the right approach, but later in this blog I will go a little bit in more detail to how to approach building platform engineering teams in a right way to avoid that. </p>
<p><br /></p>
<p><br /></p>
<h3>Flexibility with Infrastructure as Code</h3>
<p><br /></p>
<p>Now avoiding these strict rules apply not only to which tools developers can choose, but also the usage of those tools. Like saying: &quot;<u><em>this is the only EKS configuration you are allowed to have</em></u>&quot;.</p>
<p><br /></p>
<p>Well, we want to give developers flexibility in the usage of the tools as well, not only in the selection of tools. And as I mentioned if we split the responsibilities, we see that platform is there to take off the load of application teams and create consistency in the organization. In the same way they&apos;re helping the product team to correctly use the tools by introducing <strong>automated guardrails integrated as part of the platform.</strong></p>
<p><br /></p>
<p>So now the question is, how can they integrate those guard rails for using tools correctly into the IDP and make it as part of the offering? </p>
<p><br /></p>
<h4>IaC Templates </h4>
<p>And that&apos;s where infrastructure as code or configuration is code templates come in. Platform team can leverage infrastructure as code tools like Terraform, Ansible or Pulumi to create the templates. This means that these templates can have <strong>baked in best practice configurations. </strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_10300f92a59743fcad0b0efceab11877~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Flexibility with IaC templates"></figure>
<p>They will be used to automate provisioning of resources and additionally offer the flexibility for product teams to pass in various parameters based on their individual project needs to create and configure those services.</p>
<p><br /></p>
<p><br /></p>
<p>So we have a <strong>fully automated self-service process</strong> with a high flexibility. Again an example would be to have various pipeline templates so if product team has a Python application, they can use the pipeline template for python app specifically, which has security scan tools or test steps for python applications pre-configured:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_c5be5be49b0c4f5eab60ea1a015b6efb~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Python Pipeline as Code pre-configured for app teams"></figure>
<p><br /></p>
<p>And this leads to the point of how to implement this concept successfully in a company.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>Implement an internal developer platform successfully</strong></h2>
<p><br /></p>
<p>The way you absolutely should NOT approach this, is by <strong>starting off with a huge master concept</strong> and this ideal IDP or self-service platform that has all the coolest features and modern tech stack integrated inside and is super flexible and powerful and can do thousand things:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_b07b1a5411664208bb1bd215ae260d72~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Having a masterplan for implementing an IDP is not a good idea"></figure>
<p><br /></p>
<p>This is not gonna work in almost all cases and there are several reasons for that, which we&apos;re going to talk about in this section. Instead we want to take a very popular agile approach here as well. </p>
<p><br /></p>
<h3>Small steps that immediately add value </h3>
<p>You should start with small steps, which can immediately add value to at least one team right away. The reason is because in many cases when application teams are using old, outdated technologies, maybe older versions of modern technologies and so on, it will be very <strong>hard for them to migrate</strong> to this full-fledged modern tech stack platform in one full swoop, right?</p>
<p><br /></p>
<p>So it&apos;s not going to be much improvement for them, because they will now have all the effort and work on their side to actually start using that platform. So as a platform team or when implementing internal platform in your organization, you should always first consider, where the product teams are actually starting from. So what is a status quo of technology usage and then help them slowly move from the current state to the ideal state in steps. And this is the approach that is way more efficient.</p>
<p><br /></p>
<h3>Treat the IDP as a product</h3>
<p>So the first thing is, you should treat the IDP as a product. What does it mean?</p>
<p><br /></p>
<p>The IDP or internal developer platform is not a project that you just implement once and that&apos;s it, application teams should just take it from there. Instead it is actually a platform as a service that needs to be <strong>developed over time</strong> and then <strong>continuously improved</strong> over time. So just like the applications that product teams develop, platform is the product that platform engineers develop. And just like application team introduces new features to the applications as well as updates those features, makes improvements and so, on platform teams also need to manage and upgrade versions of the services they offer to the product teams as well as new services and new tools and tool combinations and so on.</p>
<p><br /></p>
<p>So it is a <strong>product with its own development and release life cycle</strong>. So they are developing an internal product or internal platform for developers and that&apos;s why it&apos;s called IDP. And as all other products, it needs ongoing work and iterations.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_423adcb2dcc64cc890e3946e7103fefd~mv2.png/v1/fit/w_1000,h_522,al_c,q_80/file.png"alt="Platform is like a product with release life cycles and versions"></figure>
<p>And as I said just like you develop an application, one step at a time, one feature at a time, <strong>starting with version 1.0 and iteratively improving it</strong>, that&apos;s how platform should be developed as well.</p>
<p><br /></p>
<p>So now the interesting question is: What is the version 1.0 of platform? Where do you start? </p>
<p><br /></p>
<p>Well, I have some practical steps to answer that. </p>
<p><br /></p>
<h3>Identify common tools</h3>
<p>Start with low hanging fruits!</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_67a96f001e4e41c49bfee7ee606cdf28~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p>For example if you identify the common tools that many teams use across the organization, this could be the first candidates of tools that can be integrated into the platform and be offered as a service.</p>
<p><br /></p>
<p>This could be Jenkins, Gitlab CI/CD, Kubernetes, Vault. So basically any tool that has kind of become a standard. So a lot of teams are using it.</p>
<p><br /></p>
<p>In order to do that you need to <strong>work closely with application teams,</strong> because you&apos;re developing the platform for them to make their work more efficient. So it makes sense to see what blocks them the most, what is the most challenging thing for them, like managing Kubernetes cluster and take over that part. Developers will be willing to cooperate if they see that you&apos;re actually solving them an issue or a bottleneck in their work process.</p>
<p><br /></p>
<p>If you start with random stuff like &quot;<u><em>Hey teams, you are all using different CICDs, so we want to introduce a few standard offerings and you all have to switch to one of those</em></u>&quot;.</p>
<p><br /></p>
<p>When you do that you&apos;re actually <strong>adding more to their work without improving their processes</strong> at least not in the short term. So such things should be done more in a later step, maybe version 2.0., once you have proven to them that you&apos;re actually making their work easier and more efficient and already offloaded some of the work. So now they have a little bit more capacity to do this kind of initial additional work.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_3569eac7eb1a48ac88fe3613f17ba746~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Human aspect is important in implementing an IDP successfully"></figure>
<p>So as you see building a platform team successfully is as much about <strong>human aspect</strong> and how to manage the work with application teams and how to create a culture around it, set collaboration rules and clear responsibilities, as much as it is about tools and technologies that allow implementing that self-service internal developer platform.</p>
<p><br /></p>
<p>And in long term you have a company-wide platform engineer team and a bunch of app teams and instead of each application team doing their own thing and handling application runtime and infrastructure in their own way, they use pre-configured services, that they can self-service via a platform that platform team has built with the best practices and standards and all the expertise already baked into it </p>
<p><br /></p>
<p>So now a very interesting and logical question is.. </p>
<h3></h3>
<h2><strong>Does this mean we don&apos;t need DevOps engineer anymore? Platform vs DevOps Engineering</strong></h2>
<p><br /></p>
<p>We talked about the shared responsibility between platform and application team, right? That platform takes over the operations part, while application team is responsible for properly using the tools and integrating them into their development workflow.</p>
<p><br /></p>
<p>➡️   So application teams don&apos;t need to set up and operate the cluster, but they still need to know <strong>how to deploy</strong> their applications into the cluster properly, like create correctly configured manifest files.</p>
<p>➡️  They don&apos;t need to know how to create Terraform modules for infrastructure, but they still need to know <strong>how to use those Terraform modules</strong> and maybe integrate them into their pipelines.</p>
<p>➡️  They may get a CI/CD template from the platform, but they still need to <strong>set it up and add additional needed steps</strong> for their application.</p>
<p><br /></p>
<p>So in addition to application development they still have some non-functional requirements they need to worry about, even though the scope of that has become way less by distributing that to the platform team. </p>
<p><br /></p>
<p>And this means you still need DevOps engineers in product teams, but they now have shared their cognitive load and don&apos;t have to have deep expertise in cloud and Kubernetes and Helm charts, monitoring, security, compliance, development and hundred other things. Because now they are focused on properly using those non-functional tools, rather than operating them.</p>
<p><br /></p>
<p>So the <strong>work is more focused</strong> and easier through this load distribution, but they still need to do those tasks properly. And need expertise in using those tools.</p>
<p><br /></p>
<p>But here is where it gets even more interesting.</p>
<p><br /></p>
<h3>DevOps for Platform </h3>
<figure><img src="https://static.wixstatic.com/media/e7182f_54c835f9a87e4d708ed691bc08e22355~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Platform needs continuous development, continuous improvements"></figure>
<p>As I said the platform is also a product, right? </p>
<p><br /></p>
<p>It&apos;s a product for the application teams. The same way you need to add features, make the UI more user-friendly, offer services for new cool tools, fix bugs in the platform, develop Terraform modules and using GitOps, create pipelines for their infrastructure as code that is underlying the platform.</p>
<p><br /></p>
<p>Again if you have a separate cloud or on-premise infrastructure team or security team platform team needs to work closely with them to build their platform product.</p>
<p><br /></p>
<p>So this means platform just like the application needs a <strong>continuous development</strong> with many feedback iterations and close input gathering from the end users, which are mostly application teams, but sometimes also governance and compliance people, because they need access to the information about whether systems are compliant across organizations.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_0364d52813b34564b2b2ab2571fee3f2~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="DevOps for developing the internal developer platform"></figure>
<p>So all of these that I just described and listed are actually <strong>processes that require DevOps,</strong> because they&apos;re the same processes that we use in the application development.</p>
<p><br /></p>
<p>So you have tons of the DevOps processes needed in the platform development process, which logically would mean that you may need a <strong>separate DevOps engineer role in the platform team</strong> as well.</p>
<p><br /></p>
<h3>A lot of variations </h3>
<p>Now in reality as we know, when it comes to DevOps there are lots of <strong>variations of how organizations implement that</strong>.</p>
<p><br /></p>
<p>➡️   It could be that companies hire platform engineers, who do the DevOps and Cloud engineering tasks and they will just call it a platform engineer role. So different job title, same skills.</p>
<p>➡️   It could be that they move the DevOps engineers from the product teams completely to form a separate platform team. But this would then create a vacuum in the application teams, because as I said you still need someone, who will create Kubernetes manifest files or create CI/CD pipelines and integrate it with various platforms. </p>
<p><br /></p>
<p>So companies may make these tasks as part of developer work. So you may have application teams without a dedicated DevOps engineer role, where developers are taking over those tasks, which is already practiced in many organizations.</p>
<p><br /></p>
<p>But the bottom line is that whether you have a dedicated DevOps engineer role in both teams or not you need the <strong>DevOps processes both in the application and platform development.</strong> And again how companies decide to structure the teams and the roles that is most probably gonna vary across organizations. So based on that, you essentially end up with application or product DevOps team and a platform DevOps team:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_8dcb3887ee9b44a58a96c2dbfb840781~mv2.png/v1/fit/w_1000,h_592,al_c,q_80/file.png"alt="Application DevOps team and Platform DevOps team"></figure>
<p><br /></p>
<p><br /></p>
<h3>Do we teach Application DevOps side or Platform DevOps side?</h3>
<p><br /></p>
<p>Now there is one question we get asked a lot so I want to address it here in this context many people ask, which of these parts do we teach in our <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">DevOps bootcamp</a></u> and courses. </p>
<p>Do we teach the application DevOps side or the platform DevOps site and this question became way more common since the introduction of the platform role.</p>
<p><br /></p>
<p>In our DevOps bootcamp, you actually <strong>learn both parts of DevOps:</strong></p>
<p>✅   administering and operating or setting up the tools as well as</p>
<p>✅   using those tools to streamline the development process.</p>
<p><br /></p>
<p>For example our Kubernetes administrator course is <strong>completely about setting up and administering the cluster</strong> as the name also suggests, which would be part of Platform engineers responsibility.</p>
<p><br /></p>
<p>While in Kubernetes module in our DevOps bootcamp, you&apos;ll learn mostly the Kubernetes usage side, but also the part of configuring proper monitoring and setting up alerting in the cluster or setting up load balancer and automatically deploying to the cluster from a CI/CD pipeline for example. When it comes to infrastructure as code with Terraform that we talked about, here in the Bootcamp you learn how to automatically provision AWS infrastructure, like EC2 servers or EKS cluster, but you also learn how to use the existing Terraform modules and integrate it in the application CI/CD pipeline for example.</p>
<p><br /></p>
<p>And <strong>same with every other tool</strong> that we cover in the bootcamp: Jenkins, Nexus repository for Docker images etc:</p>
<ol>
  <li><p>We basically provision these tools from scratch on dedicated virtual machines</p></li>
  <li><p>Then write infrastructure as code scripts to automate the provisioning and configuration of these tools</p></li>
</ol>
<p>Learn things like installing plugins and doing Jenkins administration, creating users and accesses, cleanup policies on Nexus for example. So tasks that would actually be part of the platform engineer&apos;s skills. But we also use these tools for setting up application pipelines on Jenkins, learning different types of pipelines and how to configure them, how to integrate and hook them into various other tools or uploading application artifacts on Nexus and creating those repositories on Nexus and so on.</p>
<p><br /></p>
<p>And then in the GitLab CI/CD course for example it is very similar. You learn not only how to set up the CI/CD pipeline for the microservices application, but also the architecture of Gitlab CI/CD and how to configure GitLab runners locally as well as on AWS virtual machine. How to configure different agents on those runners based on your pipeline tasks, which again would be the knowledge that platform engineer would need.</p>
<p><br /></p>
<h4>Having the skillset of both </h4>
<p>So we&apos;ve had for a long time DevOps engineer needing to have this skill set of both. Setting up the cluster and using the cluster, setting up and securing AWS infrastructure and using the infrastructure to deploy and run applications.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_13dc44b51fe74b62935530db2bb5cd38~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p>Now these tasks and <strong>roles are split and rightfully so</strong>. Not because knowing both is too overwhelming or because you can&apos;t know everything, I definitely love knowing and doing both parts and I have been working on those in my projects and you can actually learn them. But in reality depending on how complex a project is, it may be unrealistic that one person or role will have time and capacity at their job to do both.</p>
<p><br /></p>
<p>So you can decide what you do with your full complete DevOps knowledge after finishing the bootcamp or the courses:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_acf5b10eccd3437e8a2af756e025a683~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"></figure>
<p><br /></p>
<p>➡️  You can <strong>join the platform team</strong> and use your knowledge there to configure and administer tools and build the developer platform with the knowledge.</p>
<p>➡️  Or you can <strong>join the development team</strong> and streamline application development and release processes there, while being the interface or intermediary between the platform team and your application team.</p>
<p><br /></p>
<p>And what&apos;s absolutely obvious is that you can do any of these jobs much better when you have the full picture and complete knowledge of these tools from both perspectives, because as a platform engineer you need to work closely with application teams and understand their processes to find any bottlenecks or things that are needed in all teams that can be standardized. So the full knowledge of understanding both sides like we teach in our courses and bootcamp, you can do the job much easier, because you understand both aspects.</p>
<p><br /></p>
<p>And the final topic I want to address is..</p>
<h3></h3>
<h3>What is a difference between Platform and Cloud Engineer?</h3>
<p><br /></p>
<p>Well, generally speaking <strong>platform engineering is an enhancement of all other concepts,</strong> like DevOps, Cloud, SRE as we saw throughout this article.</p>
<p><br /></p>
<h4>Cloud Engineer must be an expert in cloud services</h4>
<figure><img src="https://static.wixstatic.com/media/e7182f_0837e33c43814ad383991291c20a9eac~mv2.png/v1/fit/w_1000,h_822,al_c,q_80/file.png"alt="Cloud engineer is an expert in cloud services"></figure>
<p>But if we narrow it down to the main differences, cloud engineer needs to know cloud services, be an expert in that. Usually even specializing in one of the cloud platforms. So they need to know how to migrate from on-premise to cloud, how to set up a hybrid infrastructure, manage the storage and backups on cloud, manage cloud costs.</p>
<p><br /></p>
<p>So basically everything cloud related. And they should be able to combine cloud services to build infrastructure that maps to what company needs.</p>
<p><br /></p>
<h4>Platform Engineers have wider range of knowledge and tools outside the cloud</h4>
<p><br /></p>
<p>But <strong>platform actually has a wider range of knowledge</strong> of the tools outside the cloud alone and they actually build a platform that developers or product teams can use to self-service any resources they need on top of the cloud resources and various other tools. So basically they&apos;re taking the infrastructure and service that AWS for example offers to custom platform as a service for the company internal teams:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_73485d4546ea463896cd007e679303fe~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="Full Picture Cloud vs Platform Engineer"></figure>
<p><br /></p>
<p>So essentially they build a layer on top of cloud with bunch of cloud services as well as other services and tools which are not part of cloud.</p>
<p><br /></p>
<h2><strong>Wrap Up </strong></h2>
<p><br /></p>
<p>And I&apos;m sure as always each project will look different and implement these concepts in various ways.</p>
<ul>
  <li><p>Many companies will hire DevOps engineers as Platform engineers</p></li>
  <li><p>Many Cloud engineers will probably become Platform engineers as well in smaller companies Platform engineers will probably take over the DevOps role.</p></li>
  <li><p>In larger company cloud team will work with platform team and share their expertise. So cloud layer with platform layer on top.</p></li>
</ul>
<p>And and this may be like this for a while until an <strong>industry standard evolves</strong> of one standard way to structure the teams.  It could be a large company that implements this successfully at scale and then other companies can basically replicate that successful model.</p>
<p><br /></p>
<p>So we have some kind of standardization there, but at its core that&apos;s the foundation. </p>
<p><br /></p>
<p>And from an engineer perspective it really helps you in your job search as well as to actually do your work properly when you are hired for a specific role, when you understand these differences and the vision of responsibilities, because you can then <strong>guide your team</strong> or you you can guide your company into having more clarity around these roles as well.</p>
<p><br /></p>
<p>So we&apos;ve talked about a ton of things in this article and I really hope I was able to help you understand what platform engineering exactly is, how it fits into the existing DevOps and Cloud world and I hope you got some valuable information from it that you can use in practice in your own work or generally in your career </p>
<p><br /></p>
<p>If it was helpful, give me some support and share it with your colleagues </p>
<p><br /></p>
<hr>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[Cloud Engineer vs DevOps Engineer - Differences and Overlaps of tasks and responsibilities]]></title><description><![CDATA[This is the written version of my youtube video ✍️  Introduction This blog article is about two popular roles in software engineering:...]]></description><link>https://www.techworld-with-nana.com/post/cloud-engineer-vs-devops-engineer</link><guid isPermaLink="false">64562c2b991b9888e0be24db</guid><category><![CDATA[DevOps as a Career]]></category><pubDate>Mon, 08 May 2023 15:02:42 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_2811062627ac409b81beb4ed9e7c5bd3~mv2.png/v1/fit/w_1000,h_720,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2811062627ac409b81beb4ed9e7c5bd3~mv2.png/v1/fit/w_1000,h_720,al_c,q_80/file.png"alt="Cloud Engineer vs DevOps engineer"></figure>
<p style="text-align: center;"><em>This is the written version of </em><u><a href="https://youtu.be/N1-mhvUghb0" target="_blank"><em>my youtube video</em></a></u><u><a href="https://youtu.be/N1-mhvUghb0" target="_blank"> </a></u>✍️ </p>
<p><br /></p>
<h3>Introduction</h3>
<p><br /></p>
<p>This blog article is about two popular roles in software engineering:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_f32722eb821c4ac891a03bd735b9b766~mv2.png/v1/fit/w_1000,h_836,al_c,q_80/file.png"alt="DevOps Engineer and Cloud Engineer role"></figure>
<p style="text-align: center;">&quot;DevOps Engineer&quot; and &quot;Cloud Engineer&quot;</p>
<p><br /></p>
<p>Now there is a <strong>lot of mix up of these two roles</strong> and many people, many companies often use them interchangeably. They mix the tasks and responsibilities of these two very often. There are for example plenty of job descriptions for &quot;DevOps Cloud Engineer&quot; or &quot;Cloud DevOps Engineer&quot;  , which would naturally make you think that they are the same role. But then why would you have two names for the same role? </p>
<p><br /></p>
<p>And that&apos;s exactly what I&apos;m going to discuss and clarify in this article.</p>
<p><br /></p>
<p><strong>Why people mix up those 2 roles</strong></p>
<p>So first of all, let&apos;s start by saying that DevOps in Cloud Engineer are actually <strong>two different roles with different purposes and objectives</strong>. But the reason why people mix them up and even use them interchangeably is, because they often have many overlapping responsibilities and skills and also because for relatively new roles, companies sometimes have hard time defining the boundaries between roles.</p>
<p><br /></p>
<p>Like when a software developer should program full stack web application, do operations, monitoring, build the whole CI/CD pipeline, fix the company&apos;s Wi-Fi and change the light bulbs in the office. So basically just putting anything and everything on one person or one job description. </p>
<p>So in this article we&apos;re gonna define those boundaries.</p>
<p><br /></p>
<p><strong>✔  Topics of this blog article </strong></p>
<ul>
  <li><p>Objectives of DevOps and Cloud Engineer</p></li>
  <li><p>What a DevOps engineer does</p></li>
  <li><p>What a Cloud engineer does</p></li>
  <li><p>What are the tasks they both do, so the similarities and overlaps between these roles</p></li>
  <li><p>What is that really differentiates them and draws a clear line between the two</p></li>
</ul>
<p>And of course since we are on TechWorld with Nana, we&apos;re gonna see all of that with actual practical examples, not just some generic explanations. </p>
<p><br /></p>
<h3>DevOps Engineer Role</h3>
<p><br /></p>
<p>First let me get one thing out of the way, which is that DevOps engineer was actually not meant as a separate role originally. DevOps is a concept and a set of principles and different engineer roles like software developer, IT operation, server administrator and so on were supposed to implement those DevOps practices and principles. So that was the original idea of DevOps. </p>
<p><br /></p>
<p>However, the reality now looks different with hundreds of thousands of DevOps engineer jobs, which means it actually evolved into its own engineering role, which I personally think makes total sense.</p>
<p><br /></p>
<p>Now that we&apos;ve established that DevOps engineer is its own role, let&apos;s compare the two and let&apos;s start with the objectives.</p>
<p><br /></p>
<h3>Different Objectives of DevOps and Cloud Engineer</h3>
<p><br /></p>
<p><strong>DevOps Engineer Objective </strong></p>
<p>DevOps Engineer&apos;s main objective is to <strong>make the process of releasing software fast, efficient, without bugs</strong> or issues and they achieve that by automating this whole process. So instead of manual steps of approving the release, testing the application changes, validating that everything works or making sure the security is configured etc.</p>
<p><br /></p>
<p>So the DevOps engineers automate this whole process so that it&apos;s faster without manual human interaction points.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_e760525e43b24a2ba3b5e7e4096aab2b~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="DevOps engineer automating release pipeline"></figure>
<p><br /></p>
<p>And I have a detailed video on that if you want to see exactly what <u><a href="https://youtu.be/0yWAtQ6wYNM?t=897" target="_blank">DevOps Engineers tasks and responsibilities</a></u> are. But in a nutshell that&apos;s the objective of a DevOps Engineer.</p>
<p><br /></p>
<p><strong>Cloud Engineer Objective </strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_56981fab98584edaaa632c6711ab2f4d~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Create and manage cloud infrastructure"alt="Create and manage cloud infrastructure"></figure>
<p>On the other hand, the cloud engineer&apos;s main objective is to <strong>create and manage infrastructure on cloud</strong>, so that applications that companies develop can run on it.</p>
<p><br /></p>
<p>Now you&apos;re probably thinking: &quot;create and manage cloud infrastructure? That sounds very vague and not really clear and specific&quot;.   </p>
<p><br /></p>
<p>So let&apos;s start from the very beginning.</p>
<p><br /></p>
<p><br /></p>
<h3>The need for Cloud Engineers</h3>
<p><br /></p>
<p><strong>Cloud platforms ☁</strong></p>
<p>First of all, we have hundreds of cloud platforms, which are basically companies who went and bought a whole bunch of computers, server machines, wired up the whole thing, configured the networking etc.,  built the data centers with all those machines in different locations. And other companies can now rent those servers for the fraction of the cost.</p>
<p><br /></p>
<p>At least that&apos;s how it started, with a simple use case to be able to rent a server without having to do the whole infrastructure setup yourself, which is a huge overhead if you only need just a few servers. But over time that evolved into something much more powerful and much more complex. </p>
<p><br /></p>
<p>Now we have cloud platforms that offer way more than just compute resources, like renting a server. You can now get not only your <strong>whole infrastructure on cloud, but also a bunch of services on top </strong>of that like:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_eb9400148d674288b3c78a3175f89a74~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="cloud platforms offering many services on top of computing resources"></figure>
<ul>
  <li><p>your application needs database services</p></li>
  <li><p>cache</p></li>
  <li><p>storage backup</p></li>
  <li><p>maybe you want to run the whole application setup in a Kubernetes cluster</p></li>
  <li><p>you want to store the Docker images on cloud</p></li>
  <li><p>build the whole CI/CD pipeline even</p></li>
  <li><p>and you want to do it in multiple geographic regions</p></li>
  <li><p>And when you have hundreds of employees you also want to manage access to your cloud resources users and permissions</p></li>
  <li><p>and so on</p></li>
</ul>
<p><br /></p>
<p>Cloud platforms now offer all that through their cloud services and we have tons of <strong>small local cloud platforms</strong> with maybe one, two data centers, who only operate in one country or region, then we have some larger ones and the <strong>gigantic ones like AWS, Google Cloud, Azure</strong>. These three are currently the biggest cloud platforms, with AWS being by far the most highly used one.</p>
<p><br /></p>
<p>So now whether you are a small startup or a large company, you can create your entire setup on a cloud platform, without having to own any infrastructure and often without having to install and configure things from scratch, like set up a Docker image registry or installing a Kubernetes cluster on servers, because this type of things are often provided as <strong>managed ready services</strong> for you to use by those cloud providers.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7e7932a172804b538791cb632ad1bc9c~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Many AWS services"alt="AWS services"></figure>
<p>So let&apos;s take AWS as an example. So with AWS you get tons of services that are already configured on top of the actual underlying physical infrastructure. AWS has services not only for software development, but also for machine learning, big data processing, mobile development. It has many types of storage services based on speed, size, durability.</p>
<p><br /></p>
<p>So you have literally everything on there. But not only that, you also have an option to create and manage your own virtual servers and install things on that yourself or you can let AWS manage the underlying infrastructure completely for you, by using their higher level managed services. Or even the combination of both. </p>
<p><br /></p>
<p><strong>Complexity to set up and manage  </strong></p>
<p>So you have all these options, which is very powerful. But with so many options and so many services also comes the complexity, which means, sure, now you don&apos;t have to know how to set up an entire registry and set up database with backups from scratch or manager storage yourself, you can use the cloud services directly for those things.</p>
<p><br /></p>
<p>But now you need to <strong>learn how to use those services and integrate them</strong> or plug them in into your applications. And those services are specific to the cloud platform that provides them.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2db6df2b1a9540aca5359630d685d0ef~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"alt="You need to learn cloud services"></figure>
<p>So you need to learn how to use Kubernetes cluster service <strong>on AWS,</strong> which is called &quot;EKS&quot;. Or you have to learn how to use and manage an image registry <strong>on AWS,</strong> called &quot;ECR&quot;.</p>
<p><br /></p>
<p>If you instead go for Azure or Google cloud or you move away from AWS to one of those platforms, now you have to learn how to use the equivalent service on Azure or Google Cloud, because they work a little bit differently.</p>
<p> </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_982d83891f6d441e903116f1dfa07dcb~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Cloud specific knowledge needed"alt="Cloud specific knowledge needed"></figure>
<p>And these platforms provide the same services, but they work differently and have different configuration options. So you have to learn all that specific to the platform. The same way you need to set up the underlying infrastructure, servers, firewall configuration, proxies for your application, security within your network, etc. So you need to learn AWS services, that allow all this configuration.</p>
<p><br /></p>
<p><br /></p>
<h3>Cloud Engineer Tasks and Responsibilities</h3>
<p><br /></p>
<p><strong>1) Configuration with Best Practices </strong></p>
<p>And when you use those services, you don&apos;t just configure them so that your application runs on it, everything works and that&apos;s it. That&apos;s actually not enough. You need to <strong>configure it reliably and securely.</strong></p>
<p><br /></p>
<p>Because everything may be working fine, but you get millions of users visiting your application and now your whole setup crashes, because your application setup was not designed for such a high load. Or even more important, someone hacks into your setup, wiping out your data or completely messing up your whole setup. Or a new developer accidentally misconfigures something and ruins your AWS infrastructure setup.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_06ab302eeccf4002ab90e1d40b72e527~mv2.png/v1/fit/w_1000,h_610,al_c,q_80/file.png"title="Build reliable and secure cloud infrastructure"alt="Build reliable and secure cloud infrastructure"></figure>
<p>So knowing this cloud specific services and how to configure them reliably, securely, in a proper way for your applications to run smoothly, these are exactly the tasks and responsibilities of a Cloud Engineer.</p>
<p><br /></p>
<p><br /></p>
<p><br /></p>
<p><strong>2) Cloud Platform specific knowledge </strong></p>
<p>I mentioned that cloud platforms are different and their services need to be configured differently. So you need a <strong>specific knowledge of that specific cloud provider</strong> to properly configure your infrastructure setup there. </p>
<p><br /></p>
<p>This means as a Cloud Engineer, you usually <strong>specialize in one cloud platform</strong> and learn how to use their services. So you&apos;re kind of an expert in that cloud platform. That&apos;s why we usually have &quot;AWS Cloud Engineer&quot;, &quot;Azure Cloud Engineer&quot; specializations.</p>
<p><br /></p>
<p>Now going back to the initial definition of creating and managing cloud infrastructure, what would be some example tasks of an AWS Cloud Engineer, as part of creating and managing AWS cloud infrastructure?  </p>
<p><br /></p>
<p>Well let&apos;s say a company is developing an application or multiple applications, which should run on cloud. So AWS Cloud Engineer&apos;s job is to decide, how to create an AWS infrastructure to run those applications, which AWS services to use, should they rent servers and directly configure stuff on them or use managed services instead, which cost more but are easier to configure and manage. Like install and configure cluster database on servers or use the RDS service from AWS where all of that is already configured. </p>
<p><br /></p>
<p>Then we have questions like, which storage to use and how to configure that? Maybe your application needs different types of storages, so how to map those needs to AWS storage types. How to do data backups, so in case of disaster data can be restored. Make sure the applications and access to the whole AWS infrastructure is secure.</p>
<p><br /></p>
<p>Because of the complexity of such large cloud platforms and so many options, it&apos;s powerful, but complex. So there are lots of ways of misconfiguring things, so it&apos;s not that straightforward. That&apos;s why good Cloud Engineers who are able to configure things correctly with best practices, security, etc. are so <strong>valuable</strong>. </p>
<p><br /></p>
<p>And since Cloud Engineer has knowledge of all AWS Services, they know how to configure what company needs with those services. So they can <strong>directly map the company&apos;s business needs and requirements to the cloud setup:</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_6daf1ce1be7649e8b26fd2c8746c54d8~mv2.png/v1/fit/w_1000,h_926,al_c,q_80/file.png"title="Map company needs and requirements into cloud setup"alt="Map company needs and requirements into cloud setup"></figure>
<p>Like if a company needs geographical distribution all over the world, because they have users all over the globe, Cloud Engineer would help configure that by using the right services and configuring them correctly.</p>
<p><br /></p>
<p>Another example would be, if a company has a microservices application to deploy on cloud. Of course you need expertise in how to configure the cloud infrastructure to make sure a complex microservices application can run on it with production best practices, like redundancy, reliability security, data backup and restore mechanism. Again that&apos;s where the Cloud Engineering skills and expertise is needed. </p>
<p><br /></p>
<p><strong>3) Cloud Migrations</strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_baf6359c94ff467388cab96c556912f3~mv2.png/v1/fit/w_884,h_526,al_c,q_80/file.png"title="Moving to cloud can be especially challenging"alt="Moving to cloud can be especially challenging"></figure>
<p>Another interesting use case is as we all know, more and more companies are moving to cloud, but many of them aren&apos;t starting from scratch, but rather they have an existing on-premise infrastructure and services so they want to migrate that to cloud. And <strong>building something from scratch on cloud is often way easier</strong>, than migrating an existing infrastructure to it.</p>
<p><br /></p>
<p><br /></p>
<p>Many companies are also using hybrid cloud. So they want to migrate only parts of their local infrastructure to cloud, which means they need <strong>integrations between local and the cloud infrastructure</strong>. Many companies also do multi-cloud, which means they want to use AWS and Azure, maybe for redundancy like if something happens to one AWS data center you have a fallback. Or just in order to take advantage of strength of different cloud providers and what they are good at, like they want to use AWS computing resources, but company has lots of internal Microsoft applications, so they want to leverage Azure Cloud for that. So with multi-cloud again services and applications need to be <strong>connected across cloud platforms</strong> and those are all very challenging tasks. </p>
<p><br /></p>
<p>So in those cases, Cloud Engineer would develop the strategy for migrating and help successfully migrate to cloud and create integrations in hybrid or multi-cloud environments, where services need to communicate securely and reliably across those environments. </p>
<p><br /></p>
<p><strong>4) Cost Tracking and Optimization </strong></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_1d1e42aad9664a56943d3aec0af4c4cb~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Monitor and optimize cloud costs"alt="Monitor and optimize cloud costs"></figure>
<p>Another example is <strong>cost tracking</strong>, because when you use many resources, many cloud services, combine them in various ways, you need to watch out for the cost or at least be able to predict, how much it will cost. And when you have complex setup with geographic distributions using many cloud provided services for convenience, it can get pretty expensive. And that&apos;s again where Cloud Engineers tasks and responsibilities are, to make sure that company doesn&apos;t have huge cost overruns on their cloud infrastructure.</p>
<p><br /></p>
<p>Cloud Engineers would also <strong>monitor</strong> the configured infrastructure, to <strong>detect any attempts of hacking</strong> into the systems. Maybe the cost is spiking because some resources were misconfigured. </p>
<p><br /></p>
<p>Are service running fine, do they have enough resources to handle the traffic and so on.</p>
<p><br /></p>
<p><strong>5) Automation using Infrastructure as Code </strong></p>
<p>And finally cloud services and infrastructure can get very complex very fast. Which means you don&apos;t want to be managing and configuring or creating things in a complex cloud setup manually. 
 You don&apos;t want people joining your company or your cloud team wondering, how the whole infrastructure was created, how it&apos;s configured, what&apos;s configured, where and why. So you need some <strong>transparency of your infrastructure</strong> setups as well. And also making sure when someone joins in the cloud engineering team, they can easily get on board and not accidentally misconfigure stuff or ruin the existing setup and so on.</p>
<p><br /></p>
<p>And in case things break, in a cloud setup you want to <strong>be able to replicate the same cloud configuration again and recover the setup quickly</strong> without having to remember exactly what you did to configure the current setup and what exactly needs to be done.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_4c0dc67076b144bcb27bac901b2bc56c~mv2.png/v1/fit/w_1000,h_974,al_c,q_80/file.png"title="Cloud engineers use IaC for automation"alt="Cloud engineers use IaC for automation"></figure>
<p>And that&apos;s where infrastructure as code or in short &quot;IaC&quot; comes in. </p>
<p>So Cloud Engineers would <strong>automate a lot of their own tasks for infrastructure creation and maintenance</strong> using infrastructure as code. Because when you have really complex setups, after some point you can&apos;t possibly manually manage that anymore. So you will 100 percent need to have some automation.</p>
<p><br /></p>
<p><br /></p>
<h3>Differences and Overlaps between DevOps and Cloud Engineer </h3>
<p><br /></p>
<p><span style="color: #5eb2c2;"><strong>Differences</strong></span><strong> between DevOps and Cloud Engineer</strong></p>
<p>Now going back to the original comparison between DevOps Engineer and Cloud Engineer to summarize the differences.</p>
<p><br /></p>
<p>DevOps Engineers automate software release process to make it faster, while Cloud Engineers automate cloud infrastructure and management to make companies cloud infrastructure reliable, fast and secure easily recoverable and so on.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_03ac41ae8765476cab6fe0d7976a925e~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Two very different objectives"alt="Two very different objectives"></figure>
<p>So obviously <strong>two very different objectives</strong>.   But here is the overlap. ⬇️</p>
<p><br /></p>
<p><span style="color: #5eb2c2;"><strong>Overlaps</strong></span><strong> between Cloud and DevOps Engineer</strong></p>
<p>Part of software release is its deployment on servers, on infrastructure. So if companies deploying its applications to cloud, DevOps Engineers responsibility naturally becomes to make sure the cloud infrastructure is configured and managed properly to allow for fast deployment, for automated testing, validating whether deployment works with blue green or canary deployment strategies and so on.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_cb9db64a7a5c482ba8b1a10f00b6cf27~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Overlapping parts of DevOps and Cloud Engineering"alt="Overlapping parts of DevOps and Cloud Engineering"></figure>
<p>So <strong>DevOps Engineer&apos;s job would extend to managing the underlying infrastructure</strong>, monitoring that is working fine so the applications can be deployed and run successfully, making sure that it&apos;s secure, it&apos;s not running out of resources, that it&apos;s geographically distributed and so on If application is running in Kubernetes cluster managed by AWS, DevOps engineer would make sure the cluster is running fine, it&apos;s correctly configured with security in place and so on.</p>
<p><br /></p>
<p>And again DevOps is about automating things to be fast and efficient, so DevOps Engineers would also use infrastructures code tools to automate infrastructure management monitoring etc., but only the parts that directly affect the release process of the application.</p>
<p><br /></p>
<p>So as you see the cloud infrastructure management that directly affects how fast the application can be released, deployed, recovered and so on is also part of DevOps Engineers tasks. And that&apos;s where the main overlap happens. So from this perspective it seems like <strong>DevOps kind of includes some of the Cloud Engineers tasks</strong>.</p>
<p><br /></p>
<p>So companies usually just hire &quot;DevOps Cloud Engineer&quot;, who does everything. </p>
<p>But logically it&apos;s not possible for one role to do everything from release management, to infrastructure management, to backup and restore management, cost oversight and so on. </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_bb959606a66942b4b7bfdb70c3596d49~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="DevOps and Cloud Engineer working together"alt="DevOps and Cloud Engineer working together"></figure>
<p>So we have additional Cloud Engineer role, that is dedicated to cloud services and managing them and should actually be a help for DevOps Engineer to help each other in their own objectives.</p>
<p><br /></p>
<p><strong>Working together </strong></p>
<p>So the objective of Cloud Engineer, which is reliable secure infrastructure also affects the DevOps Engineer&apos;s objective of releasing applications fast, because they have to run on that infrastructure.</p>
<p><br /></p>
<p>Which means <strong>Cloud Engineer takes care of managing infrastructure</strong> and makes sure it runs reliably, so <strong>DevOps engineer can build automated processes on top of that</strong> to release the applications and run them on that reliable properly configured cloud infrastructure. And you can even use the controls that Cloud Engineer configured to monitor the application to do the automated validation, implement deployment strategies and so on. </p>
<figure><img src="https://media3.giphy.com/media/mIcH8OyRwpapbmYBgO/giphy.gif?cid=e2a3cbde5zr000kf07vkcnv247fsbvih25opx1782zeieyp1&ep=v1_gifs_search&rid=giphy.gif&ct=g"></figure>
<p><br /></p>
<p>So that&apos;s basically the comparison between the two. ✅  I hope I was able to give you some clarity around these two roles and was able to answer your questions around them.  </p>
<p><br /></p>
<p><br /></p>
<hr>
<p><br /></p>
<p><strong>Want to become a highly demanded DevOps Engineer? </strong></p>
<p>DevOps engineers are in high demand. If you want to become a highly paid DevOps engineer, be sure to check out our 6-month DevOps bootcamp, which is a <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">complete educational program</a></u><u>.</u> You will be able to work as a DevOps engineer from day 1 </p>
<p><br /></p>
<hr>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[What is SRE (Site Reliability Engineering)? SRE and Tasks of an SRE explained]]></title><description><![CDATA[What is SRE, how SRE emerged, SRE in practice using SLA and Error Budget, SRE Tasks and Responsibilities, SRE vs DevOps]]></description><link>https://www.techworld-with-nana.com/post/what-is-sre</link><guid isPermaLink="false">63e0b615276d2a6328e9a730</guid><category><![CDATA[DevOps Concepts]]></category><pubDate>Sun, 09 Apr 2023 13:29:02 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/117345_37de9c8dcdb940faa81dfa2cc23f038d~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_37de9c8dcdb940faa81dfa2cc23f038d~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png"title="Learn what SRE is and what are the tasks of an SRE Engineer"alt="Learn what SRE is and what are the tasks of an SRE Engineer"></figure>
<p><br /></p>
<p style="text-align: justify;">SRE is becoming a very popular term in DevOps and generally the software development world. Probably some of you have already heard about it, but are not sure what it is exactly.</p>
<p><br /></p>
<p style="text-align: justify;">So this article gives a <strong>detailed look</strong> at what <strong>SRE</strong> or <strong>S</strong>ite <strong>R</strong>eliability <strong>E</strong>ngineering really is with the goal of clarifying all questions and doubts around it </p>
<p><br /></p>
<p style="text-align: justify;"><em>This is the written version of my </em><u><a href="https://youtu.be/OnK4IKgLl24" target="_blank"><em>new youtube video</em></a></u> ✍️ </p>
<h2></h2>
<h2><strong>Table Of Contents </strong></h2>
<ul>
  <li><p style="text-align: justify;"><u><a href="#1hi25" rel="noopener noreferrer">Why was there a need for SRE?</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#52g6j" rel="noopener noreferrer">What is SRE? - Official Definition</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#aed59" rel="noopener noreferrer">What is system reliability and why it&apos;s important?</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#d8839" rel="noopener noreferrer">How to make systems reliable?</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#chopt" rel="noopener noreferrer">SRE in Practice: SLA &amp; Error Budget</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#3gdci" rel="noopener noreferrer">SRE Tasks and Responsibilities</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#6k6a2" rel="noopener noreferrer">Who is doing SRE? SRE Role</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="#5967k" rel="noopener noreferrer">SRE vs DevOps</a></u> </p></li>
</ul>
<p><br /></p>
<p style="text-align: justify;">First of all, I recommend that you read my recent DevOps article first, where I explain DevOps in detail. This will make it definitely easier to understand the topics in this article </p>
<p><br /></p>
<p><br /></p>
<h2><strong>How SRE emerged, and why was there even a need for SRE? </strong></h2>
<p style="text-align: justify;">In a <strong>traditional software development process</strong>, we have developers and operations as two separate teams. Each of them with its <strong>own goal</strong>:</p>
<ul>
  <li><p style="text-align: justify;"><strong>Developers</strong>: Want to push out application changes as fast as possible to the end users</p></li>
  <li><p style="text-align: justify;"><strong>Operations</strong>: Want to keep the application stable</p></li>
</ul>
<p style="text-align: justify;">So Operations are very careful about each and every change, and this causes a <strong>conflict of interest between these two roles</strong>, forcing them to work against each other instead of collaborate:</p>
<figure><img src="https://static.wixstatic.com/media/117345_bcd9b0598214436bb2e632c4298e13c0~mv2.jpg/v1/fit/w_880,h_583,al_c,q_80/file.png"title="Traditional Development vs Operations Roles in Conflict"alt="Traditional Development vs Operations Roles in Conflict"></figure>
<p><br /></p>
<p style="text-align: justify;">And DevOps was actually introduced to help fix exactly this issue. However, while DevOps made the release process faster, these <strong>releases were not as stable as ideally wished by DevOps principles</strong>. Plus, in the DevOps team, there was no dedicated role or person that actually focused full-time on keeping systems reliable.</p>
<p><br /></p>
<p style="text-align: justify;">And that&apos;s why the need for SRE and a Site Reliability Engineer as separate roles emerged. </p>
<p><br /></p>
<p style="text-align: justify;">So what is SRE?</p>
<p><br /></p>
<h2></h2>
<h2><strong>What is SRE? - Official Definition</strong></h2>
<p><br /></p>
<p style="text-align: justify;">SRE was conceptualized at Google by Ben Traynor, a software engineer, who was given the task of running a small team of other software engineers to do what used to be Operations work.</p>
<p><br /></p>
<p style="text-align: justify;">And according to his own definition:</p>
<p><br /></p>
<p style="text-align: justify;">At its core:</p>
<figure><img src="https://static.wixstatic.com/media/117345_d45d58ba2f6a48049e4236fce47ac553~mv2.jpg/v1/fit/w_880,h_423,al_c,q_80/file.png"title="What is SRE? SRE definition"alt="What is SRE? SRE definition"></figure>
<p><br /></p>
<p style="text-align: justify;">But this definition is, of course, too vague and high level to really understand how it&apos;s implemented in practice.  So, let&apos;s break it down and <strong>analyze each part of this definition step by step</strong>. </p>
<p><br /></p>
<h2></h2>
<h2><strong>What is system reliability, and why it&apos;s important?</strong> </h2>
<p><br /></p>
<p style="text-align: justify;">First of all, what is a system that we want to keep reliable? Or what does a system even mean in this definition?</p>
<p><br /></p>
<h3>What is a System?</h3>
<p style="text-align: justify;">The system is the servers, infrastructure, the platform. So the <strong>whole deployment environment</strong>, where the application runs.</p>
<p><br /></p>
<h3>What is Reliability?</h3>
<p style="text-align: justify;">Now what exactly is reliability, and why is it so important to keep our systems reliable? </p>
<p><br /></p>
<p style="text-align: justify;"><strong>Unreliable Services</strong> ⛔️
Imagine you work with emails daily, and your email provider is down once a week, or your online banking application is down and not accessed regularly. This would be an <em>unreliable </em>service.  You can&apos;t rely on that. It&apos;s available when you need it.</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Reliable Services</strong> ❇️
On the other hand, many popular services, like Gmail, Twitter, Youtube, etc, are rarely inaccessible.  So, these systems are pretty <em>reliable</em>.</p>
<p><br /></p>
<p style="text-align: justify;">But the thing is, users usually do not notice the reliability of the system.  It only becomes visible when something goes wrong, and the services are down. Do you remember the recent outage of Facebook, Instagram, and other related services that made huge news?</p>
<figure><img src="https://static.wixstatic.com/media/117345_a61e030b8b3b4d69913b6a5ad5468818~mv2.jpg/v1/fit/w_880,h_564,al_c,q_80/file.png"title="What is Reliability?"alt="What is Reliablity?"></figure>
<p><br /></p>
<p style="text-align: justify;">What about AWS server outages that also affected other applications that were hosted on AWS?</p>
<p><br /></p>
<p style="text-align: justify;">Of course, everybody noticed and knew about it when it happened. So <strong>the more popular and bigger the product or service and the more used, the more impact it will have</strong>  if the service has an outage, which means their team should worry about its reliability.</p>
<p><br /></p>
<h3>Why reliability is important?</h3>
<p style="text-align: justify;">What are the effects or impacts of outages or system unreliability? For most of the services, this is a lot of <strong>unhappy customers and lots of lost revenue:</strong></p>
<figure><img src="https://static.wixstatic.com/media/117345_9aa2cb93aeb1456a85d3f9ed1da5560f~mv2.jpg/v1/fit/w_880,h_384,al_c,q_80/file.png"title="The impacts of unreliable systems"alt="The impacts of unreliable systems"></figure>
<p><br /></p>
<p style="text-align: justify;">Like, imagine an online shop is down on a holiday or an online bank is not working because of traffic overload. This means lots of lost business because people cannot order anything from that shop.</p>
<p><br /></p>
<h2></h2>
<h2><strong>How to make systems reliable?</strong></h2>
<p><br /></p>
<p style="text-align: justify;">Okay, so we understood that systems need to be reliable, but how do we make a system reliable or ask differently:
What makes a system unreliable, and what affects its reliability? </p>
<p><br /></p>
<p style="text-align: justify;">The main cause of the system becoming unreliable is when you make <strong>changes to your system</strong> ⚡️:</p>
<p><br /></p>
<p style="text-align: justify;">Like change something:
⚡️ in the infrastructure
⚡️ the platform where the application is running
⚡️ the application itself and its services
⚡️ and so on</p>
<p><br /></p>
<p style="text-align: justify;">These changes may cause disruption and break something in the whole setup.</p>
<p><br /></p>
<h3>Bad Solution </h3>
<p style="text-align: justify;">As a solution, we can say no changes are allowed or <strong>limit the number of changes</strong> ‍♂️ to keep systems reliable, but that really limits the business. We want to make changes and improvements to our application to make it better and increase its business value and stay competitive etc. </p>
<p><br /></p>
<p style="text-align: justify;">Because if our competitor is bringing out new features, we need to keep up, and that&apos;s the main focus of software developers, to make those changes and improvements.</p>
<p><br /></p>
<p style="text-align: justify;">But on the other hand, if the application is not accessible, that&apos;s also bad for business because you may have awesome features, but nobody can use them. And it&apos;s the operation&apos;s job to take care of that and make sure the application is accessible.</p>
<p><br /></p>
<p style="text-align: justify;">This means developers want to release fast, and operations want to keep stability. So traditionally, Devs would make a change, and Ops would analyze with hundreds of checklists and mechanisms to make sure the change would not affect the system:</p>
<figure><img src="https://static.wixstatic.com/media/117345_7f935d81b0f04a6f881513c10ce7b0bd~mv2.webp/v1/fit/w_880,h_430,al_c,q_80/file.png"title="Traditional way to ensure reliable systems"alt="Traditional way to ensure reliable systems"></figure>
<p><br /></p>
<p style="text-align: justify;">This whole analysis and evaluation <strong>slow down the release process</strong>, and that&apos;s been the major challenge of the traditional way of software development. And that&apos;s exactly <strong>what DevOps and SRE try to solve</strong>. </p>
<p><br /></p>
<h3>So what&apos;s the specific solution of SRE here? </h3>
<p style="text-align: justify;">Well, <strong>SRE tries to automate the process of analyzing and evaluating the effects the change will have on our </strong>system&apos;s<strong> reliability</strong>. Automation means no checklists or discussions of the operations team, whether to release the change or not or what threats and risks are involved:</p>
<figure><img src="https://static.wixstatic.com/media/117345_79130696063a427795596cf441370c8d~mv2.jpg/v1/fit/w_880,h_467,al_c,q_80/file.png"title="SRE automates the process of analyzing and evaluating the effects the change will have on our system's reliability"alt="SRE automates the process of analyzing and evaluating the effects the change will have on our system's reliability"></figure>
<p style="text-align: justify;">Instead, the evaluation is based on <strong>automated processes</strong>, and this makes <strong>releasing changes fast and safe at the same time</strong>. </p>
<p><br /></p>
<h2></h2>
<h2><strong>SRE in Practice: SLA &amp; Error Budget</strong></h2>
<p><br /></p>
<p style="text-align: justify;">Now how is that automated evaluation done? </p>
<p><br /></p>
<p style="text-align: justify;">The way it works is using what&apos;s called <strong>SLAs</strong>. So what is an SLA? SLA is basically <strong>how reliable a system is going to be to its end users.</strong> So how often it&apos;s going to be up, and how often it&apos;s going to be down? And it&apos;s expressed in percentage.
A service that works all the time, is never down and has a hundred percent SLA. </p>
<p><br /></p>
<h3>No need for 100% Reliability</h3>
<p style="text-align: justify;">Now you may be thinking: <em>&quot;Of course any service should be 100 reliable right isn&apos;t that a natural goal?&quot;</em> 
Well, not really. First of all, it&apos;s very hard to achieve 100% reliability, and there are very few services in the world that actually need a 100% SLA.</p>
<figure><img src="https://static.wixstatic.com/media/117345_e03bb57e47a64a218d92cc6cf4071c8c~mv2.jpg/v1/fit/w_880,h_571,al_c,q_80/file.png"title="100% SLA is difficult to achieve and not necessary"alt="100% SLA is difficult to achieve and not necessary"></figure>
<p><br /></p>
<p style="text-align: justify;">So, for example, if your internet provider or the customer&apos;s device itself is not 100% reliable, which is the case with most laptops, mobile phones, and so on, then your service does not need to be either. It <strong>can be available maximum at the same rate as the underlying network or device</strong>. </p>
<p><br /></p>
<p style="text-align: justify;">And in those cases, a reliability of three nines or four or five nines may be enough so that users don&apos;t even notice that there is an issue. </p>
<figure><img src="https://static.wixstatic.com/media/117345_dea022213528482581481d740c16b24a~mv2.jpg/v1/fit/w_880,h_540,al_c,q_80/file.png"title="SLAs are defined by a number of nines"alt="SLAs are defined by a number of nines"></figure>
<p><br /></p>
<p><br /></p>
<h3>Examples of SLA</h3>
<p style="text-align: justify;">For example, you can define a service level agreement about the <strong>accessibility of your application</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_9c9539479f844bfba078a13f215f7ce3~mv2.jpg/v1/fit/w_880,h_472,al_c,q_80/file.png"title="Examples of SLAs"alt="Examples of SLAs"></figure>
<p><br /></p>
<p style="text-align: justify;"><em>Source: </em><u><a href="https://en.wikipedia.org/wiki/High_availability" target="_blank"><em>https://en.wikipedia.org/wiki/High_availability</em></a></u></p>
<p><br /></p>
<p style="text-align: justify;">So, for example, a 99 SLA for application accessibility would mean that the system can be down a maximum of <em>3.65 days</em> in a year. An SLA with 5 nines or 99.999% allows an application to be an unaccessible maximum of <em>5 minutes</em> a year, so the rest of the time, it should work.</p>
<p><br /></p>
<p style="text-align: justify;">You can actually define multiple such agreements or SLAs, not just the accessibility or availability of the system.</p>
<p><br /></p>
<p style="text-align: justify;">Other SLA examples:</p>
<ul>
  <li><p style="text-align: justify;"><strong>application response time</strong></p></li>
  <li><p style="text-align: justify;"><strong>error rate</strong></p></li>
</ul>
<p style="text-align: justify;">For example, if you have an application that serves a million requests a week with 99% SLA, you define that 990 000 of those requests will be successful.</p>
<p><br /></p>
<h3>Who defines these SLAs? ‍♀️</h3>
<p style="text-align: justify;">Okay, now you may be wondering who defines these SLAs. So basically, who decides how many requests must be successful out of these million requests or how much downtime is allowed for the application? Who makes this kind of decision?</p>
<p><br /></p>
<p style="text-align: justify;">As this decision affects the end users and their user experience, naturally, business people are also involved in this process. So <strong>business people, together with the engineers</strong> like SRE and DevOps Engineers, decide together what service level agreements they want to define for their application:</p>
<figure><img src="https://static.wixstatic.com/media/117345_0865aaf33e004ecf9789d2dc4da576bd~mv2.webp/v1/fit/w_880,h_824,al_c,q_80/file.png"title="SLAs are defined together"alt="SLAs are defined together"></figure>
<p style="text-align: justify;">
Based on the industry benchmarks, competition, user feedback, and so on, business people will define the desired SLAs on a <strong>higher level</strong>. The engineers will then define them on a <strong>technical level and also make sure to integrate them into their DevOps and SRE processes</strong>.</p>
<p><br /></p>
<h3>Error Budget</h3>
<p style="text-align: justify;">As I mentioned, SLA for availability defines how long the service should be available or how much downtime is allowed for that service. That <strong>allowed downtime is also what&apos;s called an &quot;error budget&quot;</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_4ed36b2add574b1e96a2149f71759b6f~mv2.webp/v1/fit/w_880,h_294,al_c,q_80/file.png"title="Error budget is the allowed downtime of a service"alt="Error budget is the allowed downtime of a service"></figure>
<p><br /></p>
<p style="text-align: justify;">In SRE, a team can &quot;spend&quot; that error budget on making unreliable changes. So basically, that error budget says that we&apos;re allowed to have that much downtime in our system without losing business, making customers unhappy, etc.</p>
<p><br /></p>
<h3>Way to regulate the release speed ⚖️</h3>
<p style="text-align: justify;">So <strong>SLA is like a barometer</strong>; you can <strong>turn it up or down based on how reliable your system needs to be</strong>. And, of course, the closer to 100, the more effort you need to put in to guarantee the reliability of your systems.</p>
<p><br /></p>
<p style="text-align: justify;">Now once the SLA is defined, the <strong>system performance can be measured against this number</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">⛔️ If <strong>systems are more unreliable than the SLA allows</strong>: Then more resources from the SRE team will be put to make the systems reliable. Again because we have exceeded that allowed amount of downtime. And until the system is recovered to be within the defined SLA, fewer changes will be allowed:</p>
<figure><img src="https://static.wixstatic.com/media/117345_056d88d863924ec999cc16322be42db7~mv2.webp/v1/fit/w_880,h_354,al_c,q_80/file.png"title="When SLA not met, means more resources focus on systems reliability"alt="When SLA not met, means more resources focus on systems reliabilitySLA not met, means more resources focus on systems reliability"></figure>
<p><br /></p>
<p style="text-align: justify;">✅ On the other hand, <strong>if the system is performing well beyond the defined SLA</strong>: Developers in the SRE team can release more changes.</p>
<p><br /></p>
<p style="text-align: justify;">So it&apos;s a simple way to <strong>regulate the release speed</strong> of developers. ⚖️ If we turn up the SLA, releases will slow down and vice versa:</p>
<figure><img src="https://static.wixstatic.com/media/117345_68a9b9e77c1f437cb17e32e11755c4e0~mv2.webp/v1/fit/w_880,h_329,al_c,q_80/file.png"title="SLA regulates the speed of software release"alt="SLA regulates the speed of software release"></figure>
<h2></h2>
<h2><strong>SRE Tasks and Responsibilities ‍</strong></h2>
<h3></h3>
<h3>1) Automation - Create automated processes for operational aspects </h3>
<p style="text-align: justify;">The SRE or the Site Reliability Engineer is the one who creates automated processes to calculate and evaluate whether the service is within the SLA or not.</p>
<p><br /></p>
<p style="text-align: justify;">So now the policy for launching is not the endless checklist that operations use to decide whether to launch or not; instead, an SRE helped design processes that can <strong>automatically evaluate an SLA</strong>. ✅</p>
<p><br /></p>
<h3>2) Configure Monitoring and Logging (Observability for System Performance) </h3>
<p style="text-align: justify;">Now, of course, to <strong>measure the performance of our systems</strong> and whether services are within the SLA, we need proper monitoring of our systems.</p>
<p><br /></p>
<p style="text-align: justify;">So another big part of SRE tasks and responsibilities is to <strong>configure proper monitoring and logging of the systems to get visibility</strong> of what&apos;s going on inside.</p>
<p><br /></p>
<h3>3) Configure Monitoring and Logging (Observability for Detecting Issues) </h3>
<p style="text-align: justify;">Now we said that for most applications, SLA is not 100%, which means we accept that it won&apos;t work 100% of the time. So at some point, we will have an outage </p>
<p><br /></p>
<p style="text-align: justify;">Now the question is, what do we do when an outage happens? Or how do we prepare for it? And that&apos;s where another big part of SRE tasks and responsibilities comes in.</p>
<p><br /></p>
<p style="text-align: justify;">The first one is <strong>monitoring and alerting</strong>, which I already mentioned. So, in addition to giving you visibility to measure your system&apos;s performance, but more importantly, it helps you <strong>detect any indications for issues before they happen or very early when they happen</strong> and then alert the teams about it:</p>
<figure><img src="https://static.wixstatic.com/media/117345_7ffbe625a0d149a79e54593dda6dd77a~mv2.jpg/v1/fit/w_880,h_495,al_c,q_80/file.png"title="Configure Monitoring and Logging"alt="Configure Monitoring and Logging"></figure>
<h3></h3>
<h3>4) Develop custom services to achieve this ‍</h3>
<p style="text-align: justify;">Now another important part of this whole configuration is that when the issue is alerted. Ideally, the right person in the team gets the message; the <strong>alert message should contain all the needed information</strong> to identify and fix the issue fast.</p>
<p><br /></p>
<p style="text-align: justify;">Instead of:
❌ &quot;something is wrong in the cluster&quot;
a more detailed message like:
✅ &quot;service a in cluster b is throwing 500 error&quot;</p>
<p><br /></p>
<p style="text-align: justify;">So now you know exactly:
 which service is having a problem
 in which cluster and
 what is that problem exactly is</p>
<p><br /></p>
<p style="text-align: justify;">So more detailed the alert message, the better!</p>
<p style="text-align: justify;">In many cases, SREs will <strong>develop their own custom services to achieve this proper monitoring alerting and logging configuration for their systems</strong>.</p>
<p><br /></p>
<h3>5) Do On-Call Support ☎️</h3>
<p style="text-align: justify;">Another thing that SREs do is <strong>on-call support</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">Basically, when things go wrong and users need real-time support, somebody is responsible for doing that, and that is the on-call support team. And putting SREs on this support team has <strong>several benefits</strong>:</p>
<ul>
  <li><p style="text-align: justify;">It helps them really see and understand what issues to expect</p></li>
  <li><p style="text-align: justify;">How does the support deal with the issues?</p></li>
  <li><p style="text-align: justify;">And what improvements can be made to make the support process more efficient?</p></li>
</ul>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_62ef2b0743b94e7dbbe28b9b5b510967~mv2.jpg/v1/fit/w_880,h_424,al_c,q_80/file.png"title="One of the tasks of an SRE is on-call support"alt="One of the tasks of an SRE is on-call support"></figure>
<p><br /></p>
<p style="text-align: justify;">Such as:</p>
<ul>
  <li><p style="text-align: justify;">do alert messages and logs have enough information to quickly identify the issue and the cause?</p></li>
  <li><p style="text-align: justify;">Were issues identified too late?</p></li>
  <li><p style="text-align: justify;">etc</p></li>
</ul>
<p><br /></p>
<p style="text-align: justify;">So overall, the <strong>main goal of SRE</strong> is to make sure <strong>the scope of</strong> the <strong>outage is small</strong> when it happens, which means</p>
<ol>
  <li><p style="text-align: justify;"> the outage doesn&apos;t last long and is fixed very quickly</p></li>
  <li><p style="text-align: justify;"> and fewer people and few services are affected by that outage</p></li>
</ol>
<h3></h3>
<h3>6) Post-Incident Reviews </h3>
<p style="text-align: justify;">Now fixing an issue or an outage is not the end of the SRE team&apos;s work. We want to use that outage as a <strong>chance for lessons learned</strong> and, of course, avoid this happening in the future.</p>
<p><br /></p>
<p style="text-align: justify;">So a principle of SRE is to do what&apos;s called <strong>Post Mortem</strong>, which is Latin for &quot;after death.&quot; So in SRE terms, &quot;after issue&quot; or &quot;after outage analysis.&quot;</p>
<p><br /></p>
<p style="text-align: justify;">This includes a <strong>thorough analysis</strong>, meaning taking time to really go deeper and understand the issues:</p>
<figure><img src="https://static.wixstatic.com/media/117345_577cc4571cc34b2c88c945a8ee7e32d0~mv2.jpg/v1/fit/w_880,h_492,al_c,q_80/file.png"title="A thorough analysis after incident happened"alt="A thorough analysis after incident happened"></figure>
<p><br /></p>
<p style="text-align: justify;">But of course, during this analysis, it&apos;s super important to <strong>stay blameless</strong>, which is one of the major points of this post-mortem analysis, in order to encourage people to admit and learn from their and other people&apos;s mistakes ✅</p>
<p><br /></p>
<p style="text-align: justify;">And finally, it&apos;s important to <strong>document everything</strong> for future reference!</p>
<p><br /></p>
<h2></h2>
<h2><strong>Who is doing SRE? SRE Role </strong></h2>
<p><br /></p>
<p style="text-align: justify;">Now you may be thinking:
<em>&quot;How much more should software developers learn? They already have to know all these software development technologies</em>; now<em> they also have to take over the operations tasks and learn all these operations tools?&quot;</em> </p>
<p><br /></p>
<h3>SRE as its own Role</h3>
<p style="text-align: justify;">That&apos;s why we have SRE as its own role. So a <strong>dedicated person whose full-time responsibility is to work on keeping systems reliable:</strong></p>
<figure><img src="https://static.wixstatic.com/media/117345_1a277961ee5f40878e596cc947e2bef3~mv2.jpg/v1/fit/w_880,h_405,al_c,q_80/file.png"title="Who is doing SRE? SRE Role"alt="Who is doing SRE? SRE Role"></figure>
<p><br /></p>
<p style="text-align: justify;">So in many projects, along with developers, you have SRE teams, which are the new Operations team. Basically, a team that does the operations, where both teams work for the same goal of keeping the systems within the defined SLAs:</p>
<figure><img src="https://static.wixstatic.com/media/117345_d923588e80094f1ab2987a0f9cab3693~mv2.jpg/v1/fit/w_880,h_344,al_c,q_80/file.png"title="Developers and SRE team working for the same goal"alt="Developers and SRE team working for the same goal"></figure>
<p style="text-align: justify;">So the SRE team maintains and takes care of the automated delivery operations and all sorts of automation that will help developers release their changes safely and fast. </p>
<p><br /></p>
<h3>Software Developers as SREs</h3>
<p style="text-align: justify;">However, it&apos;s also common to have <strong>1 team of SREs and Software Developers</strong>, where SREs also do the software development job. And this means that Site Reliability Engineers <strong>must know software development</strong> as well, unlike DevOps engineers.</p>
<h2></h2>
<h2><strong>SRE vs DevOps</strong></h2>
<p style="text-align: justify;">Finally, one of the majorly discussed questions in this area is: <strong>What is the difference between SRE and DevOps </strong>engineering<strong> or generally between these two concepts?</strong></p>
<p><br /></p>
<p style="text-align: justify;">If you have already watched my <u><a href="https://youtu.be/0yWAtQ6wYNM" target="_blank">&quot;What is DevOps&quot; video</a></u>, you know that there are two definitions of DevOps:</p>
<ul>
  <li><p style="text-align: justify;">the original definition, which is <strong>more </strong>high-level and broader and doesn&apos;t specify how exactly DevOps should be implemented</p></li>
  <li><p style="text-align: justify;">and a <strong>more practical one</strong>, which evolved over time with its own DevOps engineer role.</p></li>
</ul>
<p style="text-align: justify;">So when we compare DevOps with SRE, it&apos;s important to know <strong>which definition of DevOps we&apos;re using for this comparison</strong>.</p>
<p><br /></p>
<p style="text-align: justify;"><em><strong>1. First broader definition of DevOps vs. SRE</strong></em>
DevOps is a more high-level concept that defines <strong>what needs to be done</strong> to achieve the automated, streamlined release process. At the same time, SRE is more specific about <strong>how to exactly implement this process</strong> and how to implement DevOps principles.</p>
<p><br /></p>
<p style="text-align: justify;">So many people would say that <strong>SRE is a specific implementation of the DevOps concepts</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_d8d15c9bee974c73950a118a8d2fb6ac~mv2.jpg/v1/fit/w_880,h_352,al_c,q_80/file.png"title="SRE as a specific implementation of DevOps concept"alt="SRE as a specific implementation of DevOps concept"></figure>
<p><br /></p>
<p style="text-align: justify;"><em><strong>2. Practical DevOps vs. SRE</strong></em>
But as we saw, DevOps itself also became more practical with its own role and specific technologies and ways to implement it. So what&apos;s the comparison here? </p>
<p style="text-align: justify;">
Well, in many companies, this practical DevOps implementation became <strong>more focused</strong>. It concentrated<strong> on the speed of delivery</strong> for the application changes, and of course, even though it&apos;s part of the DevOps principles to not only release fast but release quality code, many DevOps teams in practice again seemed to optimize more for the speed than reliability.</p>
<p><br /></p>
<p style="text-align: justify;">So as a great <strong>complementary part of DevOps, SRE emerged with the same principles and goals in mind</strong>, which is to release quality code fast, but as the name suggests, <strong>more focused on reliability and keeping systems stable</strong> while allowing for fast changes:</p>
<figure><img src="https://static.wixstatic.com/media/117345_e057fa4cb540454eb60af2cc0b0e2b9f~mv2.jpg/v1/fit/w_880,h_373,al_c,q_80/file.png"title="SRE vs DevOps Role"alt="SRE vs DevOps Role"></figure>
<p><br /></p>
<p style="text-align: justify;">So SRE is its own role with its own set of tools for making systems reliable. So these two were kind of parallel developments and are now often seen as <strong>two sides of the same coin</strong>, and it&apos;s not uncommon for teams to have both a DevOps engineer and SRE helping implement the DevOps principles.</p>
<p><br /></p>
<p style="text-align: justify;">Now I hope you learned a lot from this article and that I was able to answer all of your questions about SRE. </p>
<p><br /></p>
<hr>
<p style="text-align: justify;"><strong>Like, share and follow me</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[What is DevOps? REALLY understand it]]></title><description><![CDATA[Find out what is DevOps, what challenges DevOps tries to solve in the software lifecycle and how it compares to SRE]]></description><link>https://www.techworld-with-nana.com/post/what-is-devops</link><guid isPermaLink="false">63e12b4365142a9d2a89a977</guid><category><![CDATA[DevOps Concepts]]></category><pubDate>Sat, 08 Apr 2023 14:22:04 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/117345_a937e6fc0e8744a89760c6486d308b47~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_a937e6fc0e8744a89760c6486d308b47~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png"alt="Understanding DevOps"></figure>
<p><br /></p>
<p style="text-align: justify;">A <strong>detailed look</strong> at what DevOps really is with the goal of clarifying all questions and doubts around it  ✅</p>
<p><br /></p>
<p style="text-align: justify;"><em>This is the written version of </em><u><a href="https://youtu.be/0yWAtQ6wYNM" target="_blank"><em>my youtube video</em></a></u> ✍️ </p>
<p><br /></p>
<p style="text-align: justify;">DevOps has been gaining a lot of popularity and is taking over the traditional way of software development.</p>
<figure><img src="https://static.wixstatic.com/media/117345_daed79a6994d41508ca89771538dbfbc~mv2.jpg/v1/fit/w_880,h_478,al_c,q_80/file.png"title="Global Market for DevOps"alt="Global Market for DevOps"></figure>
<h2></h2>
<h2><strong>Difficulty to define DevOps</strong></h2>
<p style="text-align: justify;">Many companies are adopting DevOps, however, the &quot;DevOps&quot; term itself is so broad. It includes so many things that it became difficult to define it exactly and clearly set the boundaries of DevOps compared to other IT fields. So this post tries to answer the question of &quot;what DevOps is&quot; in detail.</p>
<p><br /></p>
<p style="text-align: justify;">The <strong>simplest definition</strong> is that <u><em>&quot;DevOps is an intersection of Development and Operations.&quot;</em></u></p>
<p><br /></p>
<p style="text-align: justify;">But where do the boundaries of DevOps start and end? Which part of development is not DevOps? Or what part of operations is not DevOps? And why was there even a need for something between development and operations? </p>
<p><br /></p>
<p style="text-align: justify;">Development and Operations are <strong>two main components in the whole application release process</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_38ad15b147ed4e98888a5dede59bd4a1~mv2.jpg/v1/fit/w_880,h_558,al_c,q_80/file.png"title="Development and Operations are 2 parts of the Software Development Lifecycle"alt="Development and Operations are 2 parts of the Software Development Lifecycle"></figure>
<p style="text-align: justify;">
So let&apos;s look in detail at this release process starting from the very beginning!</p>
<p><br /></p>
<h2><strong>Application Release Process</strong></h2>
<p style="text-align: justify;">Whenever we&apos;re developing an application, we always have the <strong>same process of delivering that application to the end users</strong>. So this is the main goal, no matter if you use waterfall or agile or whatever approach. At its core: 1) you create an application, 2) and you want to deliver it to your end users so that they can use it. ‍</p>
<p><br /></p>
<p style="text-align: justify;">So let&apos;s say you have a great idea about a cool application. You define its functionality or, in other words, what features it will have:</p>
<ol>
  <li><p style="text-align: justify;">you <strong>code</strong> it</p></li>
  <li><p style="text-align: justify;">you <strong>test</strong> it</p></li>
  <li><p style="text-align: justify;">and now that you have a tested application, you want to actually <strong>deploy</strong> it on a public server and let users access it</p></li>
</ol>
<p style="text-align: justify;">For that, you <strong>build and package your application</strong> in some kind of executable form so that it can run. You configure the public server with all the needed stuff, like installing any tools the application needs and deploying your application there, you configure firewall rules to allow access to the application on the server, and you have launched, and users can start using it! </p>
<p><br /></p>
<p style="text-align: justify;">So that&apos;s the <strong>simplified basis of any application release</strong>, but that&apos;s not the end of the journey. While in use, you, of course, have to check in on your application:</p>
<ul>
  <li><p style="text-align: justify;">Is everything running fine?</p></li>
  <li><p style="text-align: justify;">Are users experiencing any issues?</p></li>
  <li><p style="text-align: justify;">Maybe there are bugs in the application that you didn&apos;t catch when testing</p></li>
  <li><p style="text-align: justify;">Can the application handle high user loads?</p></li>
  <li><p style="text-align: justify;">etc</p></li>
</ul>
<figure><img src="https://static.wixstatic.com/media/117345_08ca79141800452a99b4dc9fd59b249c~mv2.jpg/v1/fit/w_880,h_178,al_c,q_80/file.png"title="Example Application Release Process"alt="Example Application Release Process"></figure>
<p><br /></p>
<p style="text-align: justify;">So after launching it, you have to actually make sure that your application is accessible and usable by end users, and if there are any issues for users, of course, you should fix them.</p>
<p><br /></p>
<h3>Process continues..</h3>
<p style="text-align: justify;">Now that was the <strong>initial launch</strong> of your application, but the application development is not done yet. If you see users like your application, you would want to make it even cooler, add new features, maybe optimize the performance by getting better servers or making your application faster, and so on. So you still have a lot of things to do. Every time you improve your application, either the code itself or the server configuration, you want to make this improvement accessible to the end users immediately.</p>
<p><br /></p>
<p style="text-align: justify;">So after the initial launch, you do multiple updates to your application, and to keep track of these updates, you version those changes.</p>
<p><br /></p>
<p style="text-align: justify;">And <strong>you do that over and over again</strong>:</p>
<ol>
  <li><p style="text-align: justify;">you have an idea of improvement</p></li>
  <li><p style="text-align: justify;">you implement it in the code</p></li>
  <li><p style="text-align: justify;">you test it</p></li>
  <li><p style="text-align: justify;">build and package it</p></li>
  <li><p style="text-align: justify;">you deploy it</p></li>
  <li><p style="text-align: justify;">and once released, you observe it in the production to see whether there are any new improvement possibilities or any issues that need to be fixed right away</p></li>
</ol>
<p style="text-align: justify;">So this gives you a process of <strong>continuous delivery of changes</strong> and an endless cycle of improvements to your application.</p>
<figure><img src="https://static.wixstatic.com/media/117345_ebc4e5bfc8c84a63829eedfdbba4f3d2~mv2.jpg/v1/fit/w_880,h_450,al_c,q_80/file.png"title="The idea or the goal of DevOps"alt="The idea or the goal of DevOps"></figure>
<p><br /></p>
<p style="text-align: justify;">So with DevOps, improvements get created and delivered to users fast, but also those improvements are of high quality and well tested. And that is a <strong>big challenge: quickly delivering high-quality code</strong>. </p>
<p><br /></p>
<h2><strong>Challenges DevOps tries to solve</strong></h2>
<p style="text-align: justify;">Now let&apos;s see what are exactly the <strong>challenges that teams may face during this process and which DevOps tries to solve</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">Because during this whole release process, we have roadblocks and frictions:</p>
<figure><img src="https://static.wixstatic.com/media/117345_c08e2623023849889070e07d2a1a0180~mv2.jpg/v1/fit/w_880,h_460,al_c,q_80/file.png"title="Roadblocks and frictions that slow down the release process"alt="Roadblocks and frictions that slow down the release process"></figure>
<p><br /></p>
<p style="text-align: justify;">Now, what are the frictions and roadblocks in the release process?</p>
<p><br /></p>
<h3>1) Miscommunication and Lack of Collaboration ⛔️</h3>
<p style="text-align: justify;">The first and most important challenge is <strong>miscommunication and lack of collaboration between developers and operations</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">So releasing the application has two main parts:</p>
<ol>
  <li><p style="text-align: justify;">you code the application</p></li>
  <li><p style="text-align: justify;">you deploy and run the application</p></li>
</ol>
<p style="text-align: justify;">Developers are responsible for coding. Operations are responsible for running the application.</p>
<p style="text-align: justify;">And between these two, there might be a gap between: &quot;I wrote an application, but I can&apos;t run it&quot; or &quot;I&apos;m running the application, but i don&apos;t know how it works&quot; ‍♂️:</p>
<figure><img src="https://static.wixstatic.com/media/117345_49f1704f8f844564989d78f5ca9ad172~mv2.jpg/v1/fit/w_880,h_393,al_c,q_80/file.png"title="Lack of Collaboration"alt="Lack of Collaboration"></figure>
<p style="text-align: justify;">So developers would code without considering where or how the code will be deployed, while operations would try to deploy without really understanding what and why they are deploying or how the application even works. And this would result in miscommunications between these two.</p>
<p><br /></p>
<p style="text-align: justify;">For example:
Developers finish coding, but the deployment guide for the operations team is not good enough or well-documented enough, so the operations team struggles to deploy it, so the release takes longer.</p>
<p><br /></p>
<p style="text-align: justify;">This kind of miscommunication could cause <strong>stretching the release periods for days and weeks</strong> and, in complex, badly maintained projects, maybe even months.</p>
<p><br /></p>
<p style="text-align: justify;">So between the developer is done with the feature and the operation starts deploying it, there is <strong>no clearly defined automated process of handover</strong>. It&apos;s based on a complex bureaucratic process of what checklists  need to be completed and what needs to be documented and who needs to manually approve what for the release, and so on. So no streamlines or automated processes here.</p>
<p><br /></p>
<h3>2) Conflict of Interest ⛔️</h3>
<p style="text-align: justify;">Apart from miscommunications between development and operations, in a traditional setup, where one team is only responsible for the development and another team is only for operations, these two have seemingly <strong>different incentives</strong> that make it hard for them to work together.</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Developers want to push out new features fast</strong>, while <strong>operations want to make sure those changes don&apos;t break anything</strong> because operations are incentivized to maintain stability in production. Their main focus is to make sure the application is available, doesn&apos;t crash, doesn&apos;t show 500 errors to the users, and so on.</p>
<p><br /></p>
<p style="text-align: justify;">This means that <strong>operations need to resist the speed of release</strong> and check all the aspects of a new release to make sure it&apos;s 100% safe, which again slows down the process, especially considering that operations don&apos;t really understand the code or the application. So it&apos;s even more effort for them to evaluate this new release.</p>
<p><br /></p>
<p style="text-align: justify;">So even though the main <strong>common goal</strong> of everyone in a company should be to deliver high-quality applications to the end users fast, in practice, the <strong>more immediate goals</strong> are for each role to do its job. And developer&apos;s job is to quickly create new features and push them out; the operations job is to maintain the system stability and resist new changes being pushed out:</p>
<figure><img src="https://static.wixstatic.com/media/117345_1c2ff7f5f82540e1a9b3296acb5ed5d3~mv2.jpg/v1/fit/w_880,h_432,al_c,q_80/file.png"title="Conflict of Interest between Development and Operations"alt="Conflict of Interest between Development and Operations"></figure>
<p><br /></p>
<p style="text-align: justify;">This gives us a <strong>conflict of interest</strong>, and this kind of setup naturally makes it difficult for those two to collaborate. ‍♀️</p>
<p><br /></p>
<h3>3) Security ⛔️</h3>
<p style="text-align: justify;">Another showstopper when releasing a feature is Security. Just like the operations team carefully evaluates changes to make sure they won&apos;t affect system stability, the security team will <strong>evaluate any changes to make sure they don&apos;t affect systems security</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_4f56b90481224737a95d781e32cae61d~mv2.jpg/v1/fit/w_880,h_381,al_c,q_80/file.png"title="Manual security checks slow down the release"alt="Manual security checks slow down the release"></figure>
<p><br /></p>
<p style="text-align: justify;">And in a traditional setup, this is the same <strong>manual bureaucratic process as operations</strong>, which takes days or weeks and slows down the release process.</p>
<p><br /></p>
<p style="text-align: justify;">And as I mentioned, DevOps is about removing any roadblocks that slow down the process, so it includes this one as well.</p>
<p><br /></p>
<p style="text-align: justify;">However, even though this is part of the DevOps solution, there was a separate term created for that called &quot;DevSecOps&quot; in order to highlight and just remind the teams of the <strong>importance of security</strong> because it somehow got left out.</p>
<p><br /></p>
<p style="text-align: justify;">I actually have a separate dedicated video on DevSecOps, which you can also check out if you&apos;re interested: <u><a href="https://youtu.be/nrhxNNH5lt0" target="_blank">DevSecOps explained</a></u></p>
<p><br /></p>
<h3>4) Application Testing ⛔️</h3>
<p style="text-align: justify;">Now adding to the list of show stoppers is application testing. In many projects, there are separate teams or roles for testers, who test the application changes on different levels:</p>
<ul>
  <li><p style="text-align: justify;">like testing just the feature</p></li>
  <li><p style="text-align: justify;">testing the whole application,</p></li>
  <li><p style="text-align: justify;">testing on multiple environments etc.</p></li>
</ul>
<p style="text-align: justify;">And <strong>often, these tests are done manually</strong> when teams cannot totally rely only on their automated tests, and only after manual testing is done can the change be released:</p>
<figure><img src="https://static.wixstatic.com/media/117345_1029341e60144c4d8d0fc9cd48df9bbd~mv2.jpg/v1/fit/w_880,h_342,al_c,q_80/file.png"title="Extensive manual testing slows down the process as well"alt="Extensive manual testing slows down the process as well"></figure>
<p><br /></p>
<p style="text-align: justify;">Even though this may not be done by a development or operations role but rather a separate tester role, this is an important part of the release process and may also slow it down considerably!</p>
<p><br /></p>
<h3>5) Manual Work ⛔️</h3>
<p style="text-align: justify;">As I mentioned, <strong>many of the tasks</strong> during the release process, like testing, security checks, deployment etc, <strong>used to be done manually</strong>. ‍♂️</p>
<p><br /></p>
<p style="text-align: justify;">For example, operations would do most of the operations tasks manually, either by directly executing commands on the servers to install tools, configure stuff, do patches, or have scripts or small programs they execute. But in both cases, this is manual work:</p>
<figure><img src="https://static.wixstatic.com/media/117345_113ab9a188a343739fa2a8b7f23c61d3~mv2.webp/v1/fit/w_880,h_446,al_c,q_80/file.png"title="Manual Work in the software release lifecycle"alt="Manual Work in the software release lifecycle"></figure>
<p><br /></p>
<p style="text-align: justify;"><strong>Drawbacks of manual work</strong>
This <strong>manual work is slow and more </strong>error-prone because of human error. With manual work, you have a disadvantage in that knowledge sharing is very difficult because people who do the tasks would have to document it, and others would have to read it.</p>
<p><br /></p>
<p style="text-align: justify;">It&apos;s also very <strong>intransparent</strong> because it&apos;s hard to trace who executed what, when and finally when infrastructure configuration and so on was done manually; if something happens to the infrastructure, it may be really <strong>hard to recover and replicate the exact state</strong> fast. You would have to remember exactly what was done on the servers in which order to get to that previous infrastructure state. ‍♀️</p>
<p><br /></p>
<h2></h2>
<h2><strong>DevOps tries to remove these roadblocks</strong> ✅</h2>
<p><br /></p>
<p style="text-align: justify;">So you see, the <strong>main characteristic</strong> of all these issues is that they all <strong>slow down the release cycle</strong> and create roadblocks on the way. And you also see, in the case of security and testing, that DevOps may even go over only development or only operations responsibilities and tasks:</p>
<figure><img src="https://static.wixstatic.com/media/117345_ac582a54451d4b02aee79c402b8e3c4f~mv2.jpg/v1/fit/w_880,h_487,al_c,q_80/file.png"title="DevOps includes Testing and Security"alt="DevOps includes Testing and Security"></figure>
<p style="text-align: justify;">
That&apos;s why to understand DevOps, <strong>instead of focusing on the name and what it means, we&apos;re focusing on what it tries to achieve</strong>: </p>
<p><br /></p>
<p style="text-align: justify;">And this can be done step by step, removing one roadblock at a time until you have a fully optimized and automated DevOps process that makes your application release super easy.  </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_21a0952795b44586915441a9bc51a767~mv2.webp/v1/fit/w_880,h_454,al_c,q_80/file.png"title="DevOps removes roadblocks in this whole process"alt="DevOps removes roadblocks in this whole process"></figure>
<h2></h2>
<h2><strong>DevOps Concept as a Solution</strong></h2>
<p><br /></p>
<p style="text-align: justify;">So how does DevOps help achieve this and solve all these challenges? </p>
<p><br /></p>
<p style="text-align: justify;">Well, by the <strong>official definition</strong>, and this was the original idea of DevOps:</p>
<p><br /></p>
<p style="text-align: justify;">So DevOps is not just one set of tools or one specific concept; it&apos;s a <strong>combination of anything that creates the process of releasing the software fast and with high quality</strong>. And the main part of the concept was that developers and operations people should work together more often, talk to each other more often, and collaborate better to achieve that.</p>
<p><br /></p>
<h2></h2>
<h2><strong>DevOps in Practice: DevOps as a separate Role</strong></h2>
<p><br /></p>
<p style="text-align: justify;">But actually, this definition is too broad and too high level and makes it hard to imagine how it works in practice.  So it&apos;s just not specific enough. So naturally, different companies implemented DevOps in different ways. So the <strong>actual implementation of DevOps looked pretty different from company to company</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">But since companies started adopting it, gradually, it got a more concrete form with some of the common patterns across many companies. One of these patterns was that <strong>DevOps evolved into an actual role called a &quot;Devops Engineer</strong>,&quot; where either developers are doing DevOps as a job next to development or operations are doing it, or someone is doing DevOps exclusively as their only job.</p>
<p><br /></p>
<p style="text-align: justify;">And a set of technologies that were used to implement the DevOps principles became <strong>DevOps technologies</strong>, which now DevOps engineers would need to learn:</p>
<figure><img src="https://static.wixstatic.com/media/117345_ad78121d3ade4f519155dc405d34cfd0~mv2.jpg/v1/fit/w_880,h_489,al_c,q_80/file.png"title="DevOps as a separate Role"alt="DevOps as a separate Role"></figure>
<p><br /></p>
<p>And I understand that many people are resisting the idea of DevOps engineering, and the creators of the DevOps concept didn&apos;t see it used this way. Still, the reality is often different from the theory. We see that concept was adjusted and bent to meet the needs of the end goal, and the DevOps engineer role is what came out of it. ‍♀️</p>
<p><br /></p>
<p style="text-align: justify;">And that DevOps role is responsible for creating a streamlined release process without any roadblocks slowing down the release, and that&apos;s why in the <strong>center of DevOps is the well-known Continuous Integration / Continuous Delivery process</strong>.</p>
<p><br /></p>
<h2><strong>DevOps in Practice: How to become a DevOps Engineer</strong></h2>
<p><br /></p>
<p style="text-align: justify;">Check out the <u><a href="https://youtu.be/0yWAtQ6wYNM?t=897" target="_blank">video to see how to become a DevOps Engineer</a></u>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_c02ea38a53d141fe85e6aaf5470a0dd7~mv2.jpg/v1/fit/w_880,h_389,al_c,q_80/file.png"title="Learn about the tasks and responsibilities of a DevOps Engineer"alt="Learn about the tasks and responsibilities of a DevOps Engineer"></figure>
<p style="text-align: justify;">After watching this, you may be thinking, these are a lot of things to learn, and it may be hard to know where to start or what to learn first, or what resources to use. </p>
<p><br /></p>
<p style="text-align: justify;">Well, there are many resources out there to learn individual DevOps technologies.  I actually cover many of the DevOps technologies on <u><a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA" target="_blank">my Youtube channel</a></u>. </p>
<p style="text-align: justify;">
But ideally, you want to <strong>follow a well-structured step-by-step roadmap and, more importantly, learn how to use these technologies together in combination</strong> because that&apos;s what DevOps engineers do. They use and integrate multiple technologies together to create DevOps processes, and of course, you want to learn all these with <strong>actual real-life project examples to know </strong>what<strong> it will look like in a real job</strong>. And very few courses and learning resources offer this, and that&apos;s exactly <strong>why we created a </strong><u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank"><strong>complete DevOps Bootcamp</strong></a></u> with a clear structure and lots of hands-on projects.</p>
<p><br /></p>
<p style="text-align: justify;">So if you&apos;re thinking about becoming a DevOps engineer or slowly transitioning into DevOps, you can definitely check out our DevOps bootcamp </p>
<p><br /></p>
<h2><strong>DevOps vs SRE - How SRE fits into the whole DevOps process</strong></h2>
<p style="text-align: justify;">To get a full picture of DevOps, I want to mention one more concept, which is SRE or <strong>S</strong>ite <strong>R</strong>eliability <strong>E</strong>ngineering, and how it fits into DevOps.</p>
<p><br /></p>
<p style="text-align: justify;">We just learned that there are two definitions of DevOps</p>
<ul>
  <li><p style="text-align: justify;">the original definition, which is <strong>more </strong>high-level and broader and doesn&apos;t specify how exactly DevOps should be implemented</p></li>
  <li><p style="text-align: justify;">and a <strong>more practical one</strong>, which evolved over time with its own DevOps engineer role.</p></li>
</ul>
<p style="text-align: justify;">So when we compare DevOps with SRE, it&apos;s important to know <strong>which definition of DevOps we&apos;re using for this comparison</strong>.</p>
<p><br /></p>
<p style="text-align: justify;"><em><strong>1. First broader definition of DevOps vs. SRE</strong></em>
DevOps is a more high-level concept that defines <strong>what needs to be done</strong> to achieve the automated, streamlined release process. At the same time, SRE is more specific about <strong>how to exactly implement this process</strong> and how to implement DevOps principles.</p>
<p><br /></p>
<p style="text-align: justify;">So many people would say that <strong>SRE is a specific implementation of the DevOps concepts</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_dddc640ff1fc4610a31e45d0a5fa66f3~mv2.jpg/v1/fit/w_880,h_352,al_c,q_80/file.png"title="SRE vs DevOps Concept"alt="SRE vs DevOps Concept"></figure>
<p><br /></p>
<p style="text-align: justify;"><em><strong>2. Practical DevOps vs. SRE</strong></em>
But as we saw, DevOps itself also became more practical with its own role and specific technologies and ways to implement it. So what&apos;s the comparison here? </p>
<p style="text-align: justify;">
Well, in many companies, this practical DevOps implementation became <strong>more focused</strong>. It concentrated<strong> on the speed of delivery</strong> for the application changes, and of course, even though it&apos;s part of the DevOps principles to not only release fast but release quality code, many DevOps teams in practice again seemed to optimize more for the speed than reliability.</p>
<p><br /></p>
<p style="text-align: justify;">So as a great <strong>complementary part of DevOps, SRE emerged with the same principles and goals in mind</strong>, which is to release quality code fast, but as the name suggests, <strong>more focused on reliability and keeping systems stable</strong> while allowing for fast changes:</p>
<figure><img src="https://static.wixstatic.com/media/117345_3642c9dc74b54273b992365e297756eb~mv2.jpg/v1/fit/w_880,h_373,al_c,q_80/file.png"title="SRE vs. Practical DevOps Engineer Role"alt="SRE vs Practical DevOps Engineer Role"></figure>
<p style="text-align: justify;">So SRE is its own role with its own set of tools for making systems reliable. So these two were kind of parallel developments and are now often seen as <strong>two sides of the same coin</strong>, and it&apos;s not uncommon for teams to have both a DevOps engineer and SRE helping implement the DevOps principles.</p>
<p><br /></p>
<h2><strong>What is SRE in detail</strong></h2>
<p style="text-align: justify;">This was just a short look at SRE to understand it in comparison to DevOps. Still, since I have received many questions about what SRE is, I created a <u><a href="https://youtu.be/OnK4IKgLl24" target="_blank">follow-up video on SRE</a></u> to explain in more detail how SRE works in practice, what are the tasks and responsibilities of a Site Reliability engineer, and so on.</p>
<p><br /></p>
<hr>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;">For DevOps, I hope I could clarify all your questions about it. If not, leave a comment in the video, and I will try to answer them </p>
<p><br /></p>
<h3>Good luck on your DevOps journey!  </h3>
<h3></h3>
<hr>
<p><br /></p>
<p>Be sure to check out our famous DevOps bootcamp, which is a <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">complete educational program</a></u>, where you learn how to build complete fully automated DevOps processes.</p>
<p><br /></p>
<p style="text-align: justify;">Other than that..</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow me</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[Top 5 Reasons to Choose DevOps as a Career]]></title><description><![CDATA[DevOps engineer is one of the hottest jobs currently. Here I talk about some of the advantages that speak for choosing DevOps as a career]]></description><link>https://www.techworld-with-nana.com/post/top-5-reasons-to-choose-devops-as-a-career</link><guid isPermaLink="false">63dd86549158b23e0859f99c</guid><category><![CDATA[DevOps as a Career]]></category><pubDate>Fri, 07 Apr 2023 16:48:02 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/117345_cf5976887e8e46a68ba910321c577733~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_cf5976887e8e46a68ba910321c577733~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png"></figure>
<p><br /></p>
<p>Many of you may be wondering <strong>if the DevOps career is for you</strong>.  If you have been following and watching my videos you probably already know that I love DevOps and have a lot of passion for it, but is DevOps for everyone and what are some of the reasons why I personally like DevOps and chose it as a career? And <strong>what are some of the advantages that speak for choosing DevOps as a career in general?</strong></p>
<p><br /></p>
<p style="text-align: justify;">I hope sharing my insights on this topic will be useful for some of you </p>
<p><br /></p>
<p style="text-align: justify;"><em>This is the written version of my </em><u><a href="https://youtu.be/2NtiI0Ojczw" target="_blank"><em>new youtube video</em></a></u> ✍️</p>
<p><br /></p>
<h2><strong>1 - My personal preference</strong> </h2>
<p style="text-align: justify;">I want to start with my own background and story of how I ended up in DevOps.</p>
<p><br /></p>
<p style="text-align: justify;">I started off as a software developer and in one of my software development projects, I started taking over tasks of configuring servers, configuring builds in Jenkins, configuring application packaging, etc. Or configuring things around Docker and running containers, making the builds faster, making tests faster, and so on.  And I noticed that tasks that were related to <strong>configuring stuff</strong> and <strong>optimizing processes were more enjoyable for me</strong> than programming. </p>
<p><br /></p>
<p style="text-align: justify;">Now, these are just a subset of tasks in DevOps. I was basically doing some tasks around CI/CD configuration, but DevOps is much more than that:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_59a2b19e15bc4771bdc6899c621c84a1~mv2.png/v1/fit/w_880,h_400,al_c,q_80/file.png"></figure>
<p style="text-align: justify;"><em>Source: </em><u><a href="https://about.gitlab.com/topics/devops/" target="_blank"><em>https://about.gitlab.com/topics/devops/</em></a></u></p>
<p><br /></p>
<p style="text-align: justify;">Now if you don&apos;t know exactly what DevOps involves and what that software development lifecycle includes I have a dedicated video on that: <u><a href="https://youtu.be/0yWAtQ6wYNM" target="_blank">What is DevOps?</a></u></p>
<p><br /></p>
<p style="text-align: justify;">So basically when you&apos;re doing software development, you are zoomed in into one specific part of that software development life cycle. When you&apos;re doing operations, again you are focused on a specific area of that life cycle:</p>
<figure><img src="https://static.wixstatic.com/media/117345_f5e69893d0bf4753b34f07fac98467d4~mv2.png/v1/fit/w_880,h_495,al_c,q_80/file.png"title="Development and Operations as part of a complete SDLC"alt="Development and Operations as part of a complete SDLC"></figure>
<p style="text-align: justify;">With <strong>DevOps</strong> however, you <strong>zoom out from those specific areas and parts</strong> and start seeing the big picture or a bird&apos;s eye view of the whole software development workflow. And you start analyzing how each of those areas is connected like software development processes with Git workflows connect to CI/CD pipeline or CI/CD pipeline connected to infrastructure etc.</p>
<p><br /></p>
<p style="text-align: justify;">And you start analyzing, which areas need improvements, and which ones have bottlenecks: like development workflow is super optimized, so your team&apos;s generating new features fast, but the pipeline is slow and blocking the release of those features to production.</p>
<p><br /></p>
<h3>High-Level Thinking </h3>
<p style="text-align: justify;">Now what I also observed is that a different type of thinking is required for DevOps. You need high-level thinking connecting dots on a high level: </p>
<p><br /></p>
<p style="text-align: justify;"><strong>Width instead of depth</strong>.
Like an architect making the plan of the whole building and planning how different parts are connected and implemented and then you have different specializations, who actually carry out that plan. So I personally like that role a lot </p>
<p><br /></p>
<h2><strong>2 - Diverse tasks and rewarding </strong></h2>
<p style="text-align: justify;">And because DevOps covers the whole software development life cycle, the set of tasks or the <strong>range of tasks is much more diverse and rich in variety</strong>:</p>
<ul>
  <li><p style="text-align: justify;">Like you could be looking at front-end code and optimizing the application packaging process</p></li>
  <li><p style="text-align: justify;">The next thing could be configuring deployment servers on the cloud</p></li>
  <li><p style="text-align: justify;">Then scripting a program to automate some infrastructure configuration tasks</p></li>
</ul>
<p style="text-align: justify;">And if you&apos;re like me this may be much more interesting and exciting for many people and again this is probably a personal preference.</p>
<p><br /></p>
<h4>Go broader</h4>
<p style="text-align: justify;">Some people <strong>love focusing on their area of expertise deepening their knowledge</strong> in it. Like I learned JavaScript and then I just learn JavaScript to the most advanced level, with different frameworks, different features, etc.</p>
<p><br /></p>
<p style="text-align: justify;">And there is enough to learn for years in each language and technology, but for many, this can be boring. If you&apos;re like me you <strong>want to have a more diverse set of tasks, you want to go broader</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">I like architecting processes instead, instead of specializing in just one tool or technology I like to understand the whole software development life cycle process and how it all works and more importantly how I can optimize different parts of that life cycle, identifying opportunities for improvements and optimizations :</p>
<ul>
  <li><p style="text-align: justify;">like packaging, the application takes too long</p></li>
  <li><p style="text-align: justify;">setting up the environment for tests is too slow</p></li>
  <li><p style="text-align: justify;">security of the build image is not properly checked</p></li>
  <li><p style="text-align: justify;">or maybe not enough bugs get discovered before deploying to the end environment</p></li>
  <li><p style="text-align: justify;">or the build process is taking too long</p></li>
  <li><p style="text-align: justify;">or we find out about issues in production too late</p></li>
  <li><p style="text-align: justify;">maybe the operation team has a lot of effort and needs a long time to update and maintain the Kubernetes cluster</p></li>
  <li><p style="text-align: justify;">it takes too long to approve and be confident about deploying new features into production</p></li>
  <li><p style="text-align: justify;">...</p></li>
</ul>
<p style="text-align: justify;">As a DevOps engineer, you can solve all these challenges, and that in itself for me is very fulfilling work: Improving things, optimizing, making things faster, automating, etc. </p>
<p><br /></p>
<p style="text-align: justify;">And this leads to the next reason, which is the impact.</p>
<p><br /></p>
<h2><strong>3 - Impact</strong> ⭐️</h2>
<p style="text-align: justify;">As a DevOps engineer, you can have a huge business impact in your company by having a good understanding of the whole software development life cycle and improving and optimizing it. And again can be <strong>super fulfilling to know that your work has such an impact and affects many people</strong> eventually.</p>
<p><br /></p>
<h4>Impact on co-workers </h4>
<p style="text-align: justify;">You can build processes through automation that make the work of your fellow team members in the organization much easier. Smooth well architected processes mean that engineers can focus on their areas of expertise and generally enjoy their work much more, instead of doing some boring manual things instead. So you can make the lives of developers, operations, testers, project managers, and so on easier.</p>
<p><br /></p>
<h3>Huge business value </h3>
<p style="text-align: justify;">But you also bring huge business value. Well-implemented DevOps processes will lead to <strong>faster time to market</strong> and <strong>constant improvement of business quality</strong>, <strong>cost savings</strong>, etc. This means <strong>end users are happier</strong> and the company can innovate and deliver much better. So you have an impact on the whole business.</p>
<p><br /></p>
<p style="text-align: justify;">And this brings me to the next point which is the demand for DevOps and salary.</p>
<p><br /></p>
<h2><strong>4 - Demand and Salary </strong></h2>
<p style="text-align: justify;">Since this is a position that has such a huge impact, it automatically means that you are <strong>super valuable for your team and your company</strong> because you literally have a direct impact on time to market, cost savings, how satisfied the engineers are with work, etc. And companies see that value. </p>
<p><br /></p>
<p style="text-align: justify;">That&apos;s why the demand for DevOps engineers has increased so dramatically over the past few years.  Organizations that have implemented DevOps practices are in fact seeing the benefits of high performance, and much faster deployments compared to competitors and logically are <strong>willing to pay high salaries to find DevOps experts</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">The <strong>demand is very clearly visible on job platforms</strong> as well: indeed.com a major job platform, for example, had a 75% increase in DevOps job listings and on LinkedIn there was a 50% increase in mentioning DevOps as a skill.</p>
<p><br /></p>
<p style="text-align: justify;">And <strong>combine the huge value you are bringing to the company and the high demand for DevOps skills with the fact that there are very few engineers</strong>, who actually have those skills and can fill the role. This means if you are a DevOps engineer you are highly demanded and companies will pay a premium for having you. This means ✅ flexibility, ✅ lots of options, ✅ high salary with lots of added benefits. So you have super high leverage.</p>
<figure><img src="https://static.wixstatic.com/media/117345_3e0284b21cfb49c5811a218d594b88cc~mv2.png/v1/fit/w_401,h_391,al_c,q_80/file.png"title="DevOps Engineers are highly demanded on the job market"alt="DevOps Engineers are highly demanded on the job market"></figure>
<p><br /></p>
<p style="text-align: justify;">This means if you actually learn DevOps you will <strong>drastically increase your value</strong> on the global marketplace and get a whole new set of opportunities out there.</p>
<p><br /></p>
<p style="text-align: justify;">And I think people should definitely take advantage of this opportunity but I also know learning DevOps can be daunting and difficult and that&apos;s exactly why we created <u><a href="https://www.techworld-with-nana.com/devops-bootcamp" target="_blank">this full educational program</a></u> to give people the opportunity to learn all the necessary skills to become a DevOps engineer. And we created our program to give you exactly the skills and knowledge to confidently go out there and apply for a job as a DevOps engineer, who can help the company implement the DevOps processes from day one and that&apos;s what is extremely valuable for employers.</p>
<p><br /></p>
<h3>Company perspective </h3>
<p style="text-align: justify;">From the company&apos;s perspective, when they are looking for a DevOps engineer they usually write a job opening and either they cannot find any DevOps engineer or get candidates that want to be DevOps engineers, but don&apos;t really have enough knowledge yet.  Like they have been developers or can configure servers, but they don&apos;t really have any DevOps or core DevOps skills.</p>
<p><br /></p>
<p style="text-align: justify;">So usually what companies do instead is upskill their existing employees or hire young engineers and train them specifically in DevOps. Because <strong>if they can&apos;t find them, they should train them</strong>. ‍♀️ But again to train people to become DevOps engineers, you need a DevOps engineer to actually train them.  So we have a lot of companies, who upskill their engineers in DevOps using our boot camp, which is another proof that <strong>companies are willing to invest in building DevOps know-how internally</strong> to implement DevOps throughout the organization.</p>
<p><br /></p>
<h3>DevOps was not meant as a role</h3>
<p style="text-align: justify;">Now I know that there is some controversy around DevOps as a role. That it was <strong>meant as a set of concepts and principles and not as an engineering role</strong>, but the <strong>reality is that there are real DevOps engineering job positions and people who actually work as DevOps engineers</strong> ‍♂️ and I actually made a dedicated video on that as well, explaining the topic and how it all evolved so if you&apos;re interested you can check it out: <u><a href="https://youtu.be/0yWAtQ6wYNM" target="_blank">What is DevOps?</a></u></p>
<p><br /></p>
<h2><strong>5 - Continued learning opportunity</strong> </h2>
<p style="text-align: justify;">Finally, since in DevOps, you are covering the whole software development lifecycle, it means you work with lots of tools, so you <strong>need to be constantly learning and expanding your knowledge</strong>.</p>
<p style="text-align: justify;">Now this might be an advantage, if you&apos;re like me and really enjoy learning new stuff all the time or it could be a disadvantage if you want to focus and solidify knowledge in a few technologies:</p>
<figure><img src="https://static.wixstatic.com/media/117345_60dd09264b0c41c5be2133cda055ebb7~mv2.png/v1/fit/w_416,h_229,al_c,q_80/file.png"title="Continued learning can be both a benefit or a challenge"alt="Continued learning can be both a benefit or a challenge"></figure>
<p><br /></p>
<p style="text-align: justify;">This is actually a necessary thing since <strong>DevOps is still evolving and there are a lot of dynamics and changes</strong> in the DevOps area. So you have new tools, new concepts, and solutions that people come up with all the time and as a DevOps engineer, you need to actually <strong>stay up to date and see what new solutions are available to make the processes even better</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">Also, <strong>DevOps processes are never completed</strong>, you don&apos;t just build stuff and complete your work once, it&apos;s a constant ongoing process. Just like developing an application, you don&apos;t just create an application once and you&apos;re done, you make improvements and continue making the application better and better, adding new features, fixing the bugs and issues, etc. It&apos;s the same thing with DevOps processes. So lots of new things to learn all the time.</p>
<p><br /></p>
<h2><strong>Downsides </strong></h2>
<p style="text-align: justify;">As I said this could also be a disadvantage and of course like with everything there are pros and cons here as well.</p>
<p><br /></p>
<p style="text-align: justify;"><strong>DevOps does come with some challenges</strong> as well, like</p>
<ul>
  <li><p style="text-align: justify;"><strong>too much to learn</strong> and</p></li>
  <li><p style="text-align: justify;"><strong>too broad of responsibility</strong> can be overwhelming for some people.</p></li>
</ul>
<p style="text-align: justify;">Also often there are <strong>unclear requirements</strong> because companies themselves don&apos;t know what DevOps is exactly. So you may get pushed into some role or in doing tasks, which are not really in the DevOps area. </p>
<p><br /></p>
<p style="text-align: justify;">Another big challenge is <strong>communication with various teams</strong> in the organization and it can be frustrating if they don&apos;t cooperate. </p>
<p><br /></p>
<h3>Own video: &quot;Is DevOps right for me&quot; </h3>
<p style="text-align: justify;">Check out this <u><a href="https://youtu.be/Ms_jTcERvMY" target="_blank">video &quot;Is DevOps right for you? 13 points to consider&quot;</a></u> to find out whether DevOps is right for you. </p>
<p><br /></p>
<h2><strong>Career path is extremely personal </strong></h2>
<p style="text-align: justify;">Now finally I want to mention that <strong>choosing a career path is extremely personal and depends on many personal circumstances</strong>. For me being a DevOps engineer is working on a wide variety of tasks with a wide variety of technologies and tools. It&apos;s understanding the bigger picture and being able to investigate issues efficiently. And for me, <strong>the impact and fulfillment from the work definitely outweigh the challenges</strong> </p>
<p><br /></p>
<p style="text-align: justify;">Now I hope this gave you good insights into DevOps and that I could provide some valuable information about it.  It would be really interesting to know what are your experiences in DevOps and your personal preferences.</p>
<p><br /></p>
<p style="text-align: justify;">Share them in the comments for me and for others </p>
<p><br /></p>
<hr>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow me</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">YouTube: Engaging DevOps Tutorials</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram: Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn: For bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[GitLab CI/CD for Beginners in 1 Hour [FREE Course]]]></title><description><![CDATA[In this GitLab Crash Course, I will teach you everything you need to know to get started with GitLab CI/CD in 1 hour]]></description><link>https://www.techworld-with-nana.com/post/gitlab-ci-cd-for-beginners</link><guid isPermaLink="false">63dfa992f0a90a66ce7fb79f</guid><category><![CDATA[DevOps technologies]]></category><pubDate>Thu, 06 Apr 2023 16:18:04 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/117345_036cd04926fc4217aafa7d0ae5e82ed6~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_036cd04926fc4217aafa7d0ae5e82ed6~mv2.webp/v1/fit/w_1000,h_420,al_c,q_80/file.png"title="GitLab CI/CD for Beginners in 1 Hour"alt="GitLab CI/CD for Beginners in 1 Hour"></figure>
<p><br /></p>
<p style="text-align: justify;">In <u><a href="https://youtu.be/qP8kir2GUgo" target="_blank">this GitLab Crash Course</a></u>, I will teach you everything you need to know to get started with GitLab CI/CD in 1 hour    This should give you a short overview and introduction.</p>
<p><br /></p>
<h2></h2>
<h2><strong>Overview - What you’ll learn in 1 Hour </strong>✅</h2>
<ul>
  <li><p style="text-align: justify;">What is GitLab CI/CD</p></li>
  <li><p style="text-align: justify;">GitLab compared to other CI/CD platforms</p></li>
  <li><p style="text-align: justify;">Overview of GitLab Architecture</p></li>
  <li><p style="text-align: justify;">Build a full GitLab CI/CD pipeline for a Python demo app that</p><ul>
  <li><p style="text-align: justify;">executes tests,</p></li>
  <li><p style="text-align: justify;">builds a Docker image,</p></li>
  <li><p style="text-align: justify;">pushes to a private Docker repository and</p></li>
  <li><p style="text-align: justify;">deploys the app to a remote server on DigitalOcean</p></li>
</ul></li>
</ul>
<figure><img src="https://static.wixstatic.com/media/117345_ee82d1a16aec42b2afeabe9649b58c0c~mv2.webp/v1/fit/w_880,h_210,al_c,q_80/file.png"title="The GitLab CI/CD pipeline we will build"alt="The GitLab CI/CD pipeline we will build"></figure>
<p style="text-align: justify;">Learn GitLab Basic Concepts on the way:</p>
<figure><img src="https://static.wixstatic.com/media/117345_5053a5f9a4f04124b999dff40000bf5d~mv2.jpg/v1/fit/w_880,h_483,al_c,q_80/file.png"alt="GitLab CI/CD what you learn"></figure>
<ul>
  <li><p>Pipeline, Jobs,</p></li>
  <li><p style="text-align: justify;">Stages</p></li>
  <li><p style="text-align: justify;">GitLab Runners and Executors</p></li>
  <li><p style="text-align: justify;">Variables (Variable and File Type)</p></li>
  <li><p style="text-align: justify;">Docker in Docker</p></li>
</ul>
<p><br /></p>
<p><br /></p>
<h2></h2>
<h2></h2>
<h2><strong>What is GitLab CI/CD?</strong></h2>
<p><br /></p>
<p style="text-align: justify;">First of all, what is Gitlab CI/CD, and why should you even care?</p>
<p><br /></p>
<p style="text-align: justify;">GitLab platform generally is striving to become THE DevOps platform or a <strong>one-stop shop for building DevOps processes for your applications</strong>. </p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_c42e8bee02424467b467c0c61504dad1~mv2.jpg/v1/fit/w_880,h_440,al_c,q_80/file.png"title="GitLab platform covers many steps of the DevOps process"alt="GitLab platform covers many steps of the DevOps process"></figure>
<p><br /></p>
<p style="text-align: justify;">So they have exactly this roadmap, and they&apos;re working towards that, which means they&apos;re actually integrating and creating new features to basically give you everything in one platform to build complete DevOps processes, and a big part of those processes is a CI/CD pipeline.</p>
<p><br /></p>
<p><br /></p>
<h2><strong>What is CI/CD in simple words</strong></h2>
<p><br /></p>
<p style="text-align: justify;">So, first of all, what is CI/CD in simple words?</p>
<p><br /></p>
<p style="text-align: justify;">CI/CD stands for <strong>Continuous Integration</strong> and <strong>Continuous Deployment</strong> or <strong>Continuous Delivery</strong>, and what it basically means is automatically and <strong>continuously testing, building, and releasing code changes to the deployment environment</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">So that means when a developer commits a new code into the Gitlab repository, Gitlab will automatically execute a CI/CD pipeline that you have configured for your project to release those code changes to the end environment, where the end users can access them:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_0f80ec487752419b85caa4b5335e394e~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="What is CI/CD?"alt="What is CI/CD?"></figure>
<p><br /></p>
<p style="text-align: justify;">But this CI/CD concept is a topic of its own. If you want to understand it on a deeper level, then you can check out my video about DevOps and CI/CD pipeline, where I explain this in more detail here: <u><a href="https://youtu.be/0yWAtQ6wYNM" target="_blank">What is DevOps?</a></u></p>
<p><br /></p>
<p style="text-align: justify;">But as I said, in simple terms, CI/CD is to continuously release your code changes to the end environment, and in this crash course, we will be building a simplified version of a CI/CD pipeline using Gitlab CI/CD.</p>
<p><br /></p>
<h2><strong>Many CI/CD platforms</strong></h2>
<p style="text-align: justify;">Of course, there are many CI/CD tools, one of the most used ones in the industry still being Jenkins. And Gitlab CI/CD is just one of those other CI/CD platforms:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_7ca4106fc72142d199529d08668c22b1~mv2.jpg/v1/fit/w_880,h_292,al_c,q_80/file.png"title="There are many CI/CD platforms available"alt="There are many CI/CD platforms available"></figure>
<p><br /></p>
<h3>Source Code &amp; CI/CD on the Same Platform</h3>
<p><br /></p>
<p style="text-align: justify;"><strong>All of them have their advantages and disadvantages</strong>. Still, a big advantage of using Gitlab to build CI/CD pipelines for your applications is that you already have your code on Gitlab, so this is an extension of your software development processes in your team, where you can also build CI/CD pipelines on the same platform:</p>
<figure><img src="https://static.wixstatic.com/media/117345_01fb03d7ee584f909280c28e78c69f80~mv2.jpg/v1/fit/w_880,h_420,al_c,q_80/file.png"title="Source Code Management on GitLab"alt="Source Code Management on GitLab"></figure>
<p><br /></p>
<p style="text-align: justify;">So your team already works with Gitlab, and you have your code there, so this is basically an additional feature that you can <strong>extend your workflows on Gitlab</strong> with, and you don&apos;t need a separate tool for that. </p>
<p><br /></p>
<p style="text-align: justify;">Apart from that, Gitlab makes that extension very seamless by allowing you to <strong>get started without any setup effort and also having your pipeline as part of your application code compared to Jenkins, for example</strong>, where you have to set up and configure the Jenkins server, create a pipeline and then connect it to the Git project:</p>
<figure><img src="https://static.wixstatic.com/media/117345_0ffd12184b094d59a56d8d095230856a~mv2.jpg/v1/fit/w_880,h_424,al_c,q_80/file.png"title="GitLab vs Jenkins"alt="GitLab vs Jenkins"></figure>
<p><br /></p>
<p style="text-align: justify;">With Gitlab, you can start without any of this configuration effort, and we will see that in the demo part. ✅</p>
<p><br /></p>
<h2></h2>
<h2><strong>GitLab Architecture</strong></h2>
<p><br /></p>
<p style="text-align: justify;">Now if you don&apos;t have to set up anything and configure any servers to run the pipelines, <strong>how does it actually work</strong>? And this leads us to the topic of Gitlab architecture and how it works.</p>
<p><br /></p>
<h3>GitLab Instance</h3>
<p style="text-align: justify;">You have a Gitlab instance or also called Gitlab server, that <strong>hosts your application code and your pipelines and basically the whole configuration</strong>. So it knows what needs to be done.</p>
<p><br /></p>
<h3>GitLab Runners</h3>
<p style="text-align: justify;">And connected to that Gitlab instance, you have multiple GitLab runners, which are separate machines connected to the Gitlab server machine, which are actually the ones executing the pipelines.</p>
<p><br /></p>
<p style="text-align: justify;">So the <strong>Gitlab server knows what needs to be done, </strong>and the <strong>GitLab runner actually does that</strong>:</p>
<figure><img src="https://static.wixstatic.com/media/117345_893c109f6a6c4f68b4dcc96beb0404c2~mv2.jpg/v1/fit/w_880,h_481,al_c,q_80/file.png"title="GitLab Architecture"alt="GitLab Architecture"></figure>
<p><br /></p>
<h3>Managed or SaaS</h3>
<p style="text-align: justify;">And <u><a href="http://www.gitlab.com/" target="_blank"><em>www.gitlab.com</em></a></u> is actually a <strong>managed Gitlab instance</strong> that offers multiple managed runners already out of the box.</p>
<p style="text-align: justify;">
So these are all maintained by Gitlab, and that&apos;s why you can start running your pipelines without any setup and configuration effort using this managed setup.</p>
<p><br /></p>
<h3>Self-Managed</h3>
<p style="text-align: justify;">And this is already enough for starting out, but of course, for your own organization, you may want to <strong>manage the runners or the whole setup yourself</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">So you can create partially or completely self-managed GitLab setup as well:</p>
<figure><img src="https://static.wixstatic.com/media/117345_df12beb2f0bc4bdb8497d536af41c6b1~mv2.jpg/v1/fit/w_880,h_456,al_c,q_80/file.png"title="GitLab SaaS vs Self-Managed"alt="GitLab SaaS vs Self-Managed"></figure>
<p><br /></p>
<p style="text-align: justify;">In this crash course, we will use Gitlab&apos;s managed infrastructure and free features to build our release pipeline. So we will not need to configure anything ourselves. </p>
<p><br /></p>
<h2></h2>
<h2><strong>Pipeline Configuration - .gitlab-ci.yml</strong></h2>
<p><br /></p>
<p style="text-align: justify;">Now the question is, how do we create a Gitlab CI/CD pipeline? </p>
<p><br /></p>
<p style="text-align: justify;">Well, following the concept of <strong>Configuration as Code</strong> or <strong>Pipeline as Code</strong>, the whole pipeline will be written in code and hosted in the applications git repository itself in a <strong>simple YAML file</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">And the file has to be called <strong>.gitlab-ci.yml</strong>, so that Gitlab can automatically detect that pipeline code and execute it without any extra configuration effort from our site:</p>
<figure><img src="https://static.wixstatic.com/media/117345_14df105eb57b47a689b1a84ad8e6c42a~mv2.webp/v1/fit/w_880,h_648,al_c,q_80/file.png"title="Configuration of the pipeline as code"alt="Configuration of the pipeline as code"></figure>
<p><br /></p>
<p style="text-align: justify;">So in the <strong>root of the project&apos;s repository</strong>, we&apos;re going to create this YAML file, and we&apos;re going to write all the pipeline configurations inside. We can actually do that directly in the GitLab UI as well, so we don&apos;t have to switch back and forth from the editor to Gitlab:</p>
<figure><img src="https://static.wixstatic.com/media/117345_3b03ab9ab365478c8daedddab7ad6fd4~mv2.png/v1/fit/w_880,h_435,al_c,q_80/file.png"title="Using GitLab UI"alt="Using GitLab UI"></figure>
<h3>Jobs</h3>
<p style="text-align: justify;">The tasks in the CI/CD pipeline, such as running tests, building an image, deploying to a server, etc., are configured as what&apos;s called <strong>&apos;jobs&apos;</strong>:</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_39b5695580474c578cb35b84ea231905~mv2.webp/v1/fit/w_880,h_204,al_c,q_80/file.png"title="What are the tasks in the CI/CD pipeline?"alt="What are the tasks in the CI/CD pipeline?"></figure>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_f72719e9edd34010a4da8acda74b1992~mv2.webp/v1/fit/w_880,h_195,al_c,q_80/file.png"title="GitLab jobs"alt="GitLab jobs"></figure>
<p><br /></p>
<p style="text-align: justify;">So jobs are the <strong>most fundamental building block</strong> of a .gitlab-ci.yml file. They <strong>define what to do</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">Each job has a name, and inside the job, we have a couple of parameters or a couple of attributes or things that we want to configure for the job.</p>
<p><br /></p>
<p style="text-align: justify;">The first attribute and the only required attribute of a job is what&apos;s called a <strong>script</strong>. And the script is basically where we list any commands that should be executed for that job:</p>
<figure><img src="https://static.wixstatic.com/media/117345_697cdc681d5a493994575f629e46a1b5~mv2.jpg/v1/fit/w_880,h_286,al_c,q_80/file.png"title="Example configuration for GitLab jobs"alt="Example configuration for GitLab jobs"></figure>
<p><br /></p>
<p style="text-align: justify;">So, for example, for &apos;run tests&apos;, we need to execute <span style="color: #ffffff;"><span style="background-color: #848181;"> </span></span><em><span style="color: #ffffff;"><span style="background-color: #848181;">make test</span></span></em><span style="color: #ffffff;"><span style="background-color: #848181;"> </span></span> for our python demo application. This is the command that needs to be executed in order to run the test, so we&apos;re going to write that command:</p>
<figure><img src="https://static.wixstatic.com/media/117345_623a27650be44fd1a0b01865b6561777~mv2.jpg/v1/fit/w_880,h_498,al_c,q_80/file.png"title="Example GitLab configuration for running tests and building Docker image"alt="Example GitLab configuration for running tests and building Docker image"></figure>
<p style="text-align: justify;">
However, in order for this to run successfully, we need to do a couple of things.</p>
<p><br /></p>
<p style="text-align: justify;">But for the actual demo part, let&apos;s continue with the video, so you can follow along more easily: </p>
<p><br /></p>
<a href="https://youtu.be/qP8kir2GUgo">https://youtu.be/qP8kir2GUgo</a>
<p><br /></p>
<p style="text-align: justify;">▬▬▬▬▬▬ R E F E R E N C E S ▬▬▬▬▬▬
► Git repo we build the CI/CD pipeline for: <u><a href="https://gitlab.com/nanuchi/gitlab-cicd-crash-course" target="_blank">https://gitlab.com/nanuchi/gitlab-cicd-crash-course</a></u></p>
<p><br /></p>
<p style="text-align: justify;">▬▬▬▬▬▬ Course Pre-Requisites ▬▬▬▬▬▬</p>
<p style="text-align: justify;">
 Docker - learn here: ► <u><a href="https://youtu.be/3c-iBn73dDE" target="_blank">https://youtu.be/3c-iBn73dDE</a></u>
 YAML - learn here: ► <u><a href="https://youtu.be/1uFVr15xDGg" target="_blank">https://youtu.be/1uFVr15xDGg</a></u></p>
<p><br /></p>
<p style="text-align: justify;">Hope you will learn a lot in this beginner tutorial!</p>
<p><br /></p>
<hr>
<p><br /></p>
<h2><strong>Complete GitLab CI/CD course with Docker, Kubernetes and Microservices </strong></h2>
<p><br /></p>
<p style="text-align: justify;">Also if you are serious of learning GitLab CI/CD, be sure to check out our <u><a href="http://bit.ly/3GapJAE" target="_blank">complete GitLab CI/CD course</a></u>. You will learn how to build production-ready CI/CD pipelines in one comprehensive and practical course!</p>]]></content:encoded></item><item><title><![CDATA[What are Microservices? Microservices Architecture and the What, Why and How]]></title><description><![CDATA[With microservices, we break down the application into multiple smaller applications, so several minor or micro applications.]]></description><link>https://www.techworld-with-nana.com/post/what-are-microservices</link><guid isPermaLink="false">64098a9fcd1e24e5dbb9d7b3</guid><category><![CDATA[DevOps Concepts]]></category><pubDate>Wed, 05 Apr 2023 14:00:35 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_019b7fe3e6984c94ab0f59ace2024e7a~mv2.jpeg/v1/fit/w_1000,h_720,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_5b3e444d7cea49388039f16e6d866714~mv2.png/v1/fit/w_1000,h_776,al_c,q_80/file.png"title="Companies are moving from monolith to microservices architecture"alt="Companies are moving from monolith to microservices architecture"></figure>
<p>In this blog, I&apos;m going to talk about microservices. Here a <strong>short overview</strong> of what you will learn:</p>
<ol>
  <li><p>What is a Monolith?</p></li>
  <li><p>Challenges and why Microservices?</p></li>
  <li><p>What are Microservices?</p></li>
  <li><p>Benefits and Best Practices</p></li>
  <li><p>Challenges of Microservices</p></li>
  <li><p>Communication between Microservices</p></li>
</ol>
<p><br /></p>
<p>First, I will start by explaining what a monolith application architecture is, what were some of the challenges of a monolith architecture, and why the industry moved slowly toward a microservices architecture. </p>
<p><br /></p>
<p style="text-align: justify;">Then, we will precisely see what microservices or microservice architecture is, as well as best practices, benefits, and how the communication between microservices works. We will also see different ways to manage code for microservices applications and discuss mono-repo versus poly-repo and both advantages and disadvantages.</p>
<p><br /></p>
<p style="text-align: justify;">So let&apos;s get started. </p>
<p><br /></p>
<p style="text-align: justify;">This is the written version of our popular <u><a href="https://youtu.be/rv4LlmLmVWk" target="_blank">Youtube video</a></u>. Check it out to have helpful animations.</p>
<p><br /></p>
<h2><strong>Monolith and its Challenges</strong></h2>
<p style="text-align: justify;">Before microservices, the standard way of developing applications was with a monolithic architecture. It means all the application components, the whole code, is part of a <strong>single unit</strong>. </p>
<p><br /></p>
<p style="text-align: justify;">For example, if we had an online shop application, all of its parts like user authentication, shopping cart, product catalog, sales campaigns, notification, and so on, all the code for these functionalities would be in one code base as part of one monolithic application:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_3bd3e5837ac64c55b2791a29737e96f8~mv2.jpg/v1/fit/w_763,h_686,al_c,q_80/file.png"title="Monolithic Application with all parts in 1 single unit"alt="Monolithic Application with all parts in 1 single unit"></figure>
<p>Everything is <strong>developed, deployed, and scaled as one unit</strong>. This means the application must be written in a single language with one technology stack with a single runtime. And if you have different teams working on various application parts, they must coordinate to ensure they don&apos;t affect each other&apos;s work. Also, if developers change the code for the payment functionality, you would need to build the whole application and deploy it as one package. You can&apos;t just update and deploy only the payment functionality changes separately.</p>
<p><br /></p>
<h2><strong>Challenges ⚡️</strong></h2>
<p style="text-align: justify;">This was a standard way of developing applications, but as applications grew in size and complexity, this led to different challenges. </p>
<p><br /></p>
<p style="text-align: justify;">First, the <strong>coordination between teams became more difficult,</strong> because the code was much bigger, and the application parts were more tangled. Also, if suddenly you had a usage spike in shopping carts, for example, on holiday dates, and you wanted to scale only that part of the application, you can&apos;t do it. You need to scale the whole application. This, in turn, means <strong>higher infrastructure costs and less flexibility in scaling</strong> your application up and down.</p>
<p><br /></p>
<p style="text-align: justify;">Another issue is, for example, if a payment functionality used a third-party module with version 1.8, while notifications feature needed the same module, but required version 1.7 instead. In a monolith application, you would have to pick one or the other, because it&apos;s a single application, and you can only have one dependency of the same module.</p>
<p><br /></p>
<p style="text-align: justify;">Another major issue with monolith applications is that the release process of such applications takes longer, because for changes in any part of the application in any feature, you need to <strong>test and build the whole application to deploy those changes</strong>.</p>
<p><br /></p>
<h2><strong>What are Microservices?</strong></h2>
<p><br /></p>
<p style="text-align: justify;">The answer to all these issues was a microservices architecture. So what are microservices exactly?  With microservices, we <strong>break down the application into multiple smaller applications. </strong>So we have several small or micro applications that make up that one big application.</p>
<p><br /></p>
<h3>Important Questions to answer when building a Microservices Architecture</h3>
<p><br /></p>
<p style="text-align: justify;">When we create a microservices architecture, we have a couple of fundamental questions. First, how do we decide how to break down the application, what code goes where, and how many such micro applications or microservices do we create? How big or small should these microservices be? And finally, how do these services then talk to each other?</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Best Practices 1:  Break down based on business functionalities</strong></p>
<p style="text-align: justify;">First, the best practice is to break down the application into components or microservices based on business functionalities, not technical ones. So the microservices of an online shop application will be products, shopping cart, user accounts, checkout, and so on, because all these are business features.</p>
<figure><img src="https://static.wixstatic.com/media/117345_cef0e805607842f8afd509cc65348837~mv2.png/v1/fit/w_547,h_684,al_c,q_80/file.png"title="Micro applications of an Online App"alt="Micro applications of an Online App"></figure>
<p><br /></p>
<p style="text-align: justify;"><strong>Best Practices 2:  1 service for 1 specific job</strong></p>
<p style="text-align: justify;">In terms of size, each microservice must do just one isolated thing. So, it would help if you had a microservice responsible for shopping cart logic and another for checkout. It would help if you always strived to keep one service doing one specific job. </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_32b7aa09ad8e48df85d43263b7876788~mv2.png/v1/fit/w_632,h_552,al_c,q_80/file.png"title="Small, isolated microservices over large one that does multiple things"alt="Small, isolated microservices over large one that does multiple things"></figure>
<p><br /></p>
<p><strong>Best Practices 3:  Self-contained and independent</strong></p>
<p style="text-align: justify;">An essential characteristic of each microservice is that they should be self-contained and independent. This means each service must be able to be <strong>developed, deployed, and scaled separately without any tight dependencies on any other services</strong>, even though they are part of the same application. This is called &quot;loose coupling&quot;.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_a92ce146c8664c5a9e9398a5ee5a08e9~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Each microservice should be self-contained and indepentend"alt="Each microservice should be self-contained and indepentend"></figure>
<p>With this best practice approach, if you change something in the payment service, you will only build and deploy the payment service.  Nothing else will be affected, which means the services have versions that are not dependent on others. So, if I release one service, I don&apos;t need to release any other service. So this release cycle has to be completely independent.</p>
<p><br /></p>
<h2><strong>How Microservices Communicate With Each Other?</strong></h2>
<p><br /></p>
<p style="text-align: justify;">Now, if these services are isolated and self-contained, how do they connect? Because obviously, the payment service will need something from the user account to process the payment, or the checkout service will need something from the shopping cart, right?</p>
<p><br /></p>
<h3><strong>3 Ways of Microservices Communication </strong></h3>
<h3></h3>
<h4><strong>1.  API calls</strong></h4>
<p style="text-align: justify;">A widespread way for microservice communication is using API calls. So, each service has an endpoint on which it accepts requests from other services. Services can talk to each other by sending HTTP requests on these endpoints. This is a <strong>synchronous communication</strong> where one service sends a request to another service and waits for the response. So, the user account service can send an HTTP request to the payment service on its API endpoint and vice versa.</p>
<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/117345_bef1212d68b242abadca834cc6c77258~mv2.png/v1/fit/w_726,h_402,al_c,q_80/file.png"title="HTTP Requests"alt="Http Requests"></figure>
<h4><strong>2. Message Broker</strong></h4>
<p style="text-align: justify;">Another common way of communication between microservices is using a message broker with <strong>asynchronous communication</strong>. Here, services will send messages first to the intermediary message service or a broker such as RabbitMQ for example. Then the message broker will forward that message to the respective service. So again, the user account will send the message to the broker saying, &quot;Please pass this message on to the payment service,&quot; and the message broker will then forward that message to the payment service.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_b8c43db31af849a1a5d9f764febfd9f7~mv2.png/v1/fit/w_1000,h_810,al_c,q_80/file.png"title="Message Broker with asynchronous communication"alt="Message Broker with asynchronous communication"></figure>
<p><br /></p>
<h4><strong>3. Service Mesh</strong></h4>
<p style="text-align: justify;">A third way of communication between microservices, which is becoming popular, especially in the field of Kubernetes, is using a service mesh. With service mesh, a helper service takes over the complete communication logic. So, you don&apos;t have to code this logic into the microservices and have this communication logic delegated to this external service.</p>
<figure><img src="https://static.wixstatic.com/media/117345_0c6c1ee9d3a847509282e20f34615895~mv2.png/v1/fit/w_727,h_408,al_c,q_80/file.png"title="Service Mesh with Sidecar Pattern"alt="Service Mesh with Sidecar Pattern"></figure>
<p>To learn about Service Mesh, you can check out my Youtube video on that: <u><a href="https://youtu.be/16fgzklcF7Y" target="_blank">Istio and Service Mesh - simple explained in 15 mins</a></u> </p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;">These are different communication options, and since the services are all isolated and talk to each other either with API calls or using additional services, you can even develop each service with a different programming language. You can have dedicated teams for each service that can choose their own technology stack and work on their service without affecting or being affected by other service teams. And this is exactly the most important advantage of microservices architecture compared to the monolith.</p>
<p><br /></p>
<h2><strong>Downsides of Microservices ❌</strong></h2>
<p><br /></p>
<p style="text-align: justify;">However, these benefits come with a price. While microservices make developing and deploying applications more straightforward in many aspects, they also introduce some challenges that were not present. </p>
<p><br /></p>
<p style="text-align: justify;">When breaking down an application into multiple pieces introduces a lot of complexities and challenges. One of the main complexities is configuring the communication part between the services. A microservice may be down or unhealthy and not responding yet, while another service sends requests to its API, expecting a fulfilled response, which can result in unexpected results.  </p>
<figure><img src="https://static.wixstatic.com/media/e7182f_0839d017f9c24a4392bc9c0f1f961a2b~mv2.png/v1/fit/w_528,h_620,al_c,q_80/file.png"title="More complex to handle communication"alt="More complex to handle communication"></figure>
<p style="text-align: justify;">Additionally, with microservices deployed and scaled separately, it may become <strong>difficult to keep an overview</strong> and identify when a microservice is down or which service is actually down when something in the application is not working properly. Therefore, a proper configuration of the application setup and its components is necessary to ensure that the application functions well.</p>
<p><br /></p>
<p style="text-align: justify;">Fortunately, there are various tools available to make running microservices applications easier, despite their complexity:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_c7e287853cdf4fecbbaa5dc63a4600ca~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Many tools available to tackle the challenges"alt="Many tools available to tackle the challenges"></figure>
<p>The most popular one is Kubernetes, which is a perfect platform for running large microservices applications:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_41d42dc41d0d4ae5adb244e239ca143d~mv2.png/v1/fit/w_1000,h_998,al_c,q_80/file.png"title="Kubernetes automates the deployment and management of containerized services"alt="Kubernetes automates the deployment and management of containerized services"></figure>
<p><br /></p>
<h2><strong>CI/CD Pipeline for Microservices </strong></h2>
<p><br /></p>
<p style="text-align: justify;">An essential element of deploying microservices is a CI/CD pipeline. Many companies with microservices applications deploy multiple times a day, such as Amazon, Google, and Netflix. Those companies have applications with <strong>hundreds of microservices that they deploy thousands of times per day</strong>. Therefore, in the modern workplace, you will work with microservices and need to know how to configure the release process with a CI/CD pipeline for microservices.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_860f3863ff4d48ce9db62e7c63478d76~mv2.png/v1/fit/w_1000,h_682,al_c,q_80/file.png"title="CI/CD Pipeline for Microservices"alt="CI/CD Pipeline for Microservices"></figure>
<h2></h2>
<h2><strong>Monorepo vs Poly Repo - How to Manage the Dose for Microservices Application?</strong></h2>
<p><br /></p>
<p style="text-align: justify;">We said microservices are when application components are developed and deployed separately as individual micro-applications. So the question is, how do we manage the code for microservices applications in a Git repository, like GitLab, for example?  </p>
<p><br /></p>
<p style="text-align: justify;">With one project, it&apos;s simple:</p>
<figure><img src="https://static.wixstatic.com/media/117345_001d1672018f4a6e9e5c2d8f0e0a63f6~mv2.png/v1/fit/w_822,h_332,al_c,q_80/file.png"title="1 Git repository for 1 code base "alt="1 Git repository for 1 code base"></figure>
<p style="text-align: justify;">We just have one application and it gets its own Git repository. With microservices applications, we have two options for how the code is managed: <strong>monorepo, which stands for a single repository, and poly-repo, also known as &quot;multi-repository&quot;.</strong></p>
<p><br /></p>
<h3>Monorepo Explained - Benefits and Disadvantages</h3>
<p style="text-align: justify;">Monorepo or single repository, means having <strong>one GitLab repository for all the services</strong>. So, we would create one project for a mono repo. What&apos;s the difference here, or how do we structure multiple micro applications inside one application repository? Well, a common way is using folders:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_c4b4803da0304ef387fedb6daf303f60~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="1 code base with folders"alt="1 code base with folders"></figure>
<p style="text-align: justify;">You have folders for each service, like shopping cart, payment, notifications, etc.; all the codes for those services are in their respective folders.</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Benefits of Monorepo</strong></p>
<p style="text-align: justify;">✅Having a mono repo, meaning all the services are still in one repository, makes code <strong>management and development easier</strong>, because you only have to clone and work with one repository.</p>
<p><br /></p>
<p style="text-align: justify;">✅ Plus, if you have some shared code between the services, like Kubernetes manifest templates, Helm charts, or Docker Compose, you can put them in the project&apos;s root, and all the services can reuse them.</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Challenges of Monorepo</strong></p>
<p style="text-align: justify;">But mono repo also comes with some challenges.</p>
<p><br /></p>
<p style="text-align: justify;">❌ As I mentioned, the essential criterion of microservices is to be completely independent and isolated, so there should be no tight coupling between the services inside the code. It becomes easy to break this criterion when you have a mono repo. So, if you have junior developers with less experience in the mono repo setup, it&apos;s easier to make such mistakes and <strong>develop tightly coupled logic</strong> or code in your services.</p>
<p><br /></p>
<p style="text-align: justify;">❌ Another downside of the mono repo is that when the application becomes really big, cloning, fetching, and pushing become <strong>slow</strong> because your project is vast.</p>
<p><br /></p>
<p style="text-align: justify;">❌ Regarding the CI/CD pipeline, you can only create one pipeline for one project in most CI/CD platforms like GitLab CI/CD or Jenkins. </p>
<p style="text-align: justify;">So, you are building multiple services with a single project pipeline, and that means you need to <strong>add additional logic in your pipeline code</strong> that makes sure only to develop and deploy the service that has changed. If you make code changes in the payment service, your pipeline code should detect that, and only that service should be built, tested, and deployed. It is possible to do that, but more challenging.</p>
<p><br /></p>
<p style="text-align: justify;">❌ One more issue with a mono repo is that since you have just one main branch, because you have one repository, if developers of one of the services break the main branch, other services and their pipelines will be <strong>blocked</strong> as well.</p>
<p><br /></p>
<p style="text-align: justify;">But still there are a lot of companies, including huge ones like Google, who actually use mono repo for their applications.</p>
<p><br /></p>
<h2><strong>Polyrepo explained - Benefits and Disadvantages</strong></h2>
<p><br /></p>
<p style="text-align: justify;">The second option, which is probably a bit more preferred, is poly-repo or multiple repositories. With this approach, for each service, we create a separate git project, so the code is completely isolated:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_8b53d1d01ecb4c2fb4fba79107cc4203~mv2.jpg/v1/fit/w_937,h_1000,al_c,q_80/file.png"title="1 repository for each service"alt="1 repository for each service"></figure>
<h4>Benefits of poly-repo</h4>
<p style="text-align: justify;">✅ You can <strong>clone and work on them separately</strong>, because they are in separate repositories. Now, even though they are separate application repositories, they are still part of this bigger application. So, of course, you would want to still have some kind of connection between these reports for easy management and overview.</p>
<p><br /></p>
<p style="text-align: justify;">Suppose you&apos;re hosting your code repositories on GitLab, for example. In that case, you can use GitLab&apos;s feature of groups to <strong>group code for all the microservices</strong> that belong to the same application in one group to make managing those repositories easier. Essentially, you would create a GitLab repository group for your application called &quot;my-online-shop&quot;:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_7e8627245b03426fbd6bc2029cb8ab8d~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Using GitLab Group feature to group repositories"alt="Using GitLab Group feature to group repositories"></figure>
<p>Inside this group, you can create a separate project for each microservice that belongs to that application. If your company has multiple microservices applications, this will help keep an overview of what projects belong together.   But also, within the group, you can create secrets or other CI<strong> </strong>variables that all the projects can share in that group.</p>
<p><br /></p>
<p style="text-align: justify;">✅ Now, what about the CI/CD pipeline for a poly repo? For poly repo, the CI/CD configuration is more straightforward because you have <strong>one pipeline for each repository</strong>. So, no extra logic is needed to differentiate between the services.</p>
<p><br /></p>
<p style="text-align: justify;"><strong>Downsides of poly-repo</strong></p>
<p style="text-align: justify;">Of course, everything has advantages and disadvantages. So, for poly repo as well, you have some downsides.</p>
<p><br /></p>
<p style="text-align: justify;">❌Having application code in multiple repositories can make working on the project harder, especially if you need to change two or more services simultaneously, because a feature or bug fix affects various services. If you need to switch between the services often, this can also be tedious. </p>
<p><br /></p>
<p style="text-align: justify;">❌ Plus, searching for something across multiple projects from the code editor can take time and effort.</p>
<p><br /></p>
<p style="text-align: justify;">❌Also, in the poly repo, you can&apos;t share files in the project like Kubernetes or Helm manifest, Docker Compose, etc. You would have to duplicate them in each project&apos;s repository or create a dedicated project and reference them from there.</p>
<p><br /></p>
<h2><strong>Which one to choose when? It depends</strong></h2>
<p><br /></p>
<p style="text-align: justify;">As you see, both options have their advantages and disadvantages. Still, the general rule is that if you have a small project with just several microservices, you should stick to the mono repo and save the overhead of creating, managing, and checking out multiple repositories. On the other hand, if you have separate teams for each service, if you want complete isolation, a smaller code base to clone on pipelines, and so on, then the poly repo would be a better option.</p>
<p><br /></p>
<p style="text-align: justify;">Now, I hope this gave you a great introduction to microservices and now you understand what it is and why everyone is using it.  </p>
<p><br /></p>
<hr>
<p><br /></p>
<p style="text-align: center;"><u><a href="https://thenewstack.io/microservices/" target="_blank">You can learn more about Microservices on The New Stack!</a></u></p>
<p><br /></p>
<p><br /></p>
<h2><strong>GitLab CI/CD course </strong></h2>
<p style="text-align: justify;">If you want to know how to build CI/CD pipelines for microservices applications, you can check out my <u><a href="http://bit.ly/3GapJAE" target="_blank">complete GitLab CI/CD course</a></u>. In this course, I show hands-on demos of how to build <strong>CI/CD pipelines for microservice applications in a mono repo and poly-repo</strong>. I also show how to deploy a microservice application to a Kubernetes cluster. </p>
<p><br /></p>
<p style="text-align: justify;">You can also see a detailed overview of the curriculum here:</p>
<a href="https://youtu.be/F7WMRXLUQRM"><img src="https://i.ytimg.com/vi/F7WMRXLUQRM/maxresdefault.jpg" width="1280" height="720"></a>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow me</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram - Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn - for bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA?sub_confirmation=1" target="_blank">YouTube</a></u></p></li>
</ul>]]></content:encoded></item><item><title><![CDATA[What is a Docker Container? Container vs Image]]></title><description><![CDATA[Learn what a Docker container is technically and the difference of Images and Containers]]></description><link>https://www.techworld-with-nana.com/post/what-is-a-docker-container</link><guid isPermaLink="false">64024537f692031fa7208e02</guid><category><![CDATA[Docker]]></category><pubDate>Tue, 04 Apr 2023 11:49:04 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_89e0c032a1f94789ad70d24eca2b6ea6~mv2.webp/v1/fit/w_246,h_138,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p><br /></p>
<figure><img src="https://static.wixstatic.com/media/e7182f_89e0c032a1f94789ad70d24eca2b6ea6~mv2.webp/v1/fit/w_246,h_138,al_c,q_80/file.png"></figure>
<p><br /></p>
<p>In <u><a href="https://www.techworld-with-nana.com/post/what-is-docker" target="_blank">my previous article</a></u> you learnt what a container concept is. So now let&apos;s look at what a container is technically.</p>
<p><br /></p>
<h2><strong>What is a Container Technically?</strong></h2>
<p style="text-align: justify;">A container is made up of images. So we have layers of stacked images on top of each other and at the base of most containers, you would have a Linux-based image, which is either Alpine with a specific version or some other Linux distribution. Those <strong>base images need to be small</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">That&apos;s why most of them are Alpine.  Small images will ensure that the containers stay small in size, which is one of the advantages of using containers. So on top of the base image, you would have an application image, and this is a simplified diagram:</p>
<figure><img src="https://static.wixstatic.com/media/117345_3fa633b59892466e8226901ab1611b68~mv2.png/v1/fit/w_864,h_217,al_c,q_80/file.png"title="Linux-based Image"alt="Linux-based Image"></figure>
<p><span style="background-color: #ffffff;">Usually, you would have these intermediate images that will lead up to the actual application image that is going to run in the container. And, of course, on top of that, you will have all this configuration data.</span></p>
<p><br /></p>
<h3><strong>Example of Using a Docker Container</strong></h3>
<p>So now it&apos;s time to dive into a practical example of using a Docker container and how it looks when you install it, download it, and run it on your local machine. </p>
<p><br /></p>
<p>To explain how this works, let&apos;s head to the Docker Hub and search for PostgreSQL:</p>
<figure><img src="https://static.wixstatic.com/media/117345_7c12e4fa6b994f37bb67935b594eab97~mv2.png/v1/fit/w_975,h_407,al_c,q_80/file.png"title="Search for "postgresql" in Docker Hub"alt="Search for &quot;postgresql&quot; in Docker Hub"></figure>
<p>Here is an official docker image; I can see some of the versions, and I&apos;m looking specifically for older versions. For example 9.6 something, so I will pull that one:</p>
<figure><img src="https://static.wixstatic.com/media/117345_fea840c135a54a9186d85ef90cb7f0f9~mv2.png/v1/fit/w_968,h_569,al_c,q_80/file.png"title="Different Docker Image Versions"alt="Different Docker Image Versions"></figure>
<p style="text-align: justify;">So this is a Docker repository. This way, I can pull the image from the repository directly. Since it&apos;s a public repository, I don&apos;t have to log in, I don&apos;t have to provide any authentication credentials or anything.</p>
<p><br /></p>
<p style="text-align: justify;">I can just get started with a simple docker command without doing or configuring anything to access Docker Hub. So on my terminal, I can do a <em><span style="color: #ffffff;"><span style="background-color: #848181;"> docker pull </span></span></em>. I can even do a <em><span style="color: #ffffff;"><span style="background-color: #848181;"> docker run </span></span></em> and copy the image name. If I don&apos;t specify any version, it will just give me the latest. But I want a specific version, so I can provide a version with a column and start running it:</p>
<figure><img src="https://static.wixstatic.com/media/117345_84786f4ee6cd4e249b9d16703a303d46~mv2.png/v1/fit/w_975,h_166,al_c,q_80/file.png"title="Simple "docker run" command"alt="Simple &quot;docker run&quot; command"></figure>
<p style="text-align: justify;">So as you see below, the first line says &quot;<em>unable to find images locally</em>&quot;. So it knows that it has to go to the Docker Hub and pull it from there, and the following line says &quot;<em>pulling from library/postgres</em>&quot;:</p>
<figure><img src="https://static.wixstatic.com/media/117345_11e4796bc29740e9bf1186c313c7f9d1~mv2.png/v1/fit/w_975,h_383,al_c,q_80/file.png"title="Downloading Layers"alt="Downloading Layers"></figure>
<p style="text-align: justify;"><span style="color: #374151;"><span style="background-color: #ffffff;">You will see several hash symbols that indicate downloads. This brings us back to where I mentioned that </span></span><span style="color: #374151;"><span style="background-color: #ffffff;"><strong>Docker containers consist of multiple layers</strong></span></span><span style="color: #374151;"><span style="background-color: #ffffff;">, such as the Linux image layer and the application layers. Each of these layers is downloaded separately from the Docker Hub onto your machine. This helps to make the process more efficient and saves storage space.</span></span></p>
<p><br /></p>
<h3><strong>Example </strong></h3>
<p style="text-align: justify;">For example, if the image changes or I have to download a newer version of Postgres, what happens is that most of the layers are the same between those two applications or two versions of Postgres. So these layers will not be downloaded again. But only those layers that are different.</p>
<p><br /></p>
<p>This means,  now it will take around 10 or 15 minutes to download this 1 image, because I don&apos;t have any Postgres locally. </p>
<figure><img src="https://static.wixstatic.com/media/117345_b2672454d13f4476b164b016c32ff303~mv2.png/v1/fit/w_971,h_364,al_c,q_80/file.png"title="Downloading Image"alt="Downloading Image"></figure>
<p style="text-align: justify;">But if I were to download the next version, it would take less time, because some layers already exist on my local machine. ✅ </p>
<p><br /></p>
<p style="text-align: justify;">Here you see that it&apos;s already logging:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_841c776bff904ce589ab402190965116~mv2.png/v1/fit/w_1000,h_1000,al_c,q_80/file.png"title="Postgres application started within the container"alt="Postgres application started within the container"></figure>
<p style="text-align: justify;">The reason is that the command I ran here; the <em><span style="color: #ffffff;"><span style="background-color: #848181;"> docker run </span></span></em> container name  and version, it not only fetches or pulls the container, but it also starts it. So it executes the start script right away as soon as it downloads it, and here you see the output of the starting of the application.</p>
<p><br /></p>
<p style="text-align: justify;">It gives some output about starting the server and doing some configuration stuff and you can see that the database system is ready to accept connections.</p>
<p><br /></p>
<h3>List all running containers</h3>
<p style="text-align: justify;">Let&apos;s open the new tab and with <em><span style="color: #ffffff;"><span style="background-color: #848181;"> docker ps </span></span></em> command, you can see all the <strong>running containers</strong>. So here you see that Postgres 9:6 is running and it actually says &quot;image&quot;, right?</p>
<figure><img src="https://static.wixstatic.com/media/117345_c96ca0fd92b24906b5c53d55a2d9118a~mv2.png/v1/fit/w_953,h_224,al_c,q_80/file.png"title=""docker ps" command"alt="&quot;docker ps&quot; command"></figure>
<p style="text-align: justify;">So this is another crucial thing to understand when discussing containers.</p>
<p><br /></p>
<h2><strong>Two Technical Terms</strong></h2>
<p style="text-align: justify;">There are two definitions or two technical terms &quot;<strong>image</strong>&quot; and &quot;<strong>container</strong>&quot; in Docker. A lot of people confuse those two terms, so here I want to give you a straightforward distinction between the two.</p>
<p><br /></p>
<h3>Image<strong> </strong></h3>
<p style="text-align: justify;">The image is the <strong>actual package</strong>. The application package includes everything the program needs to work, like the settings and what it needs to run correctly. It is the <strong>artifact</strong> that is movable, which can be uploaded/downloaded to/from Docker repositories etc.</p>
<p><br /></p>
<h3>Container<strong> </strong></h3>
<p style="text-align: justify;">The container is when I pull that image on my local machine and start it. So the application inside starts, creating the container environment.</p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;">So that is the distinction.</p>
<p><br /></p>
<p style="text-align: justify;">So here it shows the active running containers with a container ID, image that it&apos;s running from and some entry commands that it executed and some other status information:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2785e54c195944c5a026507a8e68ab4d~mv2.png/v1/fit/w_1000,h_390,al_c,q_80/file.png"title="List of running containers"alt="List of running containers"></figure>
<p>So this means that PostgreSQL is now running on my local machine.</p>
<p style="text-align: justify;">Simple as that! </p>
<p><br /></p>
<h2><strong>Running multiple Docker containers of same application</strong></h2>
<p style="text-align: justify;"> </p>
<p style="text-align: justify;">If I would need another version of Postgres to run simultaneously on my local machine, I can just re-run the <em>docker run</em> command with the other version and it will download it from Docker Hub:</p>
<figure><img src="https://static.wixstatic.com/media/117345_21cfeba13f5a48f9be650182088eac05~mv2.png/v1/fit/w_975,h_419,al_c,q_80/file.png"title="Another Version of Postgres Running"alt="Another Version of Postgres Running"></figure>
<p style="text-align: justify;">But as explained earlier, some parts of the image are already on my computer, so I don&apos;t need to download them again. It just fetches the ones that are different. It means it takes less time.</p>
<p><br /></p>
<p style="text-align: justify;">When you execute <em><span style="color: #ffffff;"><span style="background-color: #848181;"> docker ps </span></span></em> command again, you will see two Postgres containers with different versions running. Both of them are running and there is no conflict between them:</p>
<figure><img src="https://static.wixstatic.com/media/117345_63ad24f16e2a4dafa72c0fd972dd85c4~mv2.png/v1/fit/w_975,h_243,al_c,q_80/file.png"title="2 Postgres versions running"alt="2 Postgres versions running"></figure>
<p style="text-align: justify;">You can <strong>run any number of applications with different versions</strong> with no problems. </p>
<p><br /></p>
<p style="text-align: justify;">We will go through how to use those containers in your application and the port configuration in some other configuration stuff later in this blog when we do a deep dive. But this is just for you to get the first visual image of how docker containers work, how they look, and how easily you can start them on your local machine without implementing a specific version of the Postgres application. ✅</p>
<p><br /></p>
<p>Watch this Docker Crash Course to learn everything about Docker to get started and use it in practice </p>
<a href="https://youtu.be/pg19Z8LL06w"><img src="https://i.ytimg.com/vi/pg19Z8LL06w/maxresdefault.jpg" width="1280" height="720"></a>
<p><br /></p>
<hr>
<p style="text-align: justify;">You can learn more about Docker and other DevOps technologies on my <u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">Youtube channel </a></u> </p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow me</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram - Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn - for bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA?sub_confirmation=1" target="_blank">YouTube</a></u></p></li>
</ul>
<p><br /></p>]]></content:encoded></item><item><title><![CDATA[Docker vs Virtual Machine (VM) - Key Differences explained]]></title><description><![CDATA[Understanding the key differences between Docker vs Virtual Machines]]></description><link>https://www.techworld-with-nana.com/post/docker-vs-virtual-machine</link><guid isPermaLink="false">640b580033cb36bf332a9c43</guid><category><![CDATA[Docker]]></category><pubDate>Mon, 03 Apr 2023 10:54:02 GMT</pubDate><enclosure url="https://static.wixstatic.com/media/e7182f_fc8ab1a936014bfb85c36786a4241984~mv2.webp/v1/fit/w_246,h_138,al_c,q_80/file.png" length="0" type="image/png"/><dc:creator>Nana Janashia</dc:creator><content:encoded><![CDATA[<p style="text-align: justify;">When I started learning Docker, one of my first questions was: &quot;What&apos;s the difference between Docker and Oracle VirtualBox?&quot; </p>
<p><br /></p>
<p style="text-align: justify;">So in this blog, I&apos;ll explain the difference by showing you <strong>how Docker works on an operating system level and comparing it to how a virtual machine works</strong>.</p>
<p><br /></p>
<p style="text-align: justify;">To understand how Docker works, let&apos;s first look at how an operating system is made up. An operating system has two layers: the operating system kernel and the applications layer:</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_c272f7246ac94521b2cdb2c9fad63a94~mv2.png/v1/fit/w_890,h_594,al_c,q_80/file.png"title="Operating System Layers"alt="Operating System Layers"></figure>
<p style="text-align: justify;">The kernel communicates with hardware components like the CPU and memory. However, the applications run on top of the kernel. </p>
<p><br /></p>
<p style="text-align: justify;">For example, Linux OS has many distributions, like Ubuntu, Devian, Mint etc. and each has different graphical user interfaces, file systems, and applications. So even though they use the same Linux kernel, they implement different applications on top of that kernel.</p>
<p><br /></p>
<p style="text-align: justify;">Both Docker and virtual machines (VM) are virtualization tools.  So the question is...</p>
<p><br /></p>
<h2><strong>What Parts of the Operating System does Docker and VM Virtualize?</strong></h2>
<p><br /></p>
<h3><strong>Docker </strong></h3>
<p style="text-align: justify;">Docker virtualizes the applications layer of the operating system:</p>
<figure><img src="https://static.wixstatic.com/media/117345_64a37d970df643f3a3d634fbb71c91a8~mv2.png/v1/fit/w_663,h_643,al_c,q_80/file.png"title="Docker Virtualizing Parts"alt="Docker Virtualizing Parts"></figure>
<p style="text-align: justify;">When you download a Docker image, it contains the applications layer of the OS and other applications installed on top of it. Accordingly, <strong>Docker uses the host&apos;s kernel</strong>, because it doesn&apos;t have its own. </p>
<p><br /></p>
<h3><strong>VirtualBox or a Virtual Machine</strong></h3>
<figure><img src="https://static.wixstatic.com/media/117345_9ba32363a63d47c5b30359c2b1900160~mv2.png/v1/fit/w_730,h_645,al_c,q_80/file.png"title="Virtual Machine Virtualizing Parts"alt="Virtual Machine Virtualizing Parts"></figure>
<p>VirtualBox, or a virtual machine, on the other hand, has its own kernel and application layer. So it <strong>virtualizes the entire operating system</strong>. So it boots up its own kernel when you download a virtual machine image on your host.</p>
<h2></h2>
<h2><strong>What Does This Difference Between Docker and Virtual Machine Mean?</strong></h2>
<p>Let&apos;s explore some of the significant differences between Docker and virtual machines.</p>
<p><br /></p>
<h3><strong>1. Image Size</strong></h3>
<p>The difference between Docker and virtual machines means that Docker images are much smaller and faster than virtual machine images. The reason is that the Docker images have to implement just one layer.</p>
<p><br /></p>
<p>Docker images are usually a couple of megabytes, while virtual machine images can be a couple of gigabytes.</p>
<p><br /></p>
<h3><strong>2. Speed</strong></h3>
<p>Docker containers also start up much faster than virtual machines, because they only need to start the applications layer. In contrast, virtual machines need to start the entire operating system.</p>
<p><br /></p>
<h3><strong>3. Compatibility  </strong></h3>
<p>However, there is a compatibility issue with Docker. You can run a virtual machine image of any operating system on any other operating system host, but you can&apos;t do that with Docker, at least not directly.</p>
<figure><img src="https://static.wixstatic.com/media/e7182f_2f434c3e5fad43a08d5d59c6b6ecf87b~mv2.png/v1/fit/w_1000,h_630,al_c,q_80/file.png"title="Compatibility issue with Docker"alt="Compatibility issue with Docker"></figure>
<p>So what is the problem here?</p>
<p><br /></p>
<p>Let&apos;s say you have a Windows operating system with Windows kernel and its application layer and you want to run a Linux based Docker image directly on that Windows host.</p>
<p><br /></p>
<p>The problem here is that Linux based Docker image cannot use the windows kernel. It would need a Linux kernel to run, because you can&apos;t run a Linux application layer on a Windows kernel, so that&apos;s kind of an issue with Docker.</p>
<p><br /></p>
<h2><strong>Docker Desktop</strong></h2>
<p>However, when you&apos;re developing on Windows or Mac OS, you want to run various services, because most containers for the popular services are actually Linux based. Also interesting to note that Docker was originally written and built for Linux, but later Docker actually made an update and developed what&apos;s called &quot;<strong>Docker Desktop for Windows</strong>&quot; and Mac, which made it possible to run Linux based containers on Windows and Mac computers as well.</p>
<p><br /></p>
<p>So the way it works is that Docker Desktop uses a hypervisor layer with a lightweight Linux distribution on top of it to provide the needed Linux kernel and this way make running Linux based containers possible on Windows and Mac operating systems</p>
<p><br /></p>
<p>And by the way if you want to understand more about virtualization and how virtual machines work and what a hypervisor for example is, you can watch my video where I explain all of that in detail: <u><a href="https://youtu.be/mQP0wqNT_DI" target="_blank">Virtual Machines explained in 15 Mins </a></u> </p>
<p><br /></p>
<p>So this means for local development as an engineer, you would install Docker Desktop on your Windows or Mac OS computer to run Linux based images, which as I mentioned most of the popular services, databases etc are mostly Linux based, so you would need that. </p>
<h3></h3>
<h3></h3>
<p>Watch this Docker Crash Course to learn everything about Docker to get started and use it in practice </p>
<a href="https://youtu.be/pg19Z8LL06w"><img src="https://i.ytimg.com/vi/pg19Z8LL06w/maxresdefault.jpg" width="1280" height="720"></a>
<p><br /></p>
<hr>
<p style="text-align: justify;">You can learn more about Docker and other DevOps technologies on my <u><a href="https://www.youtube.com/c/techworldwithnana" target="_blank">Youtube channel </a></u> </p>
<p><br /></p>
<p><br /></p>
<p style="text-align: justify;"><strong>Like, share and follow me</strong>  for more content:</p>
<ul>
  <li><p style="text-align: justify;"><u><a href="https://www.instagram.com/techworld_with_nana/" target="_blank">Instagram - Posting many behind-the-scene stuff</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.linkedin.com/in/nana-janashia/" target="_blank">LinkedIn - for bi-weekly updates</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.facebook.com/groups/techworldwithnana" target="_blank">Private FB group</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://twitter.com/Njuchi_" target="_blank">Twitter</a></u> </p></li>
  <li><p style="text-align: justify;"><u><a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA?sub_confirmation=1" target="_blank">YouTube</a></u></p></li>
</ul>]]></content:encoded></item></channel></rss>